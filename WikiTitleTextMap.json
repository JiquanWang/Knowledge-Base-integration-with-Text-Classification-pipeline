{"Programming languages": "source code simple program written programming language output hello world message compiled run programming language formal constructed language designed communicate instructions machine particularly programming languages create programs control behavior machine express algorithms earliest programming languages preceded invention digital direct behavior machines jacquard looms player pianos thousands different programming languages created mainly field created year programming languages require computation specified imperative form sequence operations perform languages use forms program specification declarative form desired result specified achieve description programming language usually split components syntax form semantics meaning languages defined specification document example programming language specified iso standard languages perl dominant implementation treated reference definitions programming language notation writing programs specifications computation algorithm authors restrict term programming language languages express possible algorithms traits considered important constitutes programming language include function target programming language language write programs involve performing kind computation algorithm possibly control external devices printers disk drives robots example postscript programs frequently created program control printer display generally programming language computation possibly abstract machine generally accepted complete specification programming language includes description possibly idealized machine processor language practical contexts programming language involves consequently programming languages usually defined studied way programming languages differ natural languages natural languages interaction people programming languages allow humans communicate instructions machines abstractions programming languages usually contain abstractions defining manipulating data structures controlling flow execution practical necessity programming language support adequate abstractions expressed abstraction principle principle formulated recommendation programmer proper use abstractions expressive power theory computation classifies languages computations capable expressing turing complete languages implement set algorithms ansi iso sql charity examples languages turing complete called programming languages markup languages like xml html troff define structured data usually considered programming languages programming languages share syntax markup languages computational semantics defined xslt example turing complete xml dialect latex structuring documents contains turing complete subset term language interchangeably programming language usage terms varies authors including exact scope usage describes programming languages subset languages vein languages computing different goal expressing programs generically designated languages instance markup languages referred languages emphasize meant programming usage regards programming languages theoretical constructs programming abstract machines languages subset thereof runs physical computers finite hardware resources john reynolds emphasizes formal specification languages programming languages languages intended execution argues textual graphical input formats affect behavior programming languages despite fact commonly turing complete remarks ignorance programming language concepts reason flaws input formats history early developments programming languages designed communicate instructions written early high level programming language designed plankalk\u00fcl developed german konrad zuse implemented john mauchly short code proposed high level languages developed electronic unlike machine code short code statements represented mathematical expressions understandable form program translated machine code time ran making process slower running equivalent machine code manchester mark ran programs written autocode university manchester alick glennie developed autocode early programming language compiler automatically convert language machine code code compiler developed mark university manchester considered compiled high level programming language second autocode developed mark brooker called mark autocode brooker developed autocode ferranti mercury conjunction university manchester version edsac devised hartley university cambridge mathematical laboratory known edsac autocode straight development mercury autocode adapted local circumstances noted object code optimisation source language diagnostics advanced time contemporary separate thread development atlas autocode developed university manchester atlas machine early programming language devised grace hopper called flow matic developed univac remington rand period hopper business data processing customers uncomfortable mathematical notation early team wrote specification english programming language implemented prototype flow matic compiler publicly available early substantially complete flow matic major influence design cobol direct descendent aimaco actual use time language fortran developed ibm mid widely high level general purpose programming language refinement period late brought development major language paradigms use apl introduced array programming influenced functional programming algol refined structured procedural programming discipline language specification revised report algorithmic language algol model later language specifications written simula language designed support object oriented programming mid smalltalk followed purely object oriented language developed programming language remains popular prolog designed logic programming language ml built polymorphic type lisp pioneering statically typed functional programming languages languages spawned descendants modern programming languages count ancestry saw considerable debate merits structured programming programming languages designed support edsger dijkstra famous letter published communications acm argued goto statements eliminated higher level programming languages consolidation growth selection textbooks teach programming languages popular obscure thousands programming languages dialects designed history years relative consolidation combined object oriented systems programming united states government standardized ada systems programming language derived pascal intended use defense contractors japan vast sums spent investigating called fifth generation languages incorporated logic programming constructs functional languages community moved standardize ml lisp inventing new paradigms movements elaborated ideas invented previous decade important trend language design programming large scale systems increased focus use modules large scale organizational units code modula ada ml developed notable module systems wedded generic programming constructs rapid growth internet mid created opportunities new languages perl originally unix scripting tool released common dynamic websites java came server programming bytecode virtual machines popular commercial settings promise write run ucsd pascal popular time early developments fundamentally novel refinements existing languages paradigms largely based family programming languages programming language evolution continues industry research current directions include security reliability verification new kinds modularity mixins delegates aspects database integration microsoft linq gls examples languages domain specific sql manipulates returns sets data scalar values canonical programming languages perl example document hold multiple gl programs multiple javascript programs perl code use variable interpolation document support multi language programming elements programming languages primitive building blocks description data processes transformations applied like addition numbers selection item collection primitives defined syntactic semantic rules structure meaning respectively syntax parse tree python code inset tokenization syntax highlighting aid programmers recognizing elements source code language python programming language surface form known syntax programming languages purely textual use sequences text including words numbers punctuation like written natural languages hand programming languages graphical nature visual relationships symbols specify program syntax language describes possible combinations symbols form syntactically correct program meaning given combination symbols handled semantics formal hard coded reference implementation languages textual article discusses textual syntax programming language syntax usually defined combination regular expressions lexical structure backus naur form grammatical structure simple grammar based lisp expression atom list atom number symbol number symbol list expression grammar specifies following expression atom list atom number symbol number unbroken sequence decimal digits optionally preceded plus minus sign symbol letter followed zero characters excluding whitespace list matched pair parentheses zero expressions inside following examples formed token sequences grammar syntactically correct programs semantically correct syntactically correct programs nonetheless ill formed language rules depending language specification soundness implementation result error translation execution cases programs exhibit undefined behavior program defined language meaning intended person wrote natural language example possible assign meaning grammatically correct sentence sentence false colorless green ideas sleep furiously grammatically formed generally accepted meaning john married bachelor grammatically formed expresses meaning true following language fragment syntactically correct performs operations semantically defined operation meaning value having complex type im defined value null pointer complex null complex abs_p sqrt im type declaration line omitted program trigger error compilation variable defined program syntactically correct type declarations provide semantic information grammar needed specify programming language classified position chomsky hierarchy syntax programming languages specified type grammar context free grammars languages including perl lisp contain constructs allow execution parsing phase languages constructs allow programmer alter behavior parser syntax analysis undecidable problem generally blur distinction parsing execution contrast lisp macro perl begin blocks contain general computations macros merely string replacements require code execution semantics term semantics refers meaning languages opposed form syntax static semantics static semantics defines restrictions structure valid texts hard impossible express standard syntactic formalisms compiled languages static semantics essentially include semantic rules checked compile time examples include checking identifier declared languages require declarations labels arms case statement distinct important restrictions type like checking identifiers appropriate context adding integer function subroutine calls appropriate number type arguments enforced defining rules logic called type forms static analyses like data flow analysis static semantics newer programming languages like java definite assignment analysis form data flow analysis static semantics dynamic semantics data specified machine instructed perform operations data example semantics define strategy expressions evaluated values manner control structures conditionally execute statements dynamic semantics known execution semantics language defines constructs language produce program behavior ways defining execution semantics natural language specify execution semantics languages commonly practice significant academic research went formal semantics programming languages allow execution semantics specified formal manner results field research seen limited application programming language design implementation outside academia type type defines programming language classifies values expressions types manipulate types interact goal type verify usually enforce certain level correctness programs written language detecting certain incorrect operations decidable type involves trade rejects incorrect programs prohibit correct albeit unusual programs order bypass downside number languages type loopholes usually unchecked casts programmer explicitly allow normally disallowed operation different types typed languages type type check programs number languages usually functional ones infer types relieving programmer need write type annotations formal design study type systems known type theory typed versus untyped languages language typed specification operation defines types data operation applicable implication applicable types example data represented text quotes string programming languages dividing number string meaning rejected compilers invalid operation detected program compiled static type checking rejected compiler compilation error message detected program run dynamic type checking resulting run time exception languages allow function called exception handler written handle exception example return result special case typed languages single type languages scripting markup languages rexx sgml data type commonly character strings symbolic numeric data contrast untyped language assembly languages allows operation performed data generally considered sequences bits lengths high level languages untyped include bcpl tcl varieties forth practice languages considered typed point view type theory verifying rejecting operations modern languages offer degree typing production languages provide means bypass subvert type trading type safety finer control program execution casting static versus dynamic typing static typing expressions types determined prior program executed typically compile time example integer expressions passed function expects string stored variable defined hold dates statically typed languages manifestly typed type inferred case programmer explicitly write types certain textual positions example variable declarations second case compiler infers types expressions declarations based context mainstream statically typed languages java manifestly typed complete type inference traditionally associated mainstream languages haskell ml manifestly typed languages support partial type inference example java infer types certain limited cases additionally programming languages allow types automatically converted types example int program expects float dynamic typing called latent typing determines type safety operations run time words types associated run time values textual expressions type inferred languages dynamically typed languages require programmer write explicit type annotations expressions things permit single variable refer values different types different points program execution type errors automatically detected piece code actually executed potentially making debugging difficult lisp perl python javascript ruby dynamically typed weak strong typing weak typing allows value type treated example treating string number occasionally useful allow kinds program faults undetected compile time run time strong typing prevents attempt perform operation wrong type value raises error strongly typed languages termed type safe safe alternative definition weakly typed refers languages perl javascript permit large number implicit type conversions javascript example expression implicitly converts number conversion succeeds null undefined array string letters implicit conversions useful mask programming errors strong static generally considered orthogonal concepts usage literature differs use term strongly typed mean strongly statically typed confusingly mean simply statically typed called strongly typed weakly statically typed odd professional programmers weakly statically typed notice use generic pointer void pointer allow casting pointers pointers needing explicit cast extremely similar casting array bytes kind datatype explicit cast int char standard library run time programming languages associated core library known standard library especially included published language standard conventionally available implementations language core libraries typically include definitions commonly algorithms data structures mechanisms input output line language core library differs language language cases language designers treat library separate entity language language core library treated language users language specifications require library available implementations languages designed meanings certain syntactic constructs described referring core library example java string literal defined instance java lang string class similarly smalltalk anonymous function expression block constructs instance library blockcontext class conversely scheme contains multiple coherent subsets suffice construct rest language library macros language designers bother portions language implemented language constructs implemented parts library design implementation programming languages share properties natural languages related purpose vehicles communication having syntactic form separate semantics showing language families related languages branching artificial constructs differ fundamental ways languages evolved usage significant difference programming language fully described studied entirety precise finite definition contrast natural languages changing meanings given users different communities constructed languages artificial languages designed ground specific purpose lack precise complete semantic definition programming language programming languages designed scratch altered meet new needs combined languages eventually fallen disuse attempts design universal programming language serves purposes failed generally accepted filling role need diverse programming languages arises diversity contexts languages programs range tiny scripts written individual hobbyists huge systems written hundreds programmers programmers range expertise novices need simplicity experts comfortable considerable complexity programs balance speed size simplicity systems ranging supercomputers programs written change generations undergo continual modification programmers simply differ tastes accustomed discussing problems expressing particular language common trend development programming languages add ability solve problems higher level abstraction earliest programming languages tied closely underlying hardware new programming languages developed features added let programmers express ideas remote simple translation underlying hardware instructions programmers tied complexity programs computing effort programmer lets write functionality time unit natural language programming proposed way eliminate need specialized language programming goal remains distant benefits open debate edsger dijkstra took position use formal language essential prevent introduction meaningless constructs dismissed natural language programming foolish alan perlis similarly dismissive idea hybrid approaches taken structured english sql language designers users construct number artifacts govern enable practice programming important artifacts language specification implementation specification specification programming language artifact language users implementors use agree piece source code valid program language behavior shall programming language specification forms including following explicit definition syntax static semantics execution semantics language syntax commonly specified formal grammar semantic definitions written natural language language formal semantics standard ml scheme specifications description behavior translator language fortran specifications syntax semantics language inferred description written natural formal language reference model implementation written language specified prolog ansi rexx syntax semantics language explicit behavior reference implementation implementation implementation programming language provides way write programs language execute configurations hardware software broadly approaches programming language implementation compilation interpretation generally possible implement language technique output compiler executed hardware program called interpreter implementations use interpreter approach distinct boundary compiling interpreting instance implementations basic compile execute source line time programs executed directly hardware usually run orders magnitude faster interpreted software technique improving performance interpreted programs time compilation virtual machine execution translates blocks bytecode going machine code direct execution hardware proprietary languages commonly programming languages fully open specifications implementations programming languages exist proprietary programming languages implementation available single vendor claim proprietary language intellectual property proprietary programming languages commonly domain specific languages internal scripting languages single product proprietary languages internally vendor available external users programming languages exist border proprietary open example oracle corporation asserts proprietary rights aspects java programming language microsoft programming language open implementations parts common language runtime clr closed environment proprietary languages widely spite proprietary nature examples include matlab vbscript languages transition closed open example erlang originally ericsson internal programming language usage thousands different programming languages created mainly computing field software commonly built programming languages programming languages differ forms human expression require greater degree precision completeness natural language communicate people human authors speakers ambiguous small errors expect intent understood figuratively speaking computers exactly told understand code programmer intended write combination language definition program program inputs fully specify external behavior occurs program executed domain control program hand ideas algorithm communicated humans precision required execution pseudocode interleaves natural language code written programming language programming language provides structured mechanism defining pieces data operations transformations carried automatically data programmer uses abstractions present language represent concepts involved computation concepts represented collection simplest elements available called primitives programming process programmers combine primitives compose new programs adapt existing ones new uses changing environment programs executed batch process human interaction user type commands interactive session interpreter case commands simply programs execution chained language run commands interpreter unix shell command line interface compiling called scripting language measuring language usage difficult determine programming languages widely usage means varies context language occupy greater number programmer hours different lines code consume cpu time languages popular particular kinds applications example cobol strong corporate data center large mainframes fortran scientific engineering applications ada aerospace transportation military real time embedded applications embedded applications operating systems languages regularly write different kinds applications methods measuring language popularity subject different bias measured proposed counting number job advertisements mention language number books sold teach language estimates number existing lines code written language underestimate languages public searches counts language references language web search engine combining averaging information internet sites langpop com claims popular programming languages descending order overall popularity java php javascript python shell ruby objective taxonomies overarching classification scheme programming languages given programming language usually single ancestor language languages commonly arise combining elements predecessor languages new ideas circulation time ideas originate language diffuse family related languages leap suddenly familial gaps appear entirely different family task complicated fact languages classified multiple axes example java object oriented language encourages object oriented organization concurrent language contains built constructs running multiple threads parallel python object oriented scripting language broad strokes programming languages divide programming paradigms classification intended domain use general purpose programming languages distinguished domain specific programming languages traditionally programming languages regarded describing computation terms imperative sentences issuing commands generally called imperative programming languages great deal research programming languages aimed blurring distinction program set instructions program assertion desired answer main feature declarative programming refined paradigms include procedural programming object oriented programming functional programming logic programming languages hybrids paradigms multi paradigmatic assembly language paradigm direct model underlying machine architecture purpose programming languages considered general purpose programming languages scripting languages domain specific languages concurrent distributed languages combination general purpose languages designed largely educational goals programming language classified factors unrelated programming paradigm instance programming languages use english language keywords minority languages classified deliberately esoteric comparison programming languages basic instructions comparison programming languages programming science outline science educational programming language invariant based programming lists programming languages list programming language researchers programming languages popular websites literate programming dialect computing programming language theory pseudocode scientific language software engineering list software engineering topics references reading raphael finkel advanced programming language design addison wesley daniel friedman mitchell wand christopher haynes essentials programming languages mit press maurizio gabbrielli simone martini programming languages principles paradigms springer david gelernter suresh jagannathan programming linguistics mit press ellis horowitz ed programming languages grand tour rd ed ellis horowitz fundamentals programming languages shriram krishnamurthi programming languages application interpretation online publication bruce maclennan principles programming languages design evaluation implementation oxford university press john mitchell concepts programming languages cambridge university press benjamin pierce types programming languages mit press terrence pratt marvin zelkowitz programming languages design implementation th ed prentice hall peter salus handbook programming languages vols macmillan ravi sethi programming languages concepts constructs nd ed addison wesley michael scott programming language pragmatics morgan kaufmann publishers robert sebesta concepts programming languages th ed addison wesley franklyn turbak david gifford mark sheldon design concepts programming languages mit press peter van roy seif haridi concepts techniques models programming mit press david watt programming language concepts paradigms prentice hall david watt muffy thomas programming language syntax semantics prentice hall david watt programming language processors prentice hall david watt programming language design concepts john wiley sons external links bottles beer collection implementations languages", "Real time and embedded systems": "modeling analysis real time embedded systems known marte omg standard modeling real time embedded applications uml description uml modeling language extended omg consortium support model driven development real time embedded application extension defined uml profile called marte modeling analysis real time embedded systems consists mainly parts core framework defining basic concepts required support real time embedded domain specialization refinement core package support pure modeling applications hardware software platform modeling second specialization refinement core package support quantitative analysis uml models specially schedulability performance analysis gathering marte annexes defining textual language value specification uml models conflating standard marte model libraries dedicated rt modeling marte specification publicly available omg web site currently open source tools available modeling marte profile modelio provides open source modeling environment designing high level uml models marte profile provides guidelines utilization marte profile open source implementation based eclipse marte profile available papyrus uml running eclipse uml plug open source tool uml papyrus core core marte chapters coreelements non functional properties chapter specifies notations define kinds values related physical quantities time mass energy time chapter defines rich model time supports definition physical logical time properties comes companion language called ccsl defined annex generic resource modeling chapter offers extensions required model general platform executing real time embedded applications allocation modeling finally chapter defines notion allocation allocate application elements execution platforms specific attention given maintain compatibility sysml allocation mechanism notes", "Multimedia": "multimedia refers content uses combination different content forms contrasts media use rudimentary displays text traditional forms printed hand produced material multimedia includes combination text audio images animation video interactive content forms multimedia recorded played displayed dynamic interacted accessed information content processing devices computerized electronic devices live performance multimedia devices electronic media devices store experience multimedia content multimedia distinguished mixed media fine art including audio example broader scope term rich media synonymous interactive multimedia hypermedia scales media content multimedia application examples individual content forms combined multimedia link writing link sound recording reproduction link image text audio images link animation link footage link interactivity animation video footage interactivity categorization multimedia multimedia broadly divided linear non linear categories linear active content progresses navigational control viewer cinema presentation non linear uses interactivity control progress video game self paced based training hypermedia example non linear content multimedia presentations live recorded recorded presentation allow interactivity navigation live multimedia presentation allow interactivity interaction presenter performer major characteristics multimedia multimedia presentations viewed person stage projected transmitted played locally media player broadcast live recorded multimedia presentation broadcasts recordings analog digital electronic media technology digital online multimedia downloaded streamed streaming multimedia live demand multimedia games simulations physical environment special effects multiple users online network locally offline game simulator formats technological digital multimedia intended enhance users experience example easier faster convey information entertainment art transcend everyday experience lasershow live multimedia performance enhanced levels interactivity possible combining multiple forms media content online multimedia increasingly object oriented data driven enabling applications collaborative end user innovation personalization multiple forms content time examples range multiple forms content web sites like photo galleries images pictures title text user updated simulations efficients events illustrations animations videos modifiable allowing multimedia experience altered reprogramming addition seeing hearing haptic technology enables virtual objects felt emerging technology involving illusions taste smell enhance multimedia experience terminology history term term multimedia coined singer artist bob goldstein later bobb goldsteinn promote july opening lightworks oursin southampton long island goldstein aware american artist named dick higgins years previously discussed new approach art making called intermedia august richard albarino variety borrowed terminology reporting brainchild songscribe comic bob washington square goldstein lightworks latest multi media music cum visuals debut discoth\u00e8que fare years later term multimedia appropriated work political consultant david sawyer husband iris sawyer goldstein producers oursin multimedia multi image setup ford new car announcement august detroit mi intervening years word taken different meanings late term referred presentations consisting multi projector slide shows timed audio track multimedia took current meaning edition mcgraw hill multimedia making work tay vaughan declared multimedia combination text graphic art sound animation video delivered allow user viewer project control elements delivered interactive multimedia provide structure linked elements user navigate interactive multimedia hypermedia german language society gesellschaft f\u00fcr deutsche sprache decided recognize word significance ubiquitousness awarding title word year institute summed rationale stating multimedia central word wonderful new media world common usage multimedia refers electronically delivered combination media including video images audio text way accessed interactively content web today falls definition understood millions computers marketed called multimedia computers incorporated cd rom drive allowed delivery megabytes video picture audio data era saw boost production educational multimedia cd roms word usage context media plural medium term multimedia multiple occurrences form media collection audio cds important word multimedia exclusively multiple forms media content term multimedia ambiguous static content paper book considered multimedia contains pictures text considered interactive user interacts turning pages books considered non linear pages accessed non sequentially term video exclusively motion photography ambiguous multimedia terminology video file format delivery format presentation format instead footage distinguish motion photography animation rendered motion imagery multiple forms information content considered modern forms presentation audio video likewise single forms information content single methods information processing non interactive audio called multimedia distinguish static media active media fine arts example leda luss luyken modulart brings key elements musical composition film world painting variation theme movement picture making modulart interactive multimedia form art performing arts considered multimedia considering performers props multiple forms content media gesellschaft f\u00fcr deutsche sprache chose multimedia german word year usage application powerpoint corporate presentations combine forms media content virtual reality uses multimedia content applications delivery platforms multimedia virtually limitless vvo multimedia terminal dresden wtc germany multimedia finds application areas including limited advertisements art education entertainment engineering medicine mathematics business scientific research spatial temporal applications examples follows creative industries creative industries use multimedia variety purposes ranging fine arts entertainment commercial art journalism media software services provided industries listed individual multimedia designer cover spectrum career request skills range technical analytical creative commercial uses electronic old new media commercial artists graphic designers multimedia exciting presentations grab attention advertising business business interoffice communications developed creative services firms advanced multimedia presentations simple slide shows sell ideas liven training commercial multimedia developers hired design governmental services nonprofit services applications entertainment fine arts addition multimedia heavily entertainment industry especially develop special effects movies animations vfx animation multimedia games popular pastime software programs available cd roms online video games use multimedia features multimedia applications allow users actively participate instead sitting passive recipients information called interactive multimedia arts multimedia artists minds able blend techniques different media way incorporates interaction viewer relevant peter greenaway melding cinema opera sorts digital media approach entails creation multimedia displayed traditional fine arts arena art gallery multimedia display material volatile survivability content strong traditional media digital recording material durable infinitely reproducible perfect copies time education education multimedia produce based training courses popularly called cbts reference books like encyclopedia almanacs cbt lets user series presentations text particular topic associated illustrations information formats edutainment combination education entertainment especially multimedia entertainment learning theory past decade expanded dramatically introduction multimedia lines research evolved cognitive load multimedia learning list goes possibilities learning instruction nearly endless idea media convergence major factor education particularly higher education defined separate technologies voice telephony features data productivity applications video share resources interact synergistically creating new efficiencies media convergence rapidly changing curriculum universities world likewise changing availability lack thereof jobs requiring savvy technological skill english education middle school china invested assisted equipments contrast original objective achieved desired effect government schools families students spend lot time working improving scores hardly gain practical skills english education today gone vicious circle educators need consider perfect education improve students practical ability english efficient way class vivid multimedia teaching bring students class interact teacher subject multimedia teaching intuitive old ways teachers simulate situations real life circumstances teachers students learn class importantly teachers approaches stimulating students passion learning journalism newspaper companies trying embrace new phenomenon implementing practices work slow come major newspapers like new york times usa today washington post setting precedent positioning newspaper industry globalized world news reporting limited traditional media outlets freelance journalists use different new media produce multimedia pieces news stories engages global audiences tells stories technology develops new communication techniques media producers consumers common language project later renamed seattle globalist example type multimedia journalism production multimedia reporters mobile usually driving community cameras audio video recorders laptop computers referred mojos mo bile jo urnalist engineering software engineers use multimedia simulations entertainment training military industrial training multimedia software interfaces collaboration creative professionals software engineers industry industrial sector multimedia way help present information shareholders superiors coworkers multimedia helpful providing employee training advertising selling products world virtually unlimited web based technology mathematical scientific research mathematical scientific research multimedia mainly modeling simulation example scientist look molecular model particular substance manipulate arrive new substance representative research journals journal multimedia medicine medicine doctors trained looking virtual surgery simulate human body affected diseases spread viruses bacteria develop techniques prevent multimedia application like virtual surgeries help doctors practical training document imaging document imaging technique takes hard copy image document converts digital format example scanners disabilities ability media allows disabilities gain qualifications multimedia field pursue careers access wide array powerful communication forms miscellaneous europe reference organisation multimedia industry european multimedia associations convention emmac structuring information multimedia form multimedia represents convergence text pictures video sound single form power multimedia internet lies way information linked multimedia internet require completely new approach writing style writing appropriate line world highly optimized designed able quickly scanned readers good site specific purpose mind site good interactivity new technology useful attracting visitors site attractive innovative design function terms purpose easy navigate frequently updated fast download users view page view page time result multimedia users create mental model information structure conferences large number multimedia conferences main scholarly scientific conferences acm multimedia ieee icme international conference multimedia expo artmedia cross media multi image multimedia literacy multimedia messaging service multimedia search new media art postliterate society web documentary references external links history multimedia university calgary multimedia answers com", "Scientific computing": "computational science scientific computing scientific computation concerned constructing mathematical models quantitative analysis techniques computers analyze solve scientific engineering problems practical use typically application simulation forms computation numerical analysis theoretical science problems scientific disciplines field different theory laboratory experiment traditional forms science engineering scientific computing approach gain understanding mainly analysis mathematical models implemented computers scientists engineers develop programs application software model systems studied run programs sets input parameters cases models require massive amounts calculations usually floating point executed supercomputers distributed computing platforms numerical analysis important underpinning techniques computational science applications computational science problem domains computational science scientific computing include numerical simulations numerical simulations different objectives depending nature task simulated reconstruct understand known events earthquake tsunamis natural disasters predict future unobserved situations weather sub atomic particle behaviour primordial explosions model fitting data analysis appropriately tune models solve equations reflect observations subject model constraints oil exploration geophysics computational linguistics use graph theory model networks connecting individuals organizations websites biological systems computational optimization optimize known scenarios technical manufacturing processes end engineering machine learning methods algorithms algorithms mathematical methods computational science varied commonly applied methods include numerical analysis application taylor series convergent asymptotic series computing derivatives automatic differentiation ad computing derivatives finite differences graph theoretic suites high order difference approximations taylor series richardson extrapolation methods integration uniform mesh rectangle rule called midpoint rule trapezoid rule simpson rule runge kutta method solving ordinary differential equations monte carlo methods molecular dynamics linear programming branch cut branch bound numerical linear algebra computing lu factors gaussian elimination cholesky factorizations discrete fourier transform applications newton method space mapping time stepping methods dynamical systems programming languages algebra systems commonly mathematical aspects scientific computing applications include programming language tk solver matlab mathematica scilab gnu octave python programming language scipy pdl computationally intensive aspects scientific computing use variation fortran optimized algebra libraries blas lapack computational science application programs model real world changing conditions weather air flow plane automobile body distortions crash motion stars galaxy explosive device programs create logical mesh memory item corresponds area space contains information space relevant model example weather models item square kilometer land elevation current wind direction humidity temperature pressure program calculate likely state based current state simulated time steps solving equations operates repeat process calculate state term computational scientist skilled scientific computing person usually scientist engineer applied mathematician applies high performance computing different ways advance state art respective applied disciplines physics chemistry engineering scientific computing increasingly impacted areas including economics biology medicine computational science commonly considered mode science complementing adding experimentation observation theory essence computational science numerical algorithm computational mathematics fact substantial effort computational sciences devoted development algorithms efficient implementation programming languages validation computational results collection problems solutions computational science steeb hardy hardy stoop reproducibility open research computing complexity computational methods threat reproducibility research jon claerbout prominent pointing reproducible research requires archiving documenting raw data code obtain result nick barnes science code manifesto proposed principles followed software open science publication tomi kauppinen et al established defined linked open science approach interconnect scientific assets enable transparent reproducible research journals scientific journals accept software papers description reasonably mature software usually meet criterion novelty outside science journals dedicated scientific software established journals like elsevier physics communications publish papers open access described software usually gap new journal entitled open research computation announced closed having published single paper lack submissions probably excessive quality requirements new initiative launched journal open research software new journal dedicated replication computational results started github education scientific computation studied applied mathematics science program standard mathematics sciences engineering program institutions specialization scientific computation earned minor program varying levels increasingly bachelor master programs computational science schools offer ph computational science computational engineering computational science engineering scientific computation programs areas computational physics computational chemistry related fields bioinformatics cheminformatics chemometrics computational archaeology computational biology computational chemistry computational economics computational computational engineering computational finance computational fluid dynamics computational forensics computational geophysics computational informatics computational intelligence computational law computational linguistics computational mathematics computational mechanics computational neuroscience computational particle physics computational physics computational sociology computational statistics algebra environmental simulation financial modeling geographic information gis high performance computing machine learning network analysis numerical linear algebra numerical weather prediction pattern recognition scientific visualization computational science engineering comparison algebra systems list molecular modeling software list numerical analysis software list statistical packages timeline scientific computing simulated reality references additional sources hager wellein introduction high performance computing scientists engineers chapman hall hartmann practical guide simulations world scientific journal computational methods science technology open access polish academy sciences journal computational science discovery institute physics landau bordeianu jose paez survey computational physics introductory computational science princeton university press external links john von neumann institut computing nic juelich germany national center computational science oak ridge national laboratory educational materials undergraduate computational studies computational science national laboratories bachelor computational science university medellin colombia south america simulation optimization systems sos research laboratory mcmaster university hamilton", "Computer vision": "vision field includes methods acquiring processing analyzing understanding images general high dimensional data real world order produce numerical symbolic information forms decisions theme development field duplicate abilities human vision electronically perceiving understanding image image understanding seen disentangling symbolic information image data models constructed aid geometry physics statistics learning theory vision described enterprise automating integrating wide range processes representations vision perception scientific discipline vision concerned theory artificial systems extract information images image data forms video sequences views multiple cameras multi dimensional data medical scanner technological discipline vision seeks apply theories models construction vision systems sub domains vision include scene reconstruction event detection video tracking object recognition object pose estimation learning indexing motion estimation image restoration related fields relation vision fields areas artificial intelligence deal autonomous planning deliberation robotical systems navigate environment detailed understanding environments required navigate information environment provided vision acting vision sensor providing high level information environment robot artificial intelligence vision share topics pattern recognition learning techniques consequently vision seen artificial intelligence field science field general solid state physics field closely related vision vision systems rely image sensors detect electromagnetic radiation typically form visible infra red light sensors designed quantum physics process light interacts surfaces explained physics physics explains behavior optics core imaging systems sophisticated image sensors require quantum mechanics provide complete understanding image formation process measurement problems physics addressed vision example motion fluids field plays important role neurobiology specifically study biological vision century extensive study eyes neurons brain structures devoted processing visual stimuli humans animals led coarse complicated description real vision systems operate order solve certain vision related tasks results led subfield vision artificial systems designed mimic processing behavior biological systems different levels complexity learning based methods developed vision neural net deep learning based image feature analysis classification background biology strands vision research closely related study biological vision strands ai research closely tied research human consciousness use stored knowledge interpret integrate utilize visual information field biological vision studies models physiological processes visual perception humans animals vision hand studies describes processes implemented software hardware artificial vision systems exchange biological vision proven fruitful fields field related vision signal processing methods processing variable signals typically temporal signals extended natural way processing variable signals multi variable signals vision specific nature images methods developed vision counterpart processing variable signals multi dimensionality signal defines subfield signal processing vision mentioned views vision related research topics studied purely mathematical point view example methods vision based statistics optimization geometry finally significant field devoted implementation aspect vision existing methods realized combinations software hardware methods modified order gain processing speed losing performance fields closely related vision image processing image analysis machine vision significant overlap range techniques applications cover implies basic techniques developed fields identical interpreted field different names hand appears necessary research groups scientific journals conferences companies present market belonging specifically fields distinguish fields presented vision ways inverse graphics graphics produces image data models vision produces models image data trend combination disciplines explored augmented reality following appear relevant taken universally accepted image processing image analysis tend focus images transform image pixel wise operations contrast enhancement local operations edge extraction noise removal geometrical transformations rotating image implies image processing analysis require assumptions produce interpretations image content vision includes analysis images analyzes scene projected images reconstruct structure information scene images vision relies complex assumptions scene depicted image machine vision process applying range technologies methods provide imaging based automatic inspection process control robot guidance industrial applications machine vision tends focus applications mainly manufacturing vision based autonomous robots systems vision based inspection measurement implies image sensor technologies control theory integrated processing image data control robot real time processing emphasised means efficient implementations hardware software implies external conditions lighting controlled machine vision general vision enable use different algorithms field called imaging primarily focus process producing images deals processing analysis images example medical imaging includes substantial work analysis image data medical applications finally pattern recognition field uses methods extract information signals general mainly based statistical approaches artificial neural networks significant field devoted applying methods image data photogrammetry overlaps vision vs stereo vision applications vision applications range tasks industrial machine vision systems inspect bottles speeding production line research artificial intelligence computers robots comprehend world vision machine vision fields significant overlap vision covers core technology automated image analysis fields machine vision usually refers process combining automated image analysis methods technologies provide automated inspection robot guidance industrial applications vision applications computers pre programmed solve particular task methods based learning increasingly common examples applications vision include systems controlling processes industrial robot navigation autonomous vehicle mobile robot detecting events visual surveillance people counting organizing information indexing databases images image sequences modeling objects environments medical image analysis topographical modeling interaction input device human interaction automatic inspection manufacturing applications darpa visual media reasoning concept video prominent application fields medical vision medical image processing area characterized extraction information image data purpose making medical diagnosis patient generally image data form microscopy images ray images angiography images ultrasonic images tomography images example information extracted image data detection tumours malign changes measurements organ dimensions blood flow application area supports medical research providing new information structure brain quality medical treatments applications vision medical area includes enhancement images interpreted humans example ultrasonic images ray images reduce influence noise second application area vision industry called machine vision information extracted purpose supporting manufacturing process example quality control details final products automatically inspected order defects example measurement position orientation details picked robot arm machine vision heavily agricultural process remove undesirable food stuff bulk material process called optical sorting military applications probably largest areas vision obvious examples detection enemy soldiers vehicles missile guidance advanced systems missile guidance send missile area specific target target selection missile reaches area based locally acquired image data modern military concepts battlefield awareness imply sensors including image sensors provide rich set information combat scene support strategic decisions case automatic processing data reduce complexity fuse information multiple sensors increase reliability artist concept rover mars example unmanned land based vehicle notice stereo cameras mounted rover newer application areas autonomous vehicles include submersibles land based vehicles small robots wheels cars trucks aerial vehicles unmanned aerial vehicles uav level autonomy ranges fully autonomous unmanned vehicles vehicles vision based systems support driver pilot situations fully autonomous vehicles typically use vision navigation knowing producing map environment slam detecting obstacles detecting certain task specific events uav looking forest fires examples supporting systems obstacle warning systems cars systems autonomous landing aircraft car manufacturers demonstrated systems autonomous driving cars technology reached level market ample examples military autonomous vehicles ranging advanced missiles uavs recon missions missile guidance space exploration autonomous vehicles vision nasa mars exploration rover esa exomars rover application areas include support visual effects creation cinema broadcast camera tracking matchmoving surveillance typical tasks vision application areas described employ range vision tasks defined measurement problems processing problems solved variety methods examples typical vision tasks presented recognition classical problem vision image processing machine vision determining image data contains specific object feature activity different varieties recognition problem described literature object recognition called object classification pre specified learned objects object classes recognized usually positions image poses scene google goggles likethat provide stand programs illustrate function identification individual instance object recognized examples include identification specific person face fingerprint identification handwritten digits identification specific vehicle detection image data scanned specific condition examples include detection possible abnormal cells tissues medical images detection vehicle automatic road toll detection based relatively simple fast computations finding smaller regions interesting image data analyzed computationally demanding techniques produce correct interpretation currently best algorithms tasks based convolutional neural networks illustration capabilities given imagenet large scale visual recognition challenge benchmark object classification detection millions images hundreds object classes performance convolutional neural networks imagenet tests close humans best algorithms struggle objects small small ant stem flower person holding quill hand trouble images distorted filters increasingly common phenomenon modern digital cameras contrast kinds images rarely trouble humans humans tend trouble issues example good classifying objects fine grained classes particular breed dog species bird convolutional neural networks handle ease specialized tasks based recognition exist content based image retrieval finding images larger set images specific content content specified different ways example terms similarity relative target image images similar image terms high level search criteria given text input images contains houses taken winter cars vision people counter purposes public places malls shopping centres pose estimation estimating position orientation specific object relative camera example application technique assisting robot arm retrieving objects conveyor belt assembly line situation picking parts bin optical character recognition ocr identifying characters images printed handwritten text usually view encoding text format amenable editing indexing ascii code reading reading codes data matrix qr codes facial recognition shape recognition technology srt people counter systems differentiating human beings head shoulder patterns objects motion analysis tasks relate motion estimation image sequence processed produce estimate velocity points image scene camera produces images examples tasks egomotion determining rigid motion rotation translation camera image sequence produced camera tracking following movements usually smaller set points objects vehicles humans image sequence optical flow determine point image point moving relative image plane apparent motion motion result corresponding point moving scene camera moving relative scene scene reconstruction given typically images scene video scene reconstruction aims computing model scene simplest case model set points sophisticated methods produce complete surface model advent imaging requiring motion scanning related processing algorithms enabling rapid advances field grid based sensing acquire images multiple angles algorithms available stitch multiple images point clouds models image restoration aim image restoration removal noise sensor noise motion blur images simplest possible approach noise removal types filters low pass filters median filters sophisticated methods assume model local image structures look like model distinguishes noise analysing image data terms local image structures lines edges controlling filtering based local information analysis step better level noise removal usually obtained compared simpler approaches example field inpainting vision methods organization vision highly application dependent systems stand applications solve specific measurement detection problem constitute sub larger design example contains sub systems control mechanical actuators planning information databases man machine interfaces specific implementation vision depends functionality pre specified learned modified operation functions unique application typical functions vision systems image acquisition digital image produced image sensors types light sensitive cameras include range sensors tomography devices radar ultra sonic cameras depending type sensor resulting image data ordinary image volume image sequence pixel values typically correspond light intensity spectral bands gray images colour images related physical measures depth absorption reflectance sonic electromagnetic waves nuclear magnetic resonance pre processing vision method applied image data order extract specific piece information usually necessary process data order assure satisfies certain assumptions implied method examples sampling order assure image coordinate correct noise reduction order assure sensor noise introduce false information contrast enhancement assure relevant information detected scale space representation enhance image structures locally appropriate scales feature extraction image features levels complexity extracted image data typical examples features lines edges ridges localized points corners blobs points complex features related texture shape motion detection segmentation point processing decision image points regions image relevant processing examples selection specific set points segmentation multiple image regions contain specific object high level processing step input typically small set data example set points image region assumed contain specific object remaining processing deals example verification data satisfy model based application specific assumptions estimation application specific parameters object pose object size image detected object different categories image combining different views object decision making making final decision required application example pass fail automatic inspection applications match match recognition applications flag human review medical military security recognition applications vision hardware kinds vision systems contain basic elements power source image acquisition device camera ccd processor control communication cables kind wireless interconnection mechanism addition practical vision contains software display order monitor vision systems inner spaces industrial ones contain illumination placed controlled environment furthermore completed includes accessories like camera supports cables connectors ai effect applications artificial intelligence machine vision glossary artificial neural networks deep learning lists list vision topics list emerging technologies outline artificial intelligence references reading external links usc iris vision conference list vision papers web complete list papers relevant vision conferences vision online news source code datasets job offers related vision keith price annotated vision bibliography cvonline bob fisher compendium vision british machine vision association supporting vision research uk bmvc miua conferences annals bmva open source journal bmva summer school day meetings", "Natural language and speech": "natural language processing nlp field science artificial intelligence computational linguistics concerned interactions computers human natural languages nlp related area human interaction challenges nlp involve natural language understanding enabling computers derive meaning human natural language input involve natural language generation automated online assistant providing customer service web page example application natural language processing major component history history nlp generally starts work earlier periods alan turing published article titled computing machinery intelligence proposed called turing test criterion intelligence georgetown experiment involved fully automatic translation russian sentences english authors claimed years machine translation solved problem real progress slower alpac report year long research failed fulfill expectations funding machine translation dramatically reduced little research machine translation conducted late statistical machine translation systems developed notably successful nlp systems developed shrdlu natural language working restricted blocks worlds restricted vocabularies eliza simulation rogerian psychotherapist written joseph weizenbaum information human thought emotion eliza provided startlingly human like interaction patient exceeded small knowledge base eliza provide generic response example responding head hurts head hurts programmers began write conceptual ontologies structured real world information understandable data examples margie schank sam cullingford pam wilensky talespin meehan qualm lehnert politics carbonell plot units lehnert time chatterbots written including parry racter jabberwacky nlp systems based complex sets hand written rules starting late revolution nlp introduction machine learning algorithms language processing steady increase computational power moore law gradual lessening dominance chomskyan theories linguistics grammar theoretical underpinnings discouraged sort corpus linguistics underlies machine learning approach language processing earliest machine learning algorithms decision trees produced systems hard rules similar existing hand written rules speech tagging introduced use hidden markov models nlp increasingly research focused statistical models soft probabilistic decisions based attaching real valued weights features making input data cache language models speech recognition systems rely examples statistical models models generally robust given unfamiliar input especially input contains errors common real world data produce reliable results integrated larger comprising multiple subtasks notable early successes occurred field machine translation especially work ibm research successively complicated statistical models developed systems able advantage existing multilingual textual corpora produced parliament canada european union result laws calling translation governmental proceedings official languages corresponding systems government systems depended corpora specifically developed tasks implemented systems continues major limitation success systems result great deal research gone methods effectively learning limited amounts data recent research increasingly focused unsupervised semi supervised learning algorithms algorithms able learn data hand annotated desired answers combination annotated non annotated data generally task difficult supervised learning typically produces accurate results given input data enormous non annotated data available including things entire content world wide web inferior results nlp machine learning modern nlp algorithms based machine learning especially statistical machine learning paradigm machine learning different prior attempts language processing prior implementations language processing tasks typically involved direct hand coding large sets rules machine learning paradigm calls instead general learning algorithms grounded statistical inference automatically learn rules analysis large corpora typical real world examples corpus plural corpora set documents individual sentences hand annotated correct values learned different classes machine learning algorithms applied nlp tasks algorithms input large set features generated input data earliest algorithms decision trees produced systems hard rules similar systems hand written rules common increasingly research focused statistical models soft probabilistic decisions based attaching real valued weights input feature models advantage express relative certainty different possible answers producing reliable results model included component larger systems based machine learning algorithms advantages hand produced rules learning procedures machine learning automatically focus common cases writing rules hand obvious effort directed automatic learning procedures use statistical inference algorithms produce models robust unfamiliar input containing words structures seen erroneous input misspelled words words accidentally omitted generally handling input gracefully hand written rules generally creating systems hand written rules soft decisions extremely difficult error prone time consuming systems based automatically learning rules accurate simply supplying input data systems based hand written rules accurate increasing complexity rules difficult task particular limit complexity systems based hand crafted rules systems unmanageable creating data input machine learning systems simply requires corresponding increase number man hours worked generally significant increases complexity annotation process subfield nlp devoted learning approaches known natural language learning nll conference conll peak body signll sponsored acl recognizing links computational linguistics language acquisition aim computational language learning research understand human language acquisition nll overlaps related field computational major tasks nlp following list commonly researched tasks nlp note tasks direct real world applications commonly serve subtasks aid solving larger tasks distinguishes tasks potential actual nlp tasks volume research devoted fact typically defined problem setting standard metric evaluating task standard corpora task evaluated competitions devoted specific task automatic summarization produce readable summary chunk text provide summaries text known type articles financial section newspaper coreference resolution given sentence larger chunk text determine words mentions refer objects entities anaphora resolution specific example task specifically concerned matching pronouns nouns names refer general task coreference resolution includes identifying called bridging relationships involving referring expressions example sentence entered john house door door referring expression bridging relationship identified fact door referred door john house structure referred discourse analysis rubric includes number related tasks task identifying discourse structure connected text nature discourse relationships sentences elaboration explanation contrast possible task recognizing classifying speech acts chunk text yes question content question statement assertion machine translation automatically translate text human language difficult problems member class problems colloquially termed ai complete requiring different types knowledge humans possess grammar semantics facts real world order solve properly morphological segmentation separate words individual morphemes identify class morphemes difficulty task depends greatly complexity morphology structure words language considered english fairly simple morphology especially inflectional morphology possible ignore task entirely simply model possible forms word open opens opened opening separate words languages turkish manipuri highly agglutinated indian language approach possible dictionary entry thousands possible word forms named entity recognition ner given stream text determine items text map proper names people places type person location organization note capitalization aid recognizing named entities languages english information aid determining type named entity case inaccurate insufficient example word sentence capitalized named entities span words capitalized furthermore languages non western scripts chinese arabic capitalization languages capitalization consistently use distinguish names example german capitalizes nouns regardless refer names french spanish capitalize names serve adjectives natural language generation convert information databases readable human language natural language understanding convert chunks text formal representations order logic structures easier programs manipulate natural language understanding involves identification intended semantic multiple possible semantics derived natural language expression usually takes form organized notations natural languages concepts introduction creation language metamodel ontology efficient empirical solutions explicit formalization natural languages semantics confusions implicit assumptions closed world assumption cwa vs open world assumption subjective yes vs objective true false expected construction basis semantics formalization optical character recognition ocr given image representing printed text determine corresponding text speech tagging given sentence determine speech word words especially common ones serve multiple parts speech example book noun book table verb book flight set noun verb adjective different parts speech languages ambiguity languages little inflectional morphology english particularly prone ambiguity chinese prone ambiguity tonal language verbalization inflection readily conveyed entities employed orthography convey intended meaning parsing determine parse tree grammatical analysis given sentence grammar natural languages ambiguous typical sentences multiple possible analyses fact surprisingly typical sentence thousands potential parses completely nonsensical human question answering given human language question determine answer typical questions specific right answer capital canada open ended questions considered meaning life recent works looked complex questions relationship extraction given chunk text identify relationships named entities married sentence breaking known sentence boundary disambiguation given chunk text sentence boundaries sentence boundaries marked periods punctuation marks characters serve purposes marking abbreviations sentiment analysis extract subjective information usually set documents online reviews determine polarity specific objects especially useful identifying trends public opinion social media purpose marketing speech recognition given sound clip person people speaking determine textual representation speech opposite text speech extremely difficult problems colloquially termed ai complete natural speech hardly pauses successive words speech segmentation necessary subtask speech recognition note spoken languages sounds representing successive letters blend process termed coarticulation conversion analog signal discrete characters difficult process speech segmentation given sound clip person people speaking separate words subtask speech recognition typically grouped topic segmentation recognition given chunk text separate segments devoted topic identify topic segment word segmentation separate chunk continuous text separate words language like english fairly trivial words usually separated spaces written languages like chinese japanese thai mark word boundaries fashion languages text segmentation significant task requiring knowledge vocabulary morphology words language word sense disambiguation words meaning select meaning makes sense context problem typically given list words associated word senses dictionary online resource wordnet cases sets related tasks grouped subfields nlp considered separately nlp examples include information retrieval ir concerned storing searching retrieving information separate field science closer databases ir relies nlp methods example stemming current research applications seek bridge gap ir nlp information extraction concerned general extraction semantic information text covers tasks named entity recognition coreference resolution relationship extraction speech processing covers speech recognition text speech related tasks tasks include native language identification stemming text simplification text speech text proofing natural language search query expansion automated essay scoring truecasing statistical nlp statistical natural language processing uses stochastic probabilistic statistical methods resolve difficulties discussed especially arise longer sentences highly ambiguous processed realistic grammars yielding thousands millions possible analyses methods disambiguation involve use corpora markov models models statistical natural language understanding introduced roberto pieraccini esther levin chin hui lee bell laboratories nlp comprises quantitative approaches automated language processing including probabilistic modeling information theory linear algebra technology statistical nlp comes mainly machine learning data mining fields artificial intelligence involve learning data evaluation natural language processing objectives goal nlp evaluation measure qualities algorithm order determine extent answers goals designers meets needs users research nlp evaluation received considerable attention definition proper evaluation criteria way specify precisely nlp problem going vagueness tasks defined language understanding language generation precise set evaluation criteria includes mainly evaluation data evaluation metrics enables teams compare solutions given nlp problem short history evaluation nlp evaluation campaign written texts campaign dedicated message understanding pallet parseval geig project compared phrase structure grammars black series campaigns tipster project realized tasks like summarization translation searching hirschman germany morpholympics compared german taggers senseval romanseval campaigns conducted objectives semantic disambiguation sparkle campaign compared syntactic parsers different languages english french german italian france grace project compared set taggers french adda technolangue easy project parsers french compared large scale evaluation dependency parsers performed context conll shared tasks italy evalita campaign conducted compare nlp speech tools italian evalita web site france anr passage project end parsers french compared passage web site different types evaluation depending evaluation procedures number distinctions traditionally nlp evaluation intrinsic vs extrinsic evaluation intrinsic evaluation considers isolated nlp characterizes performance mainly respect gold standard result pre defined evaluators extrinsic evaluation called evaluation use considers nlp complex setting embedded serving precise function human user extrinsic performance characterized terms utility respect overall task complex human user example consider syntactic parser based output new speech pos tagger intrinsic evaluation run pos tagger labelled data compare output pos tagger gold standard correct output extrinsic evaluation run parser pos tagger new pos tagger compare parsing accuracy black box vs glass box evaluation black box evaluation requires run nlp given data set measure number parameters related quality process speed reliability resource consumption importantly quality result accuracy data annotation fidelity translation glass box evaluation looks design algorithms implemented linguistic resources uses vocabulary size given complexity nlp problems difficult predict performance basis glass box evaluation type evaluation informative respect error analysis future developments automatic vs manual evaluation cases automatic procedures defined evaluate nlp comparing output gold standard desired cost producing gold standard high automatic evaluation repeated needed additional costs input data nlp problems definition gold standard complex task prove impossible inter annotator agreement insufficient manual evaluation performed human judges instructed estimate quality sample output based number criteria thanks linguistic competence human judges considered reference number language processing tasks considerable variation ratings automatic evaluation referred objective evaluation human kind appears subjective standardization nlp iso subcommittee working order ease lexical resources nlp programs subcommittee iso tc called iso tc sc iso standards published construction mainly lexicon representation lmf annotation data category registry future nlp nlp research gradually shifting lexical semantics compositional semantics narrative understanding human level natural language processing ai complete problem equivalent solving central artificial intelligence problem making computers intelligent people strong ai nlp future tied closely development ai general list natural language processing toolkits biomedical text mining compound term processing assisted reviewing controlled natural language deep linguistic processing foreign language reading aid foreign language writing aid language technology latent semantic indexing lre map natural language programming reification linguistics spoken dialogue telligent systems search references reading steven bird ewan klein edward loper natural language processing python reilly media isbn daniel jurafsky james martin speech language processing nd edition pearson prentice hall isbn christopher manning prabhakar raghavan hinrich sch\u00fctze introduction information retrieval cambridge university press isbn official html pdf versions available charge christopher manning hinrich sch\u00fctze foundations statistical natural language processing mit press isbn david powers christopher turk machine learning natural language springer verlag isbn", "Operating systems": "operating os software manages hardware software resources provides common services programs operating component software application programs usually require operating function time sharing operating systems schedule tasks efficient use include accounting software cost allocation processor time mass storage printing resources hardware functions input output memory allocation operating acts intermediary programs hardware application code usually executed directly hardware frequently makes calls os function interrupted operating systems devices contain cellular phones video game consoles web servers supercomputers examples popular modern operating systems include android blackberry bsd chrome os ios linux os qnx steam os microsoft windows variant windows phone os examples share roots unix popular hard real time operating systems include freertos micrium vxworks types operating systems single multi tasking single tasking run program time multi tasking operating allows program running concurrency achieved time sharing dividing available processor time multiple processes interrupted repeatedly time slices task scheduling subsystem operating multi tasking characterized preemptive operative types preemptive multitasking operating slices cpu time dedicates slot programs unix like operating systems solaris linux amigaos support preemptive multitasking cooperative multitasking achieved relying process provide time processes defined manner bit versions microsoft windows cooperative multi tasking bit versions windows nt win preemptive multi tasking single multi user single user operating systems facilities distinguish users allow multiple programs run tandem multi user operating extends basic concept multi tasking facilities identify processes resources disk space belonging multiple users permits multiple users interact time time sharing operating systems schedule tasks efficient use include accounting software cost allocation processor time mass storage printing resources multiple users distributed distributed operating manages group distinct computers makes appear single development networked computers linked communicate gave rise distributed computing distributed computations carried machine computers group work cooperation form distributed templated os distributed cloud computing context templating refers creating single virtual machine image guest operating saving tool multiple running virtual machines gagne technique virtualization cloud computing management common large server warehouses embedded embedded operating systems designed embedded systems designed operate small machines like pdas autonomy able operate limited number resources compact extremely efficient design windows ce minix examples embedded operating systems real time real time operating operating guarantees process events data certain short time real time operating single multi tasking multitasking uses specialized scheduling algorithms deterministic nature behavior achieved event driven switches tasks based priorities external events time sharing operating systems switch tasks based clock interrupts library library operating services typical operating provides networking provided form libraries libraries composed application configuration code construct unikernels specialised single address space machine images deployed cloud embedded environments history early computers built perform series single tasks like calculator basic operating features developed resident monitor functions automatically run different programs succession speed processing operating systems exist modern complex forms early hardware features added enabled use runtime libraries interrupts parallel processing personal computers popular operating systems similar concept larger computers earliest electronic digital systems operating systems electronic systems time programmed rows mechanical switches jumper wires plug boards special purpose systems example generated ballistics tables military controlled printing payroll checks data punched paper cards programmable general purpose computers invented machine languages consisting strings binary digits punched paper tape introduced sped programming process stern os ibm mainframe computers beginning including computers apollo program early execute program time user sole use limited period time arrive scheduled time program data punched paper cards punched tape program loaded machine machine set work program completed crashed programs generally debugged panel toggle switches panel lights said alan turing master early manchester mark machine deriving primitive conception operating principles universal turing machine later machines came libraries programs linked user program assist operations input output generating code human readable symbolic code genesis modern day operating machines ran single job time cambridge university england job queue time washing line tapes hung different colored clothes pegs indicate job priority improvement atlas supervisor introduced manchester atlas commissioned considered recognisable modern operating brinch hansen described significant breakthrough history operating systems mainframes major features pioneered field operating systems including batch processing input output interrupt buffering multitasking spooling runtime libraries link loading programs sorting records files features included included application software option application programmers separate operating applications share operating released integrated utility ibm later mainframes quickly supplanted ibsys ibjob ibm os introduced concept single os spanning entire product line crucial success machines ibm current mainframe operating systems distant descendants original applications written os run modern machines os pioneered concept operating keeps track resources including program data space allocation main memory file space secondary storage file locking update process terminated reason resources claimed operating alternative cp started line ibm operating systems focused concept virtual machines operating systems ibm series mainframes included systems developed ibm cos compatibility operating dos disk operating tss time sharing tos tape operating bos basic operating acp airline control program non ibm systems mts michigan terminal music multi user interactive computing orvyl stanford timesharing control data corporation developed scope operating batch processing cooperation university minnesota kronos later nos operating systems developed supported simultaneous batch timesharing use like commercial timesharing systems interface extension dartmouth basic operating systems pioneering efforts timesharing programming languages late control data university illinois developed plato operating plasma panel displays long distance time sharing networks plato remarkably innovative time featuring real time chat multi user graphical games burroughs corporation introduced mcp master control program operating stack machine designed exclusively support high level languages machine language assembler mcp os written exclusively high level language espol dialect algol mcp introduced ground breaking innovations commercial implementation virtual memory development ibm approach burroughs licence mcp run hardware proposal declined burroughs management protect existing hardware production mcp use today unisys clearpath mcp line computers univac commercial manufacturer produced series exec operating systems like early main frame systems batch oriented managed magnetic drums disks card readers line printers univac produced real time basic rtb support large scale time sharing patterned dartmouth bc general electric mit developed general electric comprehensive operating supervisor gecos introduced concept ringed security privilege levels acquisition honeywell renamed general comprehensive operating gcos digital equipment corporation developed operating systems lines including tops tops time sharing systems bit pdp class systems widespread use unix tops particularly popular universities early arpanet community late late hardware capabilities evolved allowed similar ported software run early systems utilized implement features systems order permit different underlying architectures appear series fact microprogrammed implementations enormous investment software systems caused original manufacturers continue develop compatible operating systems hardware notable supported mainframe operating systems include burroughs mcp unisys clearpath mcp present ibm os ibm ibm os present ibm cp ibm ibm vm univac exec univac os unisys clearpath dorado present microcomputers pc dos early personal os featured command line interface mac os apple widespread os feature graphical user interface features windows icons later commonplace guis microcomputers capacity need elaborate operating systems developed mainframes minis minimalistic operating systems developed loaded rom known monitors notable early disk operating cp supported early microcomputers closely imitated microsoft ms dos widely popular operating chosen ibm pc ibm version called ibm dos pc dos apple apple abandoned popular apple ii series microcomputers introduce apple macintosh innovative graphical user interface gui mac os introduction intel cpu chip bit architecture paging capabilities provided personal computers ability run multitasking operating systems like earlier minicomputers mainframes microsoft responded progress hiring dave cutler developed vms operating digital equipment corporation lead development windows nt operating continues serve basis microsoft operating systems line steve jobs founder apple started developed nextstep operating nextstep later acquired apple code freebsd core mac os gnu project started activist programmer richard stallman goal creating complete free software replacement proprietary unix operating project highly successful duplicating functionality parts unix development gnu hurd kernel proved unproductive finnish science student linus torvalds cooperation volunteers collaborating internet released version linux kernel soon merged gnu user space components software form complete operating combination major components usually referred simply linux software industry naming convention stallman free software foundation remain opposed preferring gnu linux berkeley software distribution known bsd unix derivative distributed university california berkeley starting freely distributed ported minicomputers eventually gained following use pcs mainly freebsd netbsd openbsd examples operating systems unix unix like operating systems file unix history simple png px thumb evolution unix systems default file unix history simple svg unix originally written assembly language ken thompson wrote mainly based bcpl based experience multics project replaced unix rewritten developed large complex family inter related operating systems influential modern operating history unix like family diverse group operating systems major sub categories including bsd linux unix trademark open group licenses use operating shown conform definitions unix like commonly refer large set operating systems resemble original unix unix like systems run wide variety architectures heavily servers business workstations academic engineering environments free unix variants linux bsd popular areas operating systems certified open group holder unix trademark unix hp hp ux ibm aix descendants original unix designed run respective vendor hardware contrast sun microsystems solaris operating run multiple types hardware including sparc servers pcs apple os replacement apple earlier non unix mac os hybrid kernel based bsd variant derived nextstep mach freebsd unix sought establishing posix standard posix standard applied operating originally created unix variants bsd descendants server world wide web ran nextstep based bsd subgroup unix family berkeley software distribution family includes freebsd netbsd openbsd operating systems commonly webservers function personal os internet owes existence bsd protocols commonly computers connect send receive data network widely implemented refined bsd world wide web demonstrated number computers running os based bsd called nextstep bsd roots unix university california berkeley installed unix time students staff science department began adding new programs things easier text editors berkeley received new vax computers unix installed school undergraduates modified unix order advantage hardware possibilities defense advanced research projects agency department defense took decided fund project schools corporations government organizations took notice started use berkeley version unix instead official distributed steve jobs leaving apple formed company manufactured high end computers running variation bsd called nextstep computers tim berners lee webserver create world wide web developers like keith bostic encouraged project replace non free code originated bell labs sued eventually years legal disputes bsd project came ahead spawned number free derivatives freebsd netbsd os standard user interface os os mac os line open core graphical operating systems developed marketed sold apple latest pre loaded currently shipping macintosh computers os successor original mac os apple primary operating unlike predecessor os unix operating built technology developed second half apple purchased company early operating released mac os server desktop oriented version mac os cheetah following march distinct client server editions os released merged os lion releases os named big cats starting mavericks os versions named inspirational places california os yosemite recent version announced released june wwdc prior merging os server edition os server architecturally identical desktop counterpart usually ran apple line macintosh server hardware os server included work group management administration software tools provide simplified access key network services including mail transfer agent samba server ldap server domain server mac os lion server aspects mac os server integrated client version product branded os dropping mac server tools offered application linux ubuntu desktop linux distribution android popular mobile operating modified version linux kernel linux kernel originated project linus torvalds university student finland posted information project newsgroup students programmers received support assistance volunteers succeeded creating complete functional kernel linux unix like developed unix code unlike bsd variants open license model linux kernel code available study modification resulted use wide range computing machinery supercomputers smart watches estimates suggest linux personal computers widely adopted use servers embedded systems cell phones linux superseded unix platforms powerful supercomputers world linux kernel popular distributions red hat debian ubuntu linux mint google android google chromium os chromium operating based linux kernel designed google chromium os targets users spend time internet mainly web browser limited ability run local applications built file manager media player instead relies internet applications web apps web browser accomplish tasks word processing chromium os differs chrome os chromium open source primarily developers chrome os operating shipped chromebooks microsoft windows microsoft windows family proprietary operating systems designed microsoft corporation primarily targeted intel architecture based computers estimated percent total usage share web connected computers newest version windows windows recently overtook windows xp os microsoft windows originated operating environment running ms dos standard operating shipped intel architecture personal computers time windows released ms dos bootstrap backwards compatibility win run real mode ms dos bits windows drivers windows released version win family later versions based windows nt kernel current client versions windows run ia bit arm microprocessors addition itanium supported older server version windows server past windows nt supported additional architectures server editions windows widely recent years microsoft expended significant capital effort promote use windows server operating windows usage servers widespread personal computers windows competes linux bsd server market share pc windows operating ibm personal operating systems significant day longer amigaos os ibm microsoft mac os non unix precursor apple mac os beos xts risc os morphos haiku baremetal freemint niche markets continue developed minority platforms enthusiast communities specialist applications openvms dec active development hewlett packard operating systems exclusively academia operating systems education research operating concepts typical example fulfills roles minix example singularity purely research operating systems failed win significant market share introduced innovations influenced mainstream operating systems bell labs plan components components operating exist order different parts work user software needs operating order use hardware simple mouse keyboard complex internet component kernel kernel connects application software hardware aid firmware device drivers kernel provides basic level control hardware devices manages memory access programs ram determines programs access hardware resources sets resets cpu operating states optimal operation times organizes data long term non volatile storage file systems media disks tapes flash memory program execution operating provides interface application program hardware application program interact hardware obeying rules procedures programmed operating operating set services simplify development execution application programs executing application program involves creation process operating kernel assigns memory space resources establishes priority process multi tasking systems loads program binary code memory initiates execution application program interacts user hardware devices interrupts interrupts central operating systems provide efficient way operating interact react environment alternative having operating watch sources input events polling require action older systems small stacks bytes unusual modern systems large stacks interrupt based programming directly supported modern cpus interrupts provide way automatically saving local register contexts running specific code response events basic computers support hardware interrupts allow programmer specify code run event takes place interrupt received hardware automatically suspends program currently running saves status runs code previously associated interrupt analogous placing bookmark book response phone modern operating systems interrupts handled operating kernel interrupts come hardware running program hardware device triggers interrupt operating kernel decides deal event generally running processing code code run depends priority interrupt example person usually responds smoke detector alarm answering phone processing hardware interrupts task usually delegated software called device driver operating kernel program device drivers relay information running program means program trigger interrupt operating program wishes access hardware example interrupt operating kernel causes control passed kernel kernel processes request program wishes additional resources wishes shed resources memory triggers interrupt kernel attention modes privilege rings available protected mode operating systems determine processes run mode modern cpus support multiple modes operation cpus capability use modes protected mode supervisor mode supervisor mode operating kernel low level tasks need unrestricted access hardware controlling memory written erased communication devices like graphics cards protected mode contrast applications operate protected mode use hardware communicating kernel controls supervisor mode cpus modes similar protected mode virtual modes order emulate older processor types bit processors bit bit processors bit starts automatically running supervisor mode programs run bios efi bootloader operating unlimited access hardware required definition initializing protected environment outside operating passes control program place cpu protected mode protected mode programs access limited set cpu instructions user program leave protected mode triggering interrupt causing control passed kernel way operating maintain exclusive control things like access hardware memory term protected mode resource generally refers cpu registers contain information running program isn allowed alter attempts alter resources generally causes switch supervisor mode operating deal illegal operation program attempting example killing program memory management things operating kernel responsible managing memory currently use programs ensures program interfere memory use program programs time share program independent access memory cooperative memory management early operating systems assumes programs voluntary use kernel memory manager exceed allocated memory memory management seen programs contain bugs cause exceed allocated memory program fails cause memory programs affected overwritten malicious programs viruses purposefully alter program memory affect operation operating cooperative memory management takes misbehaved program crash memory protection enables kernel limit process access memory methods memory protection exist including memory segmentation paging methods require level hardware support mmu exist computers segmentation paging certain protected mode registers specify cpu memory address allow running program access attempts access addresses trigger interrupt cause cpu enter supervisor mode placing kernel charge called segmentation violation seg short difficult assign meaningful result operation usually sign misbehaving program kernel generally resorts terminating offending program reports error windows versions level memory protection programs easily circumvent need use general protection fault produced indicating segmentation violation occurred crash virtual memory operating systems trick programs memory scattered hard disk ram continuous chunk memory called virtual memory use virtual memory addressing paging segmentation means kernel choose memory program use given time allowing operating use memory locations multiple tasks program tries access memory isn current range accessible memory nonetheless allocated kernel interrupted way program exceed allocated memory section memory management unix kind interrupt referred page fault kernel detects page fault generally adjusts virtual memory range program triggered granting access memory requested gives kernel discretionary power particular application memory stored actually allocated modern operating systems memory accessed frequently temporarily stored disk media space available use programs called swapping area memory multiple programs memory area contains swapped exchanged demand virtual memory provides programmer user perception larger ram multitasking multitasking refers running multiple independent programs giving appearance performing tasks time computers things time generally time sharing means program uses share time execute operating kernel contains scheduling program determines time process spends executing order execution control passed programs control passed process kernel allows program access cpu memory later control returned kernel mechanism program allowed use cpu called passing control kernel applications called context switch early model governed allocation time programs called cooperative multitasking model control passed program kernel execute long wants explicitly returning control kernel means malicious malfunctioning program prevent programs cpu hang entire enters infinite loop modern operating systems extend concepts application preemption device drivers kernel code operating preemptive control internal run times philosophy governing preemptive multitasking ensuring programs given regular time cpu implies programs limited time allowed spend cpu interrupted accomplish modern operating kernels use timed interrupt protected mode timer set kernel triggers return supervisor mode specified time elapsed sections interrupts dual mode operation single user operating systems cooperative multitasking perfectly adequate home computers generally run small number tested programs amigaos exception having preemptive multitasking version windows nt version microsoft windows enforced preemptive multitasking reach home user market windows xp windows nt targeted professionals disk access file systems file systems allow users programs organize sort files use directories folders access data stored disks central feature operating systems computers store data disks files structured specific ways order allow faster access higher reliability better use drive available space specific way files stored disk called file enables files names attributes allows stored hierarchy directories folders arranged directory tree early operating systems generally supported single type disk drive kind file early file systems limited capacity speed kinds file names directory structures use limitations reflected limitations operating systems designed making difficult operating support file simpler operating systems support limited range options accessing storage systems operating systems like unix linux support technology known virtual file vfs operating unix supports wide array storage devices regardless design file systems allowing accessed common application programming interface api makes unnecessary programs knowledge device accessing vfs allows operating provide programs access unlimited number devices infinite variety file systems installed use specific device drivers file drivers connected storage device hard drive accessed device driver device driver understands specific language drive able translate language standard language operating access disk drives unix language block devices kernel appropriate device driver place access contents disk drive raw format contain file systems file driver translate commands access specific file standard set commands operating use talk file systems programs deal file systems basis filenames directories folders contained hierarchical structure create delete open close files gather information including access permissions size free space creation modification dates differences file systems supporting file systems difficult allowed characters file names case sensitivity presence kinds file attributes makes implementation single interface file daunting task operating systems tend recommend support natively file systems specifically designed example ntfs windows ext reiserfs linux practice party drivers usually available support widely file systems general purpose operating systems example ntfs available linux ntfs ext reiserfs available windows party software support file systems highly varied modern operating systems common file systems operating systems include support drivers operating systems vary file support disk formats installed windows file usually limited application certain media example cds use iso udf windows vista ntfs file operating installed possible install linux types file systems unlike operating systems linux unix allow file regardless media stored hard drive disc cd dvd usb flash drive contained file located file device drivers device driver specific type software developed allow interaction hardware devices typically constitutes interface communicating device specific bus communications subsystem hardware connected providing commands receiving data device end requisite interfaces operating software applications specialized hardware dependent program operating specific enables program typically operating applications software package program running operating kernel interact transparently hardware device usually provides requisite interrupt handling necessary necessary asynchronous time dependent hardware interfacing needs key design goal device drivers abstraction model hardware class device different newer models released manufacturers provide reliable better performance newer models controlled differently computers operating systems expected know control device future solve problem operating systems essentially dictate type device controlled function device driver translate operating mandated function calls device specific calls theory new device controlled new manner function correctly suitable driver available new driver ensures device appears operate usual operating point view versions windows vista versions linux driver execution operative meaning driver entered infinite loop freeze recent revisions operating systems incorporate kernel preemption kernel interrupts driver tasks separates process receives response device driver gives tasks networking currently operating systems support variety networking protocols hardware applications means computers running dissimilar operating systems participate common network sharing resources computing files printers scanners wired wireless connections networks essentially allow operating access resources remote support functions resources connected directly local includes simple communication networked file systems sharing graphics sound hardware network services allow resources accessed transparently ssh allows networked users direct access command line interface client server networking allows program called client connect network called server servers offer host services network computers users services usually provided ports numbered access points server network address port number usually associated maximum running program responsible handling requests port daemon user program turn access local hardware resources passing requests operating kernel operating systems support vendor specific open networking protocols example sna ibm systems decnet systems digital equipment corporation microsoft specific protocols smb windows specific protocols specific tasks supported nfs file access protocols like esound esd easily extended network provide sound local applications remote sound hardware security secure depends number technologies working properly modern operating provides access number resources available software running external devices like networks kernel operating capable distinguishing requests allowed processed processed systems simply distinguish privileged non privileged systems commonly form requester identity user establish identity process authentication username quoted username password methods authentication magnetic cards biometric data instead cases especially connections network resources accessed authentication reading files network share covered concept requester identity authorization particular services resources accessible requester logged tied requester user account variously configured groups users requester belongs addition allow disallow model security high level security offers auditing options allow tracking requests access resources reading file internal security security running program possible possibly harmful requests carried interrupts operating kernel programs directly access hardware resources secured external security involves request outside login connected console kind network connection external requests passed device drivers operating kernel passed applications carried directly security operating systems long concern highly sensitive data held computers commercial military nature united states government department defense dod created trusted evaluation criteria tcsec standard sets basic requirements assessing effectiveness security vital importance operating makers tcsec evaluate classify select trusted operating systems considered processing storage retrieval sensitive classified information network services include offerings file sharing print services email web sites file transfer protocols ftp compromised security line security hardware devices known firewalls intrusion detection prevention systems operating level number software firewalls available intrusion detection prevention systems modern operating systems include software firewall enabled default software firewall configured allow deny network traffic service application running operating install running insecure service telnet ftp threatened security breach firewall deny traffic trying connect service port alternative strategy sandbox strategy available systems meet popek goldberg virtualization requirements operating running user programs native code instead emulates processor provides host code based java internal security especially relevant multi user systems allows user private files users tamper read internal security vital auditing use program potentially bypass operating inclusive bypassing auditing user interface bash command line command typed prompt output appears working way screen current command prompt operated individual requires user interface user interface usually referred shell essential human interaction supported user interface views directory structure requests services operating acquire data input hardware devices keyboard mouse credit card reader requests operating services display prompts status messages output hardware devices video monitor printer common forms user interface historically command line interface commands typed line line graphical user interface visual environment commonly wimp present graphical user interfaces screenshot kde plasma desktop graphical user interface programs form images screen files folders directories applications form icons symbols mouse navigate modern systems support graphical user interfaces gui include systems original implementation mac os gui integrated kernel technically graphical user interface operating service incorporating support operating kernel allow gui responsive reducing number context switches required gui perform output functions operating systems modular separating graphics subsystem kernel operating unix vms operating systems built way linux mac os built way modern releases microsoft windows windows vista implement graphics subsystem user space graphics drawing routines versions windows nt windows server exist kernel space windows little distinction interface kernel operating systems allow user install create user interface desire window conjunction gnome kde plasma desktop commonly setup unix unix like bsd linux solaris systems number windows shell replacements released microsoft windows offer alternatives included windows shell shell separated windows numerous unix based guis existed time derived competition vendors unix hp ibm sun led fragmentation effort standardize cose cde failed reasons eventually eclipsed widespread adoption gnome desktop environment prior free software based toolkits desktop environments motif prevalent toolkit desktop combination basis cde developed graphical user interfaces evolve time example windows modified user interface time new major version windows released mac os gui changed dramatically introduction mac os real time operating systems real time operating rtos operating intended applications fixed deadlines real time computing applications include small embedded systems automobile engine controllers industrial robots spacecraft industrial control large scale computing systems early example large scale real time operating transaction processing facility developed american airlines ibm sabre airline reservations embedded systems fixed deadlines use real time operating vxworks pikeos ecos qnx montavista linux rtlinux windows ce real time operating shares similar apis desktop windows shares desktop windows codebase symbian os rtos kernel eka starting version embedded systems use operating systems palm os bsd linux operating systems support real time computing operating development hobby operating development complicated activities computing hobbyist engage hobby operating classified code directly derived existing operating users active developers cases hobby development support homebrew computing device example simple single board powered microprocessor development architecture widespread use operating development come entirely new concepts commence modeling existing operating case hobbyist developer interact small unstructured group individuals like interests examples hobby operating include reactos syllable diversity operating systems portability application software generally written use specific operating specific hardware porting application run os functionality required application implemented differently os names functions meaning arguments requiring application adapted changed maintained unix operating written assembly language making portable systems different native pdp cost supporting operating systems diversity avoided instead writing applications software platforms like java qt abstractions borne cost adaptation specific operating systems libraries approach operating vendors adopt standards example posix os abstraction layers provide commonalities reduce porting costs market share worldwide device shipments operating operating millions units million units android windows ios mac os blackberry total source gartner android currently replicated single year operating ship billion devices popular operating installed base comparison operating systems mobile device mobile operating hypervisor interruptible operating list important publications operating systems list operating systems glossary operating systems terms microcontroller network operating object oriented operating operating projects live cd commander image timeline operating systems usage share operating systems references reading brien marakas management information systems mcgraw hill irwin external links multics history history operating systems", "Machine learning and pattern recognition": "pattern recognition branch machine learning focuses recognition patterns regularities data cases considered nearly synonymous machine learning pattern recognition systems cases trained labeled training data supervised learning labeled data available algorithms discover previously unknown patterns unsupervised learning terms pattern recognition machine learning data mining knowledge discovery databases kdd hard separate largely overlap scope machine learning common term supervised learning methods originates artificial intelligence kdd data mining larger focus unsupervised methods stronger connection business use pattern recognition origins engineering term popular context vision leading vision conference named conference vision pattern recognition pattern recognition higher formalize explain visualize pattern machine learning traditionally focuses maximizing recognition rates domains evolved substantially roots artificial intelligence engineering statistics ve increasingly similar integrating developments ideas machine learning pattern recognition assignment label given input value statistics discriminant analysis introduced purpose example pattern recognition classification attempts assign input value given set classes example determine given email spam non spam pattern recognition general problem encompasses types output examples regression assigns real valued output input sequence labeling assigns class member sequence values example speech tagging assigns speech word input sentence parsing assigns parse tree input sentence describing syntactic structure sentence pattern recognition algorithms generally aim provide reasonable answer possible inputs perform likely matching inputs taking account statistical variation opposed pattern matching algorithms look exact matches input pre existing patterns common example pattern matching algorithm regular expression matching looks patterns given sort textual data included search capabilities text editors word processors contrast pattern recognition pattern matching generally considered type machine learning pattern matching algorithms especially fairly general carefully tailored patterns succeed providing similar quality output sort provided pattern recognition algorithms overview pattern recognition generally categorized according type learning procedure generate output value supervised learning assumes set training data training set provided consisting set instances properly labeled hand correct output learning procedure generates model attempts meet conflicting objectives perform possible training data generalize possible new data usually means simple possible technical definition simple accordance occam razor discussed unsupervised learning hand assumes training data hand labeled attempts inherent patterns data determine correct output value new data instances combination recently explored semi supervised learning uses combination labeled unlabeled data typically small set labeled data combined large unlabeled data note cases unsupervised learning training data speak words data labeled training data note different terms corresponding supervised unsupervised learning procedures type output example unsupervised equivalent classification normally known clustering based common perception task involving training data speak grouping input data clusters based inherent similarity measure distance instances considered vectors multi dimensional vector space assigning input instance set pre defined classes note fields terminology different example community ecology term classification refer commonly known clustering piece input data output value generated formally termed instance instance formally described vector features constitute description known characteristics instance feature vectors seen defining points appropriate space methods manipulating vectors vector spaces correspondingly applied computing dot product angle vectors typically features categorical known nominal consisting set unordered items gender male female blood type ab ordinal consisting set ordered items large medium small integer valued count number occurrences particular word email real valued measurement blood pressure categorical ordinal data grouped likewise integer valued real valued data furthermore algorithms work terms categorical data require real valued integer valued data discretized groups greater probabilistic classifiers common pattern recognition algorithms probabilistic nature use statistical inference best label given instance unlike algorithms simply output best label probabilistic algorithms output probability instance described given label addition probabilistic algorithms output list best labels associated probabilities value instead simply single best label number possible labels fairly small case classification set probability possible labels output probabilistic algorithms advantages non probabilistic algorithms output confidence value associated choice note algorithms output confidence values general probabilistic algorithms value mathematically grounded probability theory non probabilistic confidence values general given specific meaning compare confidence values output algorithm correspondingly abstain confidence choosing particular output low probabilities output probabilistic pattern recognition algorithms effectively incorporated larger machine learning tasks way partially completely avoids problem error propagation feature variables important feature selection algorithms attempt directly prune redundant irrelevant features general introduction feature selection summarizes approaches challenges given complexity feature selection non monotonous character optimization problem given total features powerset consisting subsets features need explored branch bound algorithm reduce complexity intractable medium large values number available features large scale comparison feature selection algorithms techniques transform raw feature vectors feature extraction prior application pattern matching algorithm example feature extraction algorithms attempt reduce large dimensionality feature vector smaller dimensionality vector easier work encodes redundancy mathematical techniques principal components analysis pca distinction feature selection feature extraction resulting features feature extraction taken place different sort original features easily interpretable features left feature selection simply subset original features problem statement supervised version formally problem supervised pattern recognition stated follows given unknown function ground truth maps input instances output labels training data assumed represent accurate examples mapping produce function approximates closely possible correct mapping example problem filtering spam representation email spam non spam order defined problem approximates closely possible needs defined rigorously decision theory defined specifying loss function assigns specific value loss resulting producing incorrect label goal minimize expected loss expectation taken probability distribution practice distribution ground truth function known exactly computed empirically collecting large number samples hand labeling correct value time consuming process typically limiting factor data sort collected particular loss function depends type label predicted example case classification simple zero loss function sufficient corresponds simply assigning loss incorrect labeling implies optimal classifier minimizes error rate independent test data counting fraction instances learned function labels wrongly equivalent maximizing number correctly classified instances goal learning procedure minimize error rate maximize correctness typical test set probabilistic pattern recognizer problem instead estimate probability possible output label given particular input instance estimate function form feature vector input function typically parameterized parameters discriminative approach problem estimated directly generative approach inverse probability instead estimated combined prior probability bayes rule follows labels continuously distributed regression analysis denominator involves integration summation value typically learned maximum posteriori map estimation finds best value simultaneously meets conflicting objects perform possible training data smallest error rate simplest possible model essentially combines maximum likelihood estimation regularization procedure favors simpler models complex models bayesian context regularization procedure viewed placing prior probability different values mathematically value subsequent evaluation procedure posterior probability given bayesian approach problem instead choosing single parameter vector probability given label new instance computed integrating possible values weighted according posterior probability frequentist bayesian approach pattern recognition pattern classifier linear discriminant presented fisher developed frequentist tradition frequentist approach entails model parameters considered unknown objective parameters computed estimated collected data linear discriminant parameters precisely mean vectors covariance matrix probability class estimated collected dataset note usage bayes rule pattern classifier classification approach bayesian bayesian statistics origin greek philosophy distinction priori posteriori knowledge later kant defined distinction priori known observation empirical knowledge gained observations bayesian pattern classifier class probabilities chosen user priori experience quantified priori parameter values weighted empirical observations beta conjugate prior dirichlet distributions bayesian approach facilitates seamless intermixing expert knowledge form subjective probabilities objective observations probabilistic pattern classifiers according frequentist bayesian approach uses face automatically detected special software medical science pattern recognition basis aided diagnosis cad systems cad describes procedure supports doctor interpretations findings pattern shape recognition technology srt people counter typical applications pattern recognition techniques automatic speech recognition classification text categories spam non spam email messages automatic recognition handwritten postal codes postal envelopes automatic recognition images human faces handwriting image extraction medical forms examples form subtopic image analysis pattern recognition deals digital images input pattern recognition systems optical character recognition classic example application pattern classifier ocr example method signing captured stylus overlay starting strokes speed relative min relative max acceleration pressure uniquely identify confirm identity banks offered technology content collect fdic bank fraud want inconvenience customers artificial neural networks neural net classifiers deep learning real world applications image processing examples identification authentication license plate recognition fingerprint analysis face detection verification medical diagnosis screening cervical cancer papnet breast tumors defence navigation guidance systems target recognition systems shape recognition technology discussion aforementioned applications neural networks image processing psychology pattern recognition making sense identifying objects closely related perception explains sensory inputs receive meaningful pattern recognition thought different ways template matching second feature detection template pattern produce items proportions template matching hypothesis suggests incoming stimuli compared templates long term memory match stimulus identified feature detection models pandemonium classifying letters selfridge suggest stimuli broken component parts identification example capital horizontal lines vertical line algorithms algorithms pattern recognition depend type label output learning supervised unsupervised algorithm statistical non statistical nature statistical algorithms categorized generative discriminative classification algorithms supervised algorithms predicting categorical labels parametric linear discriminant analysis quadratic discriminant analysis maximum entropy classifier aka logistic regression multinomial logistic regression note logistic regression algorithm classification despite comes fact logistic regression uses extension linear regression model model probability input particular class nonparametric decision trees decision lists kernel estimation nearest neighbor algorithms naive bayes classifier neural networks multi layer perceptrons perceptrons support vector machines gene expression programming clustering algorithms unsupervised algorithms predicting categorical labels categorical mixture models deep learning methods hierarchical clustering agglomerative divisive means clustering correlation clustering kernel principal component analysis kernel pca ensemble learning algorithms supervised meta algorithms combining multiple learning algorithms boosting meta algorithm bootstrap aggregating bagging ensemble averaging mixture experts hierarchical mixture experts general algorithms predicting arbitrarily structured sets labels bayesian networks markov random fields multilinear subspace learning algorithms predicting labels data tensor representations unsupervised multilinear principal component analysis mpca real valued sequence labeling algorithms predicting sequences real valued labels supervised kalman filters particle filters regression algorithms predicting real valued labels supervised gaussian process regression kriging linear regression extensions neural networks deep learning methods unsupervised independent component analysis ica principal components analysis pca sequence labeling algorithms predicting sequences categorical labels supervised conditional random fields crfs hidden markov models hmms maximum entropy markov models memms recurrent neural networks unsupervised hidden markov models hmms adaptive resonance theory cache language model compound term processing aided diagnosis data mining deep learning list numerical analysis software list numerical libraries machine learning multilinear subspace learning neocognitron perception perceptual learning predictive analytics prior knowledge pattern recognition sequence mining template matching contextual image classification references reading introductory tutorial classifiers introducing basic terms numeric example external links international association pattern recognition list pattern recognition web sites journal pattern recognition research pattern recognition info pattern recognition journal pattern recognition society international journal pattern recognition artificial intelligence international journal applied pattern recognition open pattern recognition project intended open source platform sharing algorithms pattern recognition", "Artificial intelligence": "artificial intelligence ai intelligence exhibited machines software academic field study studies create computers software capable intelligent behavior major ai researchers textbooks define field study design intelligent agents intelligent agent perceives environment takes actions maximize chances success john mccarthy coined term defines science engineering making intelligent machines ai research highly technical specialized deeply divided subfields fail communicate division social cultural factors subfields grown particular institutions work individual researchers ai research divided technical issues subfields focus solution specific problems focus possible approaches use particular tool accomplishment particular applications central problems goals ai research include reasoning knowledge planning learning natural language processing communication perception ability manipulate objects general intelligence field long term goals currently popular approaches include statistical methods computational intelligence traditional symbolic ai large number tools ai including versions search mathematical optimization logic methods based probability economics ai field number sciences professions converge including science mathematics psychology linguistics philosophy neuroscience specialized fields artificial psychology field founded claim central property humans human intelligence sapience homo sapiens precisely described machine simulate raises philosophical issues nature mind ethics creating artificial beings endowed human like intelligence issues addressed myth fiction philosophy antiquity artificial intelligence subject tremendous optimism suffered stunning setbacks today essential technology industry providing heavy lifting challenging problems science history thinking machines artificial beings appear greek myths talos crete bronze robot hephaestus pygmalion galatea human likenesses believed intelligence built major civilization animated cult images worshiped egypt greece humanoid automatons built yan shi hero alexandria al jazari widely believed artificial beings created j\u0101bir ibn hayy\u0101n judah loew paracelsus th th centuries artificial beings common feature fiction mary shelley frankenstein karel \u010dapek rossum universal robots pamela mccorduck argues examples ancient urge describes forge gods stories creatures fates discuss hopes fears ethical concerns presented artificial intelligence mechanical formal reasoning developed philosophers mathematicians antiquity study logic led directly invention programmable digital electronic based work mathematician alan turing turing theory computation suggested machine shuffling symbols simple simulate conceivable act mathematical deduction concurrent discoveries neurology information theory cybernetics inspired small group researchers begin seriously consider possibility building electronic brain field ai research founded conference campus dartmouth college summer attendees including john mccarthy marvin minsky allen newell arthur samuel herbert simon leaders ai research decades students wrote programs people simply astonishing computers winning checkers solving word problems algebra proving logical theorems speaking english middle research heavily funded department defense laboratories established world ai founders profoundly optimistic future new field herbert simon predicted machines capable years work man marvin minsky agreed writing generation problem creating artificial intelligence substantially solved failed recognize difficulty problems faced response criticism sir james lighthill ongoing pressure congress fund productive projects british governments cut undirected exploratory research ai years later called ai winter period funding ai projects hard early ai research revived commercial success expert systems form ai program simulated knowledge analytical skills human experts market ai reached billion dollars time japan fifth generation project inspired british governments restore funding academic research field beginning collapse lisp machine market ai fell disrepute second longer lasting ai winter began early st century ai achieved greatest successes albeit somewhat scenes artificial intelligence logistics data mining medical diagnosis areas technology industry success factors increasing computational power computers moore law greater emphasis solving specific subproblems creation new ties ai fields working similar problems new commitment researchers solid mathematical methods rigorous scientific standards deep blue chess playing beat reigning world chess champion garry kasparov february jeopardy quiz exhibition match ibm question answering watson defeated greatest jeopardy champions brad rutter ken jennings significant margin kinect provides body motion interface xbox xbox uses algorithms emerged lengthy ai research intelligent personal assistants smartphones research goals general problem simulating creating intelligence broken number specific sub problems consist particular traits capabilities researchers like intelligent display traits described received attention deduction reasoning problem solving early ai researchers developed algorithms imitated step step reasoning humans use solve puzzles logical deductions late ai research developed highly successful methods dealing uncertain incomplete information employing concepts probability economics difficult problems algorithms require enormous computational resources experience combinatorial explosion memory time required astronomical problem goes certain size search efficient problem solving algorithms high priority ai research human beings solve problems fast intuitive judgements conscious step step deduction early ai research able model ai progress imitating kind sub symbolic problem solving embodied agent approaches emphasize importance sensorimotor skills higher reasoning neural net research attempts simulate structures inside brain rise skill statistical approaches ai mimic probabilistic nature human ability guess knowledge representation ontology represents knowledge set concepts domain relationships concepts knowledge representation knowledge engineering central ai research problems machines expected solve require extensive knowledge world things ai needs represent objects properties categories relations objects situations events states time causes effects knowledge knowledge know people know researched domains representation exists ontology set objects relations concepts machine knows general called upper ontologies attempt provide foundation knowledge difficult problems knowledge representation default reasoning qualification problem things people know form working assumptions example bird comes conversation people typically picture animal fist sized sings flies things true birds john mccarthy identified problem qualification problem commonsense rule ai researchers care represent tend huge number exceptions simply true false way abstract logic requires ai research explored number solutions problem breadth commonsense knowledge number atomic facts average person knows astronomical research projects attempt build complete knowledge base commonsense knowledge cyc require enormous amounts laborious ontological engineering built hand complicated concept time major goal understand concepts able learn reading sources like internet able add ontology subsymbolic form commonsense knowledge people know represented facts statements express verbally example chess master avoid particular chess position feels exposed art critic look statue instantly realize fake intuitions tendencies represented brain non consciously sub symbolically knowledge like informs supports provides context symbolic conscious knowledge related problem sub symbolic reasoning hoped situated ai computational intelligence statistical ai provide ways represent kind knowledge planning hierarchical control form control set devices governing software arranged hierarchy intelligent agents able set goals achieve need way visualize future representation state world able predictions actions change able choices maximize utility value available choices classical planning problems agent assume thing acting world certain consequences actions agent actor periodically ascertain world matches predictions change plan necessary requiring agent reason uncertainty multi agent planning uses cooperation competition agents achieve given goal emergent behavior evolutionary algorithms swarm intelligence learning machine learning study algorithms improve automatically experience central ai research field inception unsupervised learning ability patterns stream input supervised learning includes classification numerical regression classification determine category belongs seeing number examples things categories regression attempt produce function describes relationship inputs outputs predicts outputs change inputs change reinforcement learning agent rewarded good responses punished bad ones agent uses sequence rewards punishments form strategy operating problem space types learning analyzed terms decision theory concepts like utility mathematical analysis machine learning algorithms performance branch theoretical science known computational learning theory developmental robotics developmental learning approaches elaborated lifelong cumulative acquisition repertoires novel skills robot autonomous self exploration social interaction human teachers guidance mechanisms active learning maturation motor synergies imitation natural language processing communication parse tree represents syntactic structure sentence according formal grammar natural language processing gives machines ability read understand languages humans speak sufficiently powerful natural language processing enable natural language user interfaces acquisition knowledge directly human written sources newswire texts straightforward applications natural language processing include information retrieval text mining question answering machine translation common method processing extracting meaning natural language semantic indexing increases processing speeds drop cost data storage makes indexing large volumes abstractions user input efficient perception machine perception ability use input sensors cameras microphones tactile sensors sonar exotic deduce aspects world vision ability analyze visual input selected subproblems speech recognition facial recognition object recognition motion manipulation field robotics closely related ai intelligence required robots able handle tasks object manipulation navigation sub problems localization knowing finding things mapping learning building map environment motion planning figuring path planning going point space point involve compliant motion robot moves maintaining physical contact object long term goals long term goals research pertaining artificial intelligence social intelligence creativity general intelligence social intelligence kismet robot rudimentary social skills affective computing study development systems devices recognize interpret process simulate human affects field spanning sciences psychology cognitive science origins field traced far early philosophical inquiries emotion modern branch science originated rosalind picard paper affective computing motivation research ability simulate empathy machine interpret emotional state humans adapt behaviour giving appropriate response emotions emotion social skills play roles intelligent agent able predict actions understanding motives emotional states involves elements game theory decision theory ability model human emotions perceptual skills detect emotions effort facilitate human interaction intelligent machine want able display emotions actually experience order appear sensitive emotional dynamics human interaction creativity sub field ai addresses creativity theoretically philosophical psychological perspective practically specific implementations systems generate outputs considered creative systems identify assess creativity related areas computational research artificial intuition artificial thinking general intelligence researchers think work eventually incorporated machine general intelligence known strong ai combining skills exceeding human abilities believe anthropomorphic features like artificial consciousness artificial brain required project problems require general intelligence considered solved example straightforward specific task like machine translation requires machine read write languages nlp follow author argument reason know talked knowledge faithfully reproduce author intention social intelligence problem like machine translation considered ai complete order solve particular problem solve problems approaches established unifying theory paradigm guides ai research researchers disagree issues long standing questions remained unanswered artificial intelligence simulate natural intelligence studying psychology neurology human biology irrelevant ai research bird biology aeronautical engineering intelligent behavior described simple elegant principles logic optimization necessarily require solving large number completely unrelated problems intelligence reproduced high level symbols similar words ideas require sub symbolic processing john haugeland coined term gofai good old fashioned artificial intelligence proposed ai properly referred synthetic intelligence term adopted non gofai researchers cybernetics brain simulation number researchers explored connection neurology information theory cybernetics built machines electronic networks exhibit rudimentary intelligence grey walter turtles johns hopkins beast researchers gathered meetings teleological society princeton university ratio club england approach largely abandoned elements revived symbolic access digital computers possible middle ai research began explore possibility human intelligence reduced symbol manipulation research centered institutions carnegie mellon university stanford mit developed style research john haugeland named approaches ai good old fashioned ai gofai symbolic approaches achieved great success simulating high level thinking small demonstration programs approaches based cybernetics neural networks abandoned pushed background researchers convinced symbolic approaches eventually succeed creating machine artificial general intelligence considered goal field cognitive simulation economist herbert simon allen newell studied human problem solving skills attempted formalize work laid foundations field artificial intelligence cognitive science operations research management science research team results psychological experiments develop programs simulated techniques people solve problems tradition centered carnegie mellon university eventually culminate development soar architecture middle logic based unlike newell simon john mccarthy felt machines need simulate human thought instead try essence abstract reasoning problem solving regardless people algorithms laboratory stanford sail focused formal logic solve wide variety problems including knowledge representation planning learning logic focus work university edinburgh europe led development programming language prolog science logic programming anti logic scruffy researchers mit marvin minsky seymour papert solving difficult problems vision natural language processing required ad hoc solutions argued simple general principle like logic capture aspects intelligent behavior roger schank described anti logic approaches scruffy opposed neat paradigms cmu stanford commonsense knowledge bases doug lenat cyc example scruffy ai built hand complicated concept time knowledge based computers large memories available researchers traditions began build knowledge ai applications knowledge revolution led development deployment expert systems introduced edward feigenbaum truly successful form ai software knowledge revolution driven realization enormous amounts knowledge required simple ai applications sub symbolic progress symbolic ai stall believed symbolic systems able imitate processes human cognition especially perception robotics learning pattern recognition number researchers began look sub symbolic approaches specific ai problems embodied situated behavior based nouvelle ai researchers related field robotics rodney brooks rejected symbolic ai focused basic engineering problems allow robots survive work revived non symbolic viewpoint early cybernetics researchers reintroduced use control theory ai coincided development embodied mind thesis related field cognitive science idea aspects body movement perception visualization required higher intelligence computational intelligence soft computing neural networks connectionism revived david rumelhart middle neural networks example soft computing solutions problems solved complete logical certainty approximate solution soft computing approaches ai include fuzzy systems evolutionary computation statistical tools application soft computing ai studied collectively emerging discipline computational intelligence statistical ai researchers developed sophisticated mathematical tools solve specific subproblems tools truly scientific sense results measurable verifiable responsible ai recent successes shared mathematical language permitted high level collaboration established fields like mathematics economics operations research stuart russell peter norvig movement revolution victory neats critics argue techniques exceptions focused particular problems failed address long term goal general intelligence ongoing debate relevance validity statistical approaches ai exemplified exchanges peter norvig noam chomsky integrating approaches intelligent agent paradigm intelligent agent perceives environment takes actions maximize chances success simplest intelligent agents programs solve specific problems complicated agents include human beings organizations human beings firms paradigm gives researchers license study isolated problems solutions verifiable useful agreeing single approach agent solves specific problem use approach works agents symbolic logical sub symbolic neural networks use new approaches paradigm gives researchers common language communicate fields decision theory economics use concepts abstract agents intelligent agent paradigm widely accepted agent architectures cognitive architectures researchers designed systems build intelligent systems interacting intelligent agents multi agent symbolic sub symbolic components hybrid intelligent study systems artificial intelligence systems integration hierarchical control provides bridge sub symbolic ai lowest reactive levels traditional symbolic ai highest levels relaxed time constraints permit planning world modelling rodney brooks subsumption architecture early proposal hierarchical tools course years research ai developed large number tools solve difficult problems science general methods discussed search optimization problems ai solved theory intelligently searching possible solutions reasoning reduced performing search example logical proof viewed searching path leads premises conclusions step application inference rule planning algorithms search trees goals subgoals attempting path target goal process called means ends analysis robotics algorithms moving limbs grasping objects use local searches configuration space learning algorithms use search algorithms based optimization simple exhaustive searches rarely sufficient real world problems search space number places search quickly grows astronomical numbers result search slow completes solution problems use heuristics rules thumb eliminate choices unlikely lead goal called pruning search tree heuristics supply program best guess path solution lies heuristics limit search solutions smaller sample size different kind search came prominence based mathematical theory optimization problems possible begin search form guess refine guess incrementally refinements algorithms visualized blind hill climbing begin search random point landscape jumps steps moving guess uphill reach optimization algorithms simulated annealing beam search random optimization evolutionary computation uses form optimization search example begin population organisms guesses allow mutate recombine selecting fittest survive generation refining guesses forms evolutionary computation include swarm intelligence algorithms ant colony particle swarm optimization evolutionary algorithms genetic algorithms gene expression programming genetic programming logic logic knowledge representation problem solving applied problems example satplan algorithm uses logic planning inductive logic programming method learning different forms logic ai research propositional sentential logic logic statements true false order logic allows use quantifiers predicates express facts objects properties relations fuzzy logic version order logic allows truth statement represented value simply true false fuzzy systems uncertain reasoning widely modern industrial consumer product control systems subjective logic models uncertainty different explicit manner fuzzy logic given binomial opinion satisfies belief disbelief uncertainty beta distribution method ignorance distinguished probabilistic statements agent makes high confidence default logics non monotonic logics circumscription forms logic designed help default reasoning qualification problem extensions logic designed handle specific domains knowledge description logics situation calculus event calculus fluent calculus representing events time causal calculus belief calculus modal logics probabilistic methods uncertain reasoning problems ai reasoning planning learning perception robotics require agent operate incomplete uncertain information ai researchers devised number powerful tools solve problems methods probability theory economics bayesian networks general tool large number problems reasoning bayesian inference algorithm learning expectation maximization algorithm planning decision networks perception dynamic bayesian networks probabilistic algorithms filtering prediction smoothing finding explanations streams data helping perception systems analyze processes occur time hidden markov models kalman filters key concept science economics utility measure valuable intelligent agent precise mathematical tools developed analyze agent choices plan decision theory decision analysis information value theory tools include models markov decision processes dynamic decision networks game theory mechanism design classifiers statistical learning methods simplest ai applications divided types classifiers shiny diamond controllers shiny pick controllers classify conditions inferring actions classification forms central ai systems classifiers functions use pattern matching determine closest match tuned according examples making attractive use ai examples known observations patterns supervised learning pattern belongs certain predefined class class seen decision observations combined class labels known data set new observation received observation classified based previous experience classifier trained ways statistical machine learning approaches widely classifiers neural network kernel methods support vector machine nearest neighbor algorithm gaussian mixture model naive bayes classifier decision tree performance classifiers compared wide range tasks classifier performance depends greatly characteristics data classified single classifier works best given problems referred free lunch theorem determining suitable classifier given problem art science neural networks neural network interconnected group nodes akin vast network neurons human brain study artificial neural networks began decade field ai research founded work walter pitts warren mccullough important early researchers frank rosenblatt invented perceptron paul werbos developed backpropagation algorithm main categories networks acyclic feedforward neural networks signal passes direction recurrent neural networks allow feedback popular feedforward networks perceptrons multi layer perceptrons radial basis networks recurrent networks famous hopfield net form attractor network described john hopfield neural networks applied problem intelligent control robotics learning techniques hebbian learning competitive learning hierarchical temporal memory approach models structural algorithmic properties neocortex term deep learning gained traction mid publication geoffrey hinton ruslan salakhutdinov showed layered feedforward neural network effectively pre trained layer time treating layer turn unsupervised restricted boltzmann machine supervised backpropagation fine tuning control theory control theory grandchild cybernetics important applications especially robotics languages ai researchers developed specialized languages ai research including lisp prolog evaluating progress alan turing proposed general procedure test intelligence agent known turing test procedure allows major problems artificial intelligence tested difficult challenge present agents fail artificial intelligence evaluated specific problems small problems chemistry hand writing recognition game playing tests termed subject matter expert turing tests smaller problems provide achievable goals increasing number positive results classification outcomes ai test optimal possible perform better strong super human performs better humans super human performs better humans sub human performs worse humans example performance draughts checkers optimal performance chess super human nearing strong super human chess computers versus human performance everyday tasks recognizing face crossing room bumping sub human different approach measures machine intelligence tests developed mathematical definitions intelligence examples kinds tests start late nineties devising intelligence tests notions kolmogorov complexity data compression major advantages mathematical definitions applicability nonhuman intelligences absence requirement human testers derivative turing test completely automated public turing test tell computers humans apart captcha implies helps determine user actual person posing human contrast standard turing test captcha administered machine targeted human opposed administered human targeted machine asks user complete simple test generates grade test computers unable solve problem correct solutions deemed result person taking test common type captcha test requires typing distorted letters numbers symbols appear image undecipherable applications automated online assistant providing customer service web page primitive applications artificial intelligence artificial intelligence techniques pervasive numerous list frequently technique reaches mainstream use longer considered artificial intelligence phenomenon described ai effect area artificial intelligence contributed greatly intrusion detection competitions prizes number competitions prizes promote research artificial intelligence main areas promoted general machine intelligence conversational behavior data mining robotic cars robot soccer games platforms platform computing platform defined sort hardware architecture software framework including application frameworks allows software run rodney brooks pointed years ago artificial intelligence software defines ai features platform actual platform affects ai results needs work ai problems real world platforms isolation wide variety platforms allowed different aspects ai develop ranging expert systems albeit pc based entire real world robot platforms widely available roomba open interface toys aibo robotic pet grew sony science laboratory csl famed engineer toshitada doi credited aibo original progenitor started work robots artificial intelligence expert masahiro fujita csl doi friend artist hajime sorayama enlisted create initial designs aibo body designs permanent collections museum modern art smithsonian institution later versions aibo studies carnegie mellon university aibo added carnegie mellon university robot hall fame philosophy ethics philosophical questions related ai artificial general intelligence possible machine solve problem human solve intelligence hard limits machine accomplish intelligent machines dangerous ensure machines behave ethically ethically machine mind consciousness mental states exactly sense human beings machine sentient deserve certain rights machine intentionally cause harm limits artificial general intelligence machine intelligent think turing polite convention need decide machine think need decide machine act intelligently human approach philosophical problems associated artificial intelligence forms basis turing test dartmouth proposal aspect learning feature intelligence precisely described machine simulate conjecture printed proposal dartmouth conference represents position working ai researchers newell simon physical symbol hypothesis physical symbol necessary sufficient means general intelligent action newell simon argue intelligence consists formal operations symbols hubert dreyfus argued contrary human expertise depends unconscious instinct conscious symbol manipulation having feel situation explicit symbolic knowledge dreyfus critique ai g\u00f6delian arguments g\u00f6del john lucas roger penrose detailed argument onwards argued humans reducible turing machines detailed arguments complex essence derive kurt g\u00f6del proof incompleteness theorem possible create statements formal prove human thought truth g\u00f6del statements turing program designed search statements methods reduced formal g\u00f6del statement derivable program discover humans capable understanding mathematical truth possible limited way general result accepted shown hardware neural nets computers based random processes annealing approaches quantum computers based entangled qubits long involve new physics reduced turing machines reduce complexity tasks permit new types problems solved roger penrose speculates new physics involved brain intersection gravity quantum mechanics planck scale argument accepted rule possibility true artificial intelligence means biological basis based new physical principles argument followed counter arguments roger penrose replied counter counter examples intricate complex debate details philosophy artificial intelligence lucas penrose g\u00f6del artificial brain argument brain simulated machines brains intelligent simulated brains intelligent machines intelligent hans moravec ray kurzweil argued technologically feasible copy brain directly hardware software simulation essentially identical original ai effect machines intelligent observers failed recognize deep blue beat gary kasparov chess machine acting intelligently onlookers commonly discount behavior artificial intelligence program arguing real intelligence real intelligence intelligent behavior people machines known ai effect ai hasn intelligent behaviour machine ethics minimum ai able reproduce aspects human intelligence raises issue ethically machine behave humans ai agents issue addressed wendell wallach book titled moral machines introduced concept artificial moral agents ama wallach amas research landscape artificial intelligence guided central questions identifies humanity want computers making moral decisions ro bots moral wallach question centered issue machines demonstrate equivalent moral behavior contrast constraints society place development amas machine ethics field machine ethics concerned giving machines ethical principles procedure discovering way resolve ethical dilemmas encounter enabling function ethically responsible manner ethical decision making field delineated aaai fall symposium machine ethics past research concerning relationship technology ethics largely focused responsible irresponsible use technology human beings people interested human beings ought treat machines cases human beings engaged ethical reasoning time come adding ethical dimension machines recognition ethical ramifications behavior involving machines recent potential developments machine autonomy necessitate contrast hacking software property issues privacy issues topics normally ascribed ethics machine ethics concerned behavior machines human users machines research machine ethics key alleviating concerns autonomous systems argued notion autonomous machines dimension root fear concerning machine intelligence investigation machine ethics enable discovery problems current ethical theories advancing thinking ethics machine ethics referred machine morality computational ethics computational morality variety perspectives nascent field collected edition machine ethics stems aaai fall symposium machine ethics malevolent friendly ai political scientist charles rubin believes ai designed guaranteed benevolent argues sufficiently advanced benevolence malevolence humans assume machines robots treat favorably priori reason believe sympathetic morality evolved particular biology ais share hyper intelligent software necessarily decide support continued existence mankind extremely difficult stop topic recently begun discussed academic publications real source risks civilization humans planet earth physicist stephen hawking microsoft founder gates spacex founder elon musk expressed concerns possibility ai evolve point humans control hawking theorizing spell end human race proposal deal ensure generally intelligent ai friendly ai able control subsequently developed ais question kind check remain place leading ai researcher rodney brooks writes think mistake worrying developing malevolent ai anytime years think worry stems fundamental error distinguishing difference real recent advances particular aspect ai enormity complexity building sentient volitional intelligence devaluation humanity joseph weizenbaum wrote ai applications definition successfully simulate genuine human empathy use ai technology fields customer service psychotherapy deeply misguided weizenbaum bothered ai researchers philosophers willing view human mind program position known weizenbaum points suggest ai research devalues human life decrease demand human labor martin ford author lights tunnel automation accelerating technology economy future argue specialized artificial intelligence applications robotics forms automation ultimately result significant unemployment machines begin match exceed capability workers perform routine repetitive jobs ford predicts knowledge based occupations particular entry level jobs increasingly susceptible automation expert systems machine learning ai enhanced applications ai based applications amplify capabilities low wage offshore workers making feasible outsource knowledge work machine consciousness sentience mind ai replicates key aspects human intelligence sentient mind conscious experiences question closely related philosophical problem nature human consciousness generally referred hard problem consciousness consciousness objective criteria knowing intelligent agent sentient conscious experiences assume people tell subjective determination lack hard criteria known hard problem theory consciousness problem applies people higher animals extension ai agents human intelligence consciousness mind products information processing brain essentially idea human mind human brain information processing thinking form computing ai implementing machines human intelligence founded claim central property humans intelligence precisely described machine simulate program derived human implemented artificial create efficient artificial intelligence program act set outputs result set inputs internal memory machine act implemented start long term goal ai researchers provide machines deep understanding abilities human replicate general intelligence strong ai defined machine surpassing human abilities perform skills implanted scary thought fear losing control powerful machine obstacles researchers mainly time contstraints ai scientists establish database commonsense knowledge ontologically crafted machine takes tremendous time combat ai research looks machine able understand concepts order add ontology machine ethics primarily concerned behavior machines humans machines limiting extent developing ai order function like common human ai display ability solve subsymbolic commonsense knowledge tasks artists tell statues fake chess masters certain spots avoid exposure developing machines ai research faced difficulty potentially putting lot people work economy things businesses boom efficiency forcing ai bottleneck trying developing self improving machines strong ai hypothesis searle strong ai hypothesis states appropriately programmed right inputs outputs mind exactly sense human beings minds john searle counters assertion chinese room argument asks look inside try mind robot rights mary shelley frankenstein considers key issue ethics artificial intelligence machine created intelligence feel feel rights human idea appears modern science fiction film artificial intelligence humanoid machines ability feel emotions issue known robot rights currently considered example california institute future critics believe discussion premature subject profoundly discussed documentary film plug pray limits intelligent machines human machine hybrids superhuman intelligence hypothetical agent possess intelligence far surpassing brightest gifted human mind refer form degree intelligence possessed agent technological singularity research strong ai produced sufficiently intelligent software able reprogram improve improved software better improving leading recursive self improvement new intelligence increase exponentially dramatically surpass humans science fiction writer vernor vinge named scenario singularity technological singularity accelerating progress technologies cause runaway effect artificial intelligence exceed human intellectual capacity control radically changing ending civilization capabilities intelligence impossible comprehend technological singularity occurrence events unpredictable unfathomable ray kurzweil moore law describes relentless exponential improvement digital technology calculate desktop computers processing power human brains year predicts singularity occur transhumanism robot designer hans moravec cyberneticist kevin warwick inventor ray kurzweil predicted humans machines merge future cyborgs capable powerful idea called transhumanism roots aldous huxley robert ettinger illustrated fiction example manga ghost shell science fiction series dune artist hajime sorayama sexy robots series painted published japan depicting actual organic human form lifelike muscular metallic skins later gynoids book followed influenced movie makers including george lucas creatives sorayama considered organic robots real nature unnatural product human mind fantasy existing mind realized actual form edward fredkin argues artificial intelligence stage evolution idea proposed samuel butler darwin machines expanded george dyson book fiction implications artificial intelligence persistent theme science fiction early stories typically revolved intelligent robots word robot coined karel \u010dapek play title standing rossum universal robots later sf writer isaac asimov developed laws robotics subsequently explored long series robot stories laws gained traction genuine ai research influential fictional intelligences include hal charge spaceship space odyssey released film book written arthur clarke ai firmly rooted popular culture ai takeover artificial intelligence journal artificial intelligence video games artificial stupidity nick bostrom effective altruism existential risk existential risk artificial general intelligence future humanity institute human cognome project list artificial intelligence projects list artificial intelligence researchers list emerging technologies list important artificial intelligence publications list machine learning algorithms list scientific journals machine ethics machine learning ending language learning final invention outline artificial intelligence outline human intelligence philosophy mind simulated reality symbolic artificial intelligence notes references ai textbooks history ai sources bibtex cited presidential address association advancement artificial intelligence later published reading techcast article series john sagi framing consciousness boden margaret mind machine oxford university press johnston john allure machinic life cybernetics artificial life new ai mit press myers courtney boyd ed ai report forbes june sun bookman eds computational architectures integrating neural symbolic processes kluwer academic publishers needham ma external links ai introduction artificial intelligence ai founder john mccarthy handbook artificial intelligence volume avron barr edward feigenbaum stanford university aitopics large directory links resources maintained association advancement artificial intelligence leading organization academic ai researchers", "Graphics": "graphics greek graphikos written autograph visual images designs surface wall canvas screen paper stone inform illustrate entertain contemporary usage includes neeke pictorial representation data aided design manufacture typesetting graphic arts educational neeke recreational software images generated called graphics examples photographs drawings line art graphs diagrams typography numbers symbols geometric designs maps engineering drawings images graphics combine text illustration color graphic design consist deliberate selection creation arrangement typography brochure flyer poster web site book element clarity effective communication objective association cultural elements sought merely creation distinctive style graphics functional artistic recorded version photograph interpretation scientist highlight essential features artist case distinction imaginary graphics blurred history earliest graphics known anthropologists studying prehistoric periods cave paintings markings boulders bone ivory antlers created upper palaeolithic period earlier record astronomical seasonal chronological details earliest graphics drawings known modern world years ago engraved stone tablets ceramic cylinder seals marking beginning historic periods keeping records accounting inventory purposes records egypt predate papyrus egyptians material plan building pyramids slabs limestone wood bc greeks played major role geometry graphics represent mathematical theories circle theorem pythagorean theorem art graphics distinguish work monotone lines opposed painting drawing drawing generally involves making marks surface applying pressure tool moving tool surface tool tools art graphical drawing instrumental guided drawing printmaking woodblock printing including images seen china paper invented west main techniques woodcut engraving etching etching etching intaglio method printmaking image incised surface metal plate acid acid eats metal leaving roughened areas surface exposed acid burning line plate use process printmaking believed invented daniel hopfer augsburg germany decorated armour way etching manufacturing printed circuit boards semiconductor devices line art line art non specific term image consists distinct straight curved lines placed usually plain background gradations shade darkness hue color represent dimensional dimensional objects line art usually monochromatic lines different colors illustration illustration character story illustration illustrations illustration visual representation drawing painting photograph work art stresses subject form aim illustration elucidate decorate story poem piece textual information newspaper article traditionally providing visual representation described text editorial cartoon known political cartoon illustration containing political social message illustrations display wide range subject matter serve variety functions giving faces characters story displaying number examples item described academic textbook typology visualising step wise sets instructions technical manual communicating subtle thematic tone narrative linking brands ideas human expression individuality creativity making reader laugh smile fun laugh funny graphs graph chart information graphic represents tabular numeric data charts easier understand large quantities data relationships different parts data diagrams diagram simplified structured visual representation concepts ideas constructions relations statistical data visualize clarify topic symbols symbol basic sense representation concept quantity idea object concept quality psychological philosophical terms concepts symbolic nature representations concepts simply token artifacts allegorical directly codify symbolic meaning symbolism maps map simplified depiction space navigational aid highlights relations objects space usually map dimensional geometrically accurate representation dimensional space modern maps waldseem\u00fcller photography difference photography forms graphics photographer principle records single moment reality seemingly interpretation photographer choose field view angle use techniques lenses distort view filters change colors recent times digital photography opened way infinite number fast strong manipulations early days photography controversy photographs enacted scenes presented real life especially war photography difficult record original events shifting viewer eyes slightly simple pinpricks negative dramatic effect choice field view strong effect effectively censoring parts scene accomplished cropping simply including photograph touches philosophical question reality human brain processes information based previous experience making want taught photography photographer interprets scene viewer engineering drawings image represented angle projection engineering drawing type drawing technical nature fully clearly define requirements engineered items usually created accordance standardized conventions layout nomenclature interpretation appearance typefaces line styles size graphics types graphics raster graphics pixel separately defined digital photograph vector graphics mathematical formulas draw lines shapes interpreted viewer end produce graphic vectors results infinitely sharp graphics smaller files complex like vectors time render larger file sizes raster equivalent driven display attached mit whirlwind generate simple pictures followed mit tx tx interactive computing increased graphics late ivan sutherland invented sketchpad innovative program influenced alternative forms interaction computers mid large graphics research projects begun mit general motors bell labs lockheed corporation douglas ross mit developed advanced compiler language graphics programming coons mit ferguson boeing began work sculptured surfaces gm developed dac companies douglas lockheed mcdonnell significant developments ray tracing described arthur appel ibm research center yorktown heights late personal computers powerful capable drawing basic complex shapes designs artists graphic designers began personal particularly commodore amiga macintosh design tool save time draw accurately methods graphics possible late powerful sgi computers later create fully generated short films pixar macintosh remains popular tools graphics graphic design studios businesses modern systems dating onwards use graphical user interface gui present data information symbols icons pictures text graphics key elements multimedia technology graphics popular gaming multimedia animation quake fully games released toy story length generated animation film released cinemas graphics accurate detailed advanced computers better modeling software applications maya studio max cinema use graphics screensavers originally intended preventing layout guis burning screen evolved true pieces art practical purpose obsolete modern screens susceptible burn artifacts web graphics signature art web forums internet speeds increased internet browsers capable viewing images released mosaic websites began use gif format display small graphics banners advertisements navigation buttons web pages modern web browsers display jpeg png increasingly svg images addition gifs web pages svg extent vml support modern web browsers possible display vector graphics clear size plugins expand web browser functions display animated interactive graphics contained file formats swf modern web graphics software adobe photoshop gimp corel paint shop pro users microsoft windows ms paint lacking features ms paint drawing package graphics package numerous platforms websites created cater web graphics artists host communities growing number people use create internet forum signatures generally appearing user post digital artwork photo manipulations large graphics games developers creating communities products websites developed offer graphics fans enable appreciation games gaming profiles uses graphics visual elements point readers viewers particular information supplement text effort aid readers understanding particular concept concept clear interesting popular magazines time wired newsweek usually contain graphic material abundance attract readers unlike majority scholarly journals computing create graphical interface user graphics key elements multimedia technology graphics primary ways advertising sale goods services business graphics commonly business economics create financial charts tables term business graphics came use late personal computers capable drawing graphs charts instead tabular format business graphics highlight changes period time advertising advertising profitable uses graphics artists advertising work advertising potential account creating art increase chances selling artwork importantly graphics gives good look artwork applied graphics contribute general outlook designed artwork turn lure interested members public look work art purchasing graphical work especially advertisement work art poorly design persuade audience advertisement persuade convince readers viewers designed needed graphical tools bring profit designer advertiser political use graphics overtly political purposes cartoons graffiti poster art flag design centuries old practice thrives today world northern irish murals example recent example shepard fairey presidential election barack obama hope poster published web soon way streets united states education graphics heavily textbooks especially concerning subjects geography science mathematics order illustrate theories concepts human anatomy diagrams label photographs pictures educational animation important emerging field graphics animated graphics obvious advantages static graphics explaining subject matter changes time oxford illustrated dictionary uses graphics technical illustrations reading material interesting easier understand encyclopedia graphics illustrate concepts examples particular topic discussed order graphic function effectively educational aid learner able interpret successfully interpretative capacity aspect graphicacy film animation graphics majority new feature films especially large budget films heavily use graphics include lord rings film trilogy harry potter films spider man war worlds graphics education majority schools colleges universities world educate students subject graphics art subject taught broad variety ways course teaching distinctive balance craft skills intellectual response client needs graphics courses prioritize traditional craft skills drawing printmaking typography modern craft skills courses place emphasis teaching digital craft skills courses downplay crafts entirely concentrating training students generate novel intellectual responses engage brief despite apparent differences training curriculum staff students courses generally consider graphic designers typical pedagogy graphic design graphic communication visual communication graphic arts number synonymous course titles broadly based teaching models developed bauhaus school germany vkhutemas russia teaching model tend expose students variety craft skills currently drawing motion capture combined effort engage student world visual culture famous graphic designers aldus manutius designed italic type style desktop publishing graphic design april greiman known influential poster design paul rand known design pioneer designing popular corporate logos including logo ibm ups william caslon mid th century designed typefaces including itc founder caslon itc founder caslon ornaments caslon graphique itc caslon caslon old face big caslon examples graphics image tulip jpg photograph image portrait_ jpg drawing semiotics editorial cartoon references \u0987\u09a8 external links free graphics download historical timeline graphics animation", "World wide web": "world wide web www information space documents web resources identified urls interlinked hypertext links accessed internet known simply web world wide web central development information age primary tool billions use interact internet changed people lives immeasurably world wide web invented english scientist tim berners lee wrote web browser employed cern switzerland web pages primarily text documents formatted annotated hypertext markup language html addition formatted text web pages contain images video software components rendered user web browser coherent pages multimedia content embedded hyperlinks permit users navigate web pages multiple web pages common theme common domain called website website content largely provided publisher interactive users contribute content content depends user actions websites informative primarily entertainment largely commercial purposes history tim berners lee cern berners lee vision global hyperlinked information possibility second half global internet began penetrate europe domain uniform resource locator built came direct ip connection europe north america berners lee began openly discuss possibility web like cern march tim berners lee issued proposal management cern called mesh referenced enquire database software project built term web described elaborate information management based links embedded readable text imagine references document associated network address thing referred reading document skip click mouse explained referred existing meanings word hypertext term says coined reason proposal continues hypertext links encompass multimedia documents including graphics speech video berners lee goes propose term hypermedia help colleague fellow hypertext enthusiast robert cailliau published formal proposal november build hypertext project called worldwideweb word web hypertext documents viewed browsers client server architecture point html http development months web server month completing successful test proposal estimated read web developed months months achieve creation new links new material readers authorship universal automatic notification reader new material available read goal met accessible authorship web content took longer mature wiki concept webdav blogs web rss atom proposal modeled sgml reader dynatext electronic book technology spin institute research information scholarship brown university dynatext licensed cern key player extension sgml iso hypermedia hytime considered expensive inappropriate licensing policy use general high energy physics community fee document document alteration cern data center housing www servers berners lee world web server write web browser worldwideweb christmas berners lee built tools necessary working web web browser web editor web server web pages described project web page lost paul jones unc chapel hill north carolina announced berners lee gave says oldest known web page visit unc jones stored magneto optical drive august berners lee published short summary world wide web project newsgroup alt hypertext date marked debut web publicly available service internet new users accessed august reason considered internaut day newsmedia reported photo web published berners lee image cern house band les horribles cernettes taken silvano gennaro gennaro disclaimed story writing media totally distorting words sake cheap sensationalism server outside europe installed stanford linear accelerator center slac palo alto california host spires hep database accounts differ substantially date event world wide web consortium timeline says december slac claims december document titled little history world wide web underlying concept hypertext originated previous projects hypertext editing hes brown university ted nelson project xanadu douglas engelbart line nls nelson engelbart turn inspired vannevar bush microfilm based memex described essay think berners lee breakthrough marry hypertext internet book weaving web explains repeatedly suggested marriage technologies possible members technical communities took invitation finally assumed project process developed essential technologies globally unique identifiers resources web universal document identifier udi later known uniform resource locator url uniform resource identifier uri publishing language hypertext markup language html hypertext transfer protocol http world wide web number differences hypertext systems available time web required unidirectional links bidirectional ones making possible link resource action owner resource significantly reduced difficulty implementing web servers browsers comparison earlier systems turn presented chronic problem link rot unlike predecessors hypercard world wide web non proprietary making possible develop servers clients independently add extensions licensing restrictions april cern announced world wide web free fees coming months announcement server implementation gopher protocol longer free use produced rapid shift away gopher web early popular web browser violawww unix windowing robert cailliau jean fran\u00e7ois abramatic ibm tim berners lee th anniversary world wide web consortium scholars generally agree turning point world wide web began introduction mosaic web browser graphical browser developed team national center supercomputing applications university illinois urbana champaign ncsa uiuc led marc andreessen funding mosaic came high performance computing communications initiative high performance computing communication act computing developments initiated senator al gore prior release mosaic graphics commonly mixed text web pages web popularity older protocols use internet gopher wide area information servers wais mosaic graphical user interface allowed web far popular internet protocol world wide web consortium founded tim berners lee left european organization nuclear research cern october founded massachusetts institute technology laboratory science mit lcs support defense advanced research projects agency darpa pioneered internet year later second site founded inria french national research lab support european commission dg infso continental site created japan keio university end total number websites relatively small notable websites active foreshadowed inspired today popular services connected existing internet websites created world adding international standards domain names html berners lee played active role guiding development web standards markup languages compose web pages advocated vision semantic web world wide web enabled spread information internet easy use flexible format played important role popularizing use internet terms conflated popular use world wide web synonymous internet web information space containing hyperlinked documents resources identified uris implemented client server software internet protocols tcp ip http tim berners lee knighted queen elizabeth ii services global development internet function mosaic web browser helped web usable terms internet world wide web distinction internet global interconnected networks contrast world wide web services transferred networks collection text documents resources linked hyperlinks urls usually accessed web browsers web servers viewing web page world wide web normally begins typing url page web browser following hyperlink page resource web browser initiates series background communication messages fetch display requested page browser view web pages web page hyperlinks came known browsing web surfing channel surfing navigating web early studies new behavior investigated user patterns web browsers study example user patterns exploratory surfing window surfing evolved surfing bounded navigation targeted navigation following example demonstrates functioning web browser accessing page url browser resolves server url www example org internet protocol address globally distributed domain dns lookup returns ip address browser requests resource sending http request internet address requests service specific tcp port number known http service receiving host distinguish http request network protocols servicing http protocol normally uses port number content http request simple lines text home html http host www example org receiving http request delivers web server software listening requests port web server fulfill request sends http response browser indicating success http ok content type text html charset utf followed content requested page hypertext markup language html basic web page look like example org world wide web world wide web abbreviated www commonly known web browser parses html interprets markup paragraph surrounds words format text screen web pages use html reference urls resources images embedded media scripts affect page behavior cascading style sheets affect page layout browser makes additional http requests web server internet media types receives content web server browser progressively renders page screen specified html additional resources linking web pages contain hyperlinks related pages downloadable files source documents definitions web resources underlying html hyperlink looks like example org homepage graphic representation minute fraction www demonstrating hyperlinks collection useful related resources interconnected hypertext links dubbed web information publication internet created tim berners lee called worldwideweb original camelcase subsequently discarded november hyperlink structure www described webgraph nodes webgraph correspond web pages urls directed edges hyperlinks time web resources pointed hyperlinks disappear relocate replaced different content makes hyperlinks obsolete phenomenon referred circles link rot hyperlinks affected called dead links ephemeral nature web prompted efforts archive web sites internet archive active best known efforts dynamic updates web pages javascript scripting language initially developed brendan eich netscape use web pages standardised version ecmascript web pages interactive web applications use javascript techniques ajax asynchronous javascript xml client script delivered page additional http requests server response user actions mouse movements clicks based elapsed time server responses modify current page creating new page response server needs provide limited incremental information multiple ajax requests handled time users interact page data retrieved web pages regularly poll server check new information available www prefix hostnames world wide web begin www long standing practice naming internet hosts according services provide hostname web server www way ftp ftp server news nntp usenet news server host names appear domain dns subdomain names www example com use www required technical policy standard web sites use web server called nxoc cern ch according paolo palazzi worked cern tim berners lee popular use www subdomain accidental world wide web project page intended published www cern ch info cern ch intended cern home page dns records switched practice prepending www institution website domain subsequently copied established websites use prefix employ subdomain names www secure en special purposes web servers set main domain example com www subdomain www example com refer site require form map different web sites use subdomain useful load balancing incoming web traffic creating cname record points cluster web servers currently subdomain cname result achieved bare domain root user submits incomplete domain web browser address bar input field web browsers automatically try adding prefix www beginning possibly com org net end depending missing example entering transformed openoffice feature started appearing early versions mozilla firefox working title firebird early earlier practice browsers lynx reported microsoft granted patent idea mobile devices english www usually read double double double users pronounce dub dub dub particularly new zealand stephen fry podgrammes series podcasts pronounces wuh wuh wuh english writer douglas adams quipped independent sunday world wide web thing know shortened form takes times longer short mandarin chinese world wide web commonly translated phono semantic matching w\u00e0n w\u00e9i w\u01ceng satisfies www literally means myriad dimensional net translation reflects design concept proliferation world wide web tim berners lee web space states world wide web officially spelled separate words capitalised intervening hyphens use www prefix declining web web applications seek brand domain names easily pronounceable mobile web grows popularity services like gmail com myspace com facebook com twitter com mentioned adding www com domain scheme specifiers scheme specifiers start web uri refer hypertext transfer protocol http secure respectively specify communication protocol use request response http protocol fundamental operation world wide web added encryption layer https essential browsers send retrieve confidential data passwords banking information web browsers usually automatically prepend user entered uris omitted web security criminals web preferred way spread malware cybercrime web include identity theft fraud espionage intelligence gathering web based vulnerabilities outnumber traditional security concerns measured google web pages contain malicious code web based attacks place legitimate websites measured sophos hosted united states china russia common malware threats sql injection attacks websites html uris web vulnerable attacks like cross site scripting xss came introduction javascript exacerbated degree web ajax web design favors use scripts today estimate websites open xss attacks users phishing common threat web sa security division emc today announced findings january fraud report estimating global losses phishing billion known phishing methods covert redirect open redirect proposed solutions vary extremes large security vendors like mcafee design governance compliance suites meet post regulations like finjan recommended active real time inspection code content regardless source argued enterprise security business opportunity cost center ubiquitous digital rights management enforced infrastructure handful organizations replace hundreds companies today secure data networks jonathan zittrain said users sharing responsibility computing safety far preferable locking internet privacy time client requests web page server identify request ip address usually logs set web browsers record requested web pages viewable history feature usually cache content locally server browser communication uses https encryption web requests responses travel plain text internet viewed recorded cached intermediate systems web page asks user supplies personally identifiable information real address mail address web based entities associate current web traffic individual website uses http cookies username password authentication tracking techniques relate web visits identifiable information provided way possible web based organisation develop build profile individual people use site sites able build record individual includes information leisure activities shopping interests profession aspects demographic profile profiles obviously potential marketeers advertisers depending website terms conditions local laws apply information profiles sold shared passed organisations user informed ordinary people means little unexpected mails box uncannily relevant advertising future web page mean time spent indulging unusual result deluge targeted marketing unwelcome law enforcement counter terrorism espionage agencies identify target track individuals based interests proclivities web social networking sites try users use real names interests locations believe makes social networking experience realistic engaging users hand uploaded photographs unguarded statements identified individual regret exposure employers schools parents relatives influenced aspects social networking profiles posting individual intend audiences line bullies use personal information harass stalk users modern social networking websites allow fine grained control privacy settings individual posting complex easy use especially beginners photographs videos posted websites caused particular problems add person face line profile modern potential facial recognition technology possible relate face previously anonymous images events scenarios imaged image caching mirroring copying difficult remove image world wide web standards formal standards technical specifications software define operation different aspects world wide web internet information exchange documents work world wide web consortium headed berners lee produced internet engineering task force ietf organizations usually web standards discussed following publications seen foundational recommendations markup languages especially html xhtml define structure interpretation hypertext documents recommendations stylesheets especially css standards ecmascript usually form javascript ecma international recommendations document object model additional publications provide definitions essential technologies world wide web including limited following uniform resource identifier uri universal referencing resources internet hypertext documents images uris called urls defined ietf rfc std uniform resource identifier uri generic syntax predecessors numerous uri scheme defining rfcs hypertext transfer protocol http especially defined rfc http rfc http authentication specify browser server authenticate accessibility methods accessing web alternative mediums formats facilitate use individuals disabilities disabilities visual auditory physical speech related cognitive neurological combination accessibility features help people temporary disabilities like broken arm aging users abilities change web receives information providing information interacting society world wide web consortium claims essential web accessible provide equal access equal opportunity people disabilities tim berners lee noted power web universality access regardless disability essential aspect countries regulate web accessibility requirement websites international cooperation web accessibility initiative led simple guidelines web content authors software developers use web accessible persons assistive technology activity assures web technology works languages scripts cultures beginning unicode gained ground eventually december surpassed ascii western european web frequently character encoding originally rfc allowed resources identified uri subset ascii rfc allows characters character universal character set resource identified iri language statistics number web users doubled expected surpass billion early studies estimating size web capture recapture methods showed web indexed search engines web larger expected according study massive number billion documents web invisible web deep web survey million web pages determined far web content english language pages german french japanese recent study web searches different languages sample web determined billion web pages publicly indexable web end january indexable web contains billion pages july google software engineers jesse alpert nissan hajaj announced google search discovered trillion unique urls million domains operated commercial domains operating generic level domain com statistics measuring website popularity usually based number page views associated server hits file requests receives speed issues frustration congestion issues internet infrastructure high latency results slow browsing led pejorative world wide web world wide wait speeding internet ongoing discussion use peering qos technologies solutions reduce congestion guidelines web response times second tenth second ideal response time user sense interruption second highest acceptable response time download times second interrupt user experience seconds unacceptable response time user experience interrupted user likely leave site web caching web cache server located public internet enterprise stores recently accessed web pages improve response time users content requested certain time original request web browsers implement browser cache recently obtained data usually local disk drive http requests browser ask data changed access web pages resources contain expiration information control caching secure sensitive data online banking facilitate frequently updated sites news media sites highly dynamic content permit basic resources refreshed occasionally web site designers worthwhile collate resources css data javascript site wide files cached efficiently enterprise firewalls cache web resources requested user benefit search engines store cached content frequently accessed websites electronic publishing internet metaphors internet security lists websites prestel streaming media web web development tools webgraph web literacy reading niels br\u00fcgger ed web history pages historical perspective world wide web including issues culture content preservation external links website early archive web site internet statistics growth usage web internet living internet comprehensive history internet including world wide web world wide web consortium recommendations reduce world wide wait world wide web size daily estimated size world wide web antonio casilli elements sociology online interactions erd\u0151s webgraph server offers weekly updated graph representation constantly increasing fraction www th anniversary world wide web animated video produced usaid techchange explores role www addressing extreme poverty references", "Software engineering": "software engineer programming wikimedia foundation software engineering study application engineering design development maintenance software typical formal definitions software engineering research design develop test operating systems level software compilers network distribution software medical industrial military communications aerospace business scientific general computing applications systematic application scientific technological knowledge methods experience design implementation testing documentation software application systematic disciplined quantifiable approach development operation maintenance software engineering discipline concerned aspects software production establishment use sound engineering principles order economically obtain software reliable works efficiently real machines history margaret hamilton adopted oettinger term software engineering standing data results simulation code team designed apollo digital computers appeared early instructions operate wired machine practitioners quickly realized design flexible came stored program architecture von neumann architecture division hardware software began abstraction deal complexity computing programming languages started appear major step abstraction major languages fortran algol cobol released late deal scientific algorithmic business problems respectively dijkstra wrote seminal paper statement considered harmful david parnas introduced key concept modularity information hiding help programmers deal increasing complexity software systems term software engineering coined anthony oettinger margaret hamilton title world conference software engineering sponsored facilitated nato conference attended international experts software agreed defining best practices software grounded application engineering result conference report defines software developed software engineering foundations original report publicly available discipline software engineering created address poor quality software projects exceeding time budget control ensure software built systematically rigorously measurably time budget specification engineering addresses issues principles engineering applied software widespread lack best practices software time perceived software crisis barry boehm documented key advances field book software engineering economics include constructive cost model cocomo relates software development effort program man years source lines code sloc book analyzes software projects concludes cost fixing errors escalates project moves field use book asserts key driver software cost capability software development team software engineering institute sei established federally funded research development center headquartered campus carnegie mellon university pittsburgh pennsylvania united states watts humphrey founded sei software process program aimed understanding managing software engineering process book managing software process asserts software development process controlled measured improved process maturity levels introduced capability maturity model integration development cmmi dev defined government evaluates abilities software development team modern generally accepted best practices software engineering collected iso iec jtc sc subcommittee published software engineering body knowledge swebok subdisciplines software engineering divided subdisciplines requirements engineering elicitation analysis specification validation requirements software software design process defining architecture components interfaces characteristics component defined result process software construction detailed creation working meaningful software combination coding verification unit testing integration testing debugging software testing empirical technical investigation conducted provide stakeholders information quality product service test software maintenance totality activities required provide cost effective support software software configuration management identification configuration distinct points time purpose systematically controlling changes configuration maintaining integrity traceability configuration life cycle software engineering management application management activities planning coordinating measuring monitoring controlling reporting ensure development maintenance software systematic disciplined quantified software engineering process definition implementation assessment measurement management change improvement software life cycle process software engineering tools methods based tools intended assist software life cycle processes aided software engineering methods impose structure software engineering activity goal making activity systematic ultimately likely successful software quality management degree set inherent characteristics fulfills requirements software evolution process developing software initially repeatedly updating reasons education knowledge programming prerequisite software engineer ieee society produced swebok published iso iec technical report describing body knowledge recommend mastered graduate software engineer years experience software engineers enter profession obtaining university degree training vocational school standard international curriculum undergraduate software engineering degrees defined ccse updated number universities software engineering degree programs campus programs online programs masters level programs doctorate level programs certificate level programs united states practitioners wish proficient recognized professional software engineers ieee offers certifications extend knowledge level achieved academic degree certified software development associate certified software development professional addition university education companies sponsor internships students wishing pursue careers information technology internships introduce student interesting real world tasks typical software engineers encounter day similar experience gained military service software engineering profession legal requirements licensing certification professional software engineers vary world uk british society licenses software engineers members society chartered engineers ceng areas canada alberta british columbia ontario quebec software engineers hold professional engineer eng designation information systems professional designation canada legal requirement eng wants use title engineer practice software engineering united states starting offers ncees professional engineer exam software engineering allowing software engineers licensed recognized mandatory licensing currently largely debated perceived controversial parts texas use term engineer regulated law reserved use individuals professional engineer license ieee informs professional engineer license required individual work public health risk engineer fully qualified required standards particular state professional engineer licenses specific state awarded regularly retaken ieee society acm main based professional organizations software engineering publish guides profession software engineering ieee guide software engineering body knowledge version swebok defines field describes knowledge ieee expects practicing software engineer current swebok updated version released ieee promulgates software engineering code ethics employment bureau labor statistics counted software engineers holding jobs time period million practitioners employed engineering disciplines combined relative newness field study formal education software engineering taught science curriculum software engineers hold science degrees engineering background whatsoever software engineers work employees contractors software engineers work businesses government agencies civilian military non profit organizations software engineers work freelancers organizations specialists perform tasks software development process organizations require software engineers large projects people specialize role small projects people roles time specializations include industry analysts architects developers testers technical support middleware analysts managers academia educators researchers software engineers programmers work hours week percent software engineers percent programmers worked hours week injuries occupations rare like workers spend long periods terminal typing keyboard engineers programmers susceptible eyestrain discomfort hand wrist problems carpal tunnel syndrome field future looks bright according money magazine salary com rated software engineer best job united states software engineering ranked best job united states time careercast com certification software engineering institute offers certifications specific topics like security process improvement software architecture apple ibm microsoft companies sponsor certification examinations certification programs oriented specific technologies managed vendors technologies certification programs tailored institutions employ people use technologies broader certification general software engineering skills available professional societies ieee certified software professionals certified software development professional csdp added entry level certification known certified software development associate csda acm professional certification program early discontinued lack acm examined possibility professional certification software engineers late eventually decided certification inappropriate professional industrial practice software engineering british society developed legally recognized professional certification called chartered professional citp available fully qualified members mbcs software engineers eligible membership institution engineering technology qualify chartered engineer status canada canadian information processing society developed legally recognized professional certification called information systems professional isp ontario canada software engineers graduate canadian engineering accreditation board ceab accredited program successfully complete peo professional engineers ontario professional practice examination ppe months acceptable engineering experience eligible licensed professional engineers ontario professional engineers eng peo recognize online distance education consider science programs equivalent software engineering programs despite tremendous overlap sparked controversy certification war held number eng holders profession exceptionally low vast majority working professionals field hold degree cs se given difficult certification path holders non se degrees bother pursue license impact globalization initial impact outsourcing relatively lower cost international human resources developing world countries led massive migration software development activities corporations north america europe india later china russia developing countries approach flaws mainly distance timezone difference prevented human interaction clients developers massive job transfer negative impact aspects software engineering profession example students developed world avoid education related software engineering fear offshore outsourcing importing software products services countries displaced foreign visa workers statistics currently threat software engineering related career programming appear affected ability smartly leverage offshore near shore resources follow sun workflow improved overall operational capability organizations north americans leaving work asians arriving work asians leaving work europeans arriving work provides continuous ability human oversight business critical processes hours day paying overtime compensation disrupting key human resource sleep patterns global outsourcing advantages global generally distributed development run difficulties resulting distance developers key elements type distance identified geographical temporal cultural communication includes use different languages dialects english different locations research carried area global software development years extensive body relevant work published highlights benefits problems associated complex activity aspects software engineering research ongoing related areas related fields software engineering direct sub field engineering overlap science management science considered overall systems engineering controversy definition typical formal definitions software engineering application systematic disciplined quantifiable approach development operation maintenance software engineering discipline concerned aspects software production establishment use sound engineering principles order economically obtain software reliable works efficiently real machines term formally informal contemporary term broad range activities called programming systems analysis broad term aspects practice programming opposed theory programming called science term embodying advocacy specific approach programming urges treated engineering discipline art craft advocates codification recommended practices criticism software engineering sees practitioners individuals follow defined engineering approaches problem solving approaches specified software engineering books research papers connotations predictability precision mitigated risk professionalism perspective led calls licensing certification codified bodies knowledge mechanisms spreading engineering knowledge maturing field software craftsmanship proposed body software developers alternative emphasizes coding skills accountability software developers professionalism prescribed curriculum leading ad hoc problem solving craftmanship engineering lack predictability precision missing risk mitigation methods informal poorly defined software craftsmanship manifesto extends agile software manifesto draws metaphor modern software development apprenticeship model medieval europe software engineering extends engineering draws engineering model engineering process engineering project management engineering requirements engineering design engineering construction engineering validation concept new rarely understood widely misinterpreted including software engineering textbooks papers communities programmers crafters core issues software engineering approaches empirical real world validation approaches usually absent limited software engineering misinterpreted feasible theoretical environment dijkstra developed languages century refuted concepts software engineering prevalent thirty years ago arguing terms poor analogies called radical novelty science bachelor science information technology bachelor software engineering list software engineering conferences list software engineering publications software craftsmanship software engineering institute notes references reading external links guide software engineering body knowledge open systems engineering software development life cycle framework opensdlc org integrated creative commons sdlc software engineering institute carnegie mellon learn software engineering software engineering society", "Bioinformatics and computational biology": "map human chromosome national center biotechnology information website bioinformatics field develops methods software tools understanding biological data field science bioinformatics combines science statistics mathematics engineering analyze interpret biological data bioinformatics umbrella term body biological studies use programming methodology reference specific analysis pipelines repeatedly particularly fields genetics genomics common uses bioinformatics include identification candidate genes nucleotides snps identification aim better understanding genetic basis disease unique adaptations desirable properties esp agricultural species differences populations formal way bioinformatics tries understand organisational principles nucleic acid protein sequences introduction bioinformatics important areas biology experimental molecular biology bioinformatics techniques image signal processing allow extraction useful results large amounts raw data field genetics genomics aids sequencing annotating genomes observed mutations plays role text mining biological literature development biological gene ontologies organize query biological data plays role analysis gene protein expression regulation bioinformatics tools aid comparison genetic genomic data generally understanding evolutionary aspects molecular biology integrative level helps analyze catalogue biological pathways networks important systems biology structural biology aids simulation modeling dna rna protein structures molecular interactions history historically term bioinformatics mean means today paulien hogeweg ben hesper coined refer study information processes biotic systems definition placed bioinformatics field parallel biophysics study physical processes biological systems biochemistry study chemical processes biological systems sequences sequences genetic material frequently bioinformatics easier manage computers manually computers essential molecular biology protein sequences available frederick sanger determined sequence insulin early comparing multiple sequences manually turned impractical pioneer field margaret oakley dayhoff hailed david lipman director national center biotechnology information mother father bioinformatics dayhoff compiled protein sequence databases initially published books pioneered methods sequence alignment molecular evolution early contributor bioinformatics elvin kabat pioneered biological sequence analysis comprehensive volumes antibody sequences released tai te wu genomes genome sequences available pioneering work frederick sanger evident assisted analysis insightful analysis type important input cryptologists national security agency applied nucleotide sequences bacteriophages ms phix proof principle work showed standard methods cryptology reveal intrinsic features genetic code codon length reading frame work ahead time rejected publication numerous standard journals finally home journal theoretical biology term bioinformatics discovered refer creation databases genbank public availability data tools analysis quickly developed described journals nucleic acids research published specialized issues bioinformatics tools early goals study normal cellular activities altered different disease states biological data combined form comprehensive picture activities field bioinformatics evolved pressing task involves analysis interpretation types data includes nucleotide amino acid sequences protein domains protein structures actual process analyzing interpreting data referred computational biology important sub disciplines bioinformatics computational biology include development implementation programs enable efficient access use management types information development new algorithms mathematical formulas statistical measures assess relationships members large data sets example methods locate gene sequence predict protein structure function cluster protein sequences families related sequences primary goal bioinformatics increase understanding biological processes sets apart approaches focus developing applying computationally intensive techniques achieve goal examples include pattern recognition data mining machine learning algorithms visualization major research efforts field include sequence alignment gene finding genome assembly drug design drug discovery protein structure alignment protein structure prediction prediction gene expression protein protein interactions genome wide association studies modeling evolution bioinformatics entails creation advancement databases algorithms computational statistical techniques theory solve formal practical problems arising management analysis biological data past decades rapid developments genomic molecular research technologies developments information technologies combined produce tremendous information related molecular biology bioinformatics given mathematical computing approaches glean understanding biological processes approaches common activities bioinformatics include mapping analyzing dna protein sequences aligning dna protein sequences compare creating viewing models protein structures fundamental ways modelling biological living cell coming bioinformatic approaches static sequences proteins nucleic acids peptides interaction data entities including microarray data networks proteins metabolites dynamic structures proteins nucleic acids ligands including metabolites drugs peptides structures studied bioinformatics tools considered static anymore dynamics core structural studies systems biology comes category including reaction fluxes variable concentrations metabolites multi agent based modelling approaches capturing cellular events signalling transcription reaction dynamics broad sub category bioinformatics structural bioinformatics relation fields bioinformatics science field similar distinct biological computation computational biology biological computation uses bioengineering biology build biological computers bioinformatics uses computation better understand biology bioinformatics computational biology similar aims approaches differ scale bioinformatics organizes analyzes basic biological data computational biology builds theoretical models biological systems mathematical biology mathematical models analyzing biological data produce meaningful information involves writing running software programs use algorithms graph theory artificial intelligence soft computing data mining image processing simulation algorithms turn depend theoretical foundations discrete mathematics control theory theory information theory statistics sequence analysis sequences different genes proteins aligned measure similarity alignment compares protein sequences containing wpp domains phage sequenced dna sequences thousands organisms decoded stored databases sequence information analyzed determine genes encode proteins rna genes regulatory sequences structural motifs repetitive sequences comparison genes species different species similarities protein functions relations species use molecular systematics construct phylogenetic trees growing data long ago impractical analyze dna sequences manually today programs blast daily search sequences organisms containing billion nucleotides programs compensate mutations exchanged deleted inserted bases dna sequence identify sequences related identical variant sequence alignment sequencing process called shotgun sequencing technique example institute genomic research sequence bacterial genome haemophilus influenzae produce entire chromosomes instead generates sequences thousands small dna fragments ranging nucleotides long depending sequencing technology ends fragments overlap aligned properly genome assembly program reconstruct complete genome shotgun sequencing yields sequence data quickly task assembling fragments complicated larger genomes genome large human genome days cpu time large memory multiprocessor computers assemble fragments resulting assembly usually contains numerous gaps filled later shotgun sequencing method choice virtually genomes sequenced today genome assembly algorithms critical area bioinformatics research following goals human genome project left achieve closure new project developed national human genome research institute appeared called encode project collaborative data collection functional elements human genome uses generation dna sequencing technologies genomic tiling arrays technologies able generate automatically large amounts data lower research costs quality viability project revealed percent human genome covered primary rna transcripts produced alternative splicing mean human genome consists vast transcriptional networks aspect bioinformatics sequence analysis annotation involves computational gene finding search protein coding genes rna genes functional sequences genome nucleotides genome genes genomes higher organisms large parts dna serve obvious purpose called junk dna removed process called splicing place nucleus transcription dna contain unrecognized functional elements recent software patented able identify tissue specific alternative splicing events allow scientist identify multiple gene products come transcripts way bioinformatics helps bridge gap genome proteome projects example use dna sequences protein identification genome annotation context genomics annotation process marking genes biological features dna sequence process needs automated genomes large annotate hand mention desire annotate genomes possible rate sequencing ceased pose bottleneck annotation possible fact genes recognisable start stop regions exact sequence regions vary genes genome annotation software designed owen white team institute genomic research sequenced analyzed genome free living organism decoded bacterium haemophilus influenzae white built software genes fragments genomic sequence encode proteins transfer rnas initial assignments function genes current genome annotation systems work similarly programs available analysis genomic dna genemark program trained protein coding genes haemophilus influenzae constantly changing improving computational evolutionary biology evolutionary biology study origin descent species change time informatics assisted evolutionary biologists enabling researchers trace evolution large number organisms measuring changes dna physical taxonomy physiological observations recently compare entire genomes permits study complex evolutionary events gene duplication horizontal gene transfer prediction factors important bacterial speciation build complex computational models populations predict outcome time track share information increasingly large number species organisms future work endeavours reconstruct complex tree life area research science uses genetic algorithms confused computational evolutionary biology areas necessarily related comparative genomics core comparative genome analysis establishment correspondence genes orthology analysis genomic features different organisms intergenomic maps possible trace evolutionary processes responsible divergence genomes multitude evolutionary events acting organizational levels shape genome evolution lowest level point mutations affect individual nucleotides higher level large chromosomal segments undergo duplication lateral transfer inversion transposition deletion insertion ultimately genomes involved processes hybridization endosymbiosis leading rapid speciation complexity genome evolution poses exciting challenges developers mathematical models algorithms recourse spectra algorithmic statistical mathematical techniques ranging exact heuristics fixed parameter approximation algorithms problems based parsimony models markov chain monte carlo algorithms bayesian analysis problems based probabilistic models studies based homology detection protein families computation pan genomics pan genomics concept introduced tettelin medini eventually took root bioinformatics pan genome complete gene repertoire particular taxonomic group initially applied closely related strains species applied larger context like genus phylum divided parts core genome set genes common genomes study housekeeping genes vital survival dispensable flexible genome set genes present genomes study genetics disease advent generation sequencing obtaining sequence data map genes complex diseases infertility breast cancer alzheimer disease genome wide association studies essential pinpoint mutations complex diseases furthermore possibility genes prognosis diagnosis treatment essential applications studies discussing promising ways choose genes problems pitfalls genes predict disease presence prognosis analysis mutations cancer cancer genomes affected cells rearranged complex unpredictable ways massive sequencing efforts identify previously unknown point mutations variety genes cancer continue produce specialized automated systems manage sheer volume sequence data produced create new algorithms software compare sequencing results growing collection human genome sequences germline polymorphisms new physical detection technologies employed oligonucleotide microarrays identify chromosomal gains losses called comparative genomic hybridization single nucleotide polymorphism arrays detect known point mutations detection methods simultaneously measure thousand sites genome high throughput measure thousands samples generate terabytes data experiment massive amounts new types data generate new opportunities data contain considerable variability noise hidden markov model change point analysis methods developed infer real copy number changes breakthroughs generation sequencing technology providing field bioinformatics cancer genomics drastically change new methods software allow sequence rapid affordable way cancer genomes mean flexible process classify types cancer analysis cancer driven mutations genome furthermore individual tracking patients progression disease possible future sequence cancer samples type data requires novel informatics development analysis lesions recurrent tumors gene protein expression analysis gene expression expression genes determined measuring mrna levels multiple techniques including microarrays expressed cdna sequence tag est sequencing serial analysis gene expression sage tag sequencing massively parallel signature sequencing mpss rna seq known transcriptome shotgun sequencing wtss applications multiplexed situ hybridization techniques extremely noise prone subject bias biological measurement major research area computational biology involves developing statistical tools separate signal noise high throughput gene expression studies studies determine genes implicated disorder compare microarray data cancerous epithelial cells data non cancerous cells determine transcripts regulated regulated particular population cancer cells analysis protein expression protein microarrays high throughput ht mass spectrometry ms provide snapshot proteins present biological sample bioinformatics involved making sense protein microarray ht ms data approach faces similar problems microarrays targeted mrna involves problem matching large amounts mass data predicted masses protein sequence databases complicated statistical analysis samples multiple incomplete peptides protein detected analysis regulation regulation complex orchestration events starting extracellular signal hormone leading increase decrease activity proteins bioinformatics techniques applied explore steps process example promoter analysis involves identification study sequence motifs dna surrounding coding region gene motifs influence extent region transcribed mrna expression data infer gene regulation compare microarray data wide variety states organism form hypotheses genes involved state single cell organism compare stages cell cycle stress conditions heat shock starvation apply clustering algorithms expression data determine genes expressed example upstream regions promoters expressed genes searched represented regulatory elements examples clustering algorithms applied gene clustering means clustering self organizing maps soms hierarchical clustering consensus clustering methods bi copam later bi copam actually proposed address issues specific gene discovery problems consistent expression genes multiple microarray datasets structural bioinformatics dimensional protein structures common subjects bioinformatic analyses protein structure prediction important application bioinformatics amino acid sequence protein called primary structure easily determined sequence gene codes vast majority cases primary structure uniquely determines structure native environment course exceptions bovine spongiform encephalopathy mad cow disease prion knowledge structure vital understanding function protein structural information usually classified secondary tertiary quaternary structure viable general solution predictions remains open problem efforts far directed heuristics work time key ideas bioinformatics notion homology genomic branch bioinformatics homology predict function gene sequence gene function known homologous sequence gene function unknown infer share function structural branch bioinformatics homology determine parts protein important structure formation interaction proteins technique called homology modeling information predict structure protein structure homologous protein known currently remains way predict protein structures reliably example similar protein homology hemoglobin humans hemoglobin legumes leghemoglobin serve purpose transporting oxygen organism proteins completely different amino acid sequences protein structures virtually identical reflects near identical purposes techniques predicting protein structure include protein threading novo scratch physics based modeling network systems biology network analysis seeks understand relationships biological networks metabolic protein protein interaction networks biological networks constructed single type molecule entity genes network biology attempts integrate different data types proteins small molecules gene expression data connected physically functionally systems biology involves use simulations cellular subsystems networks metabolites enzymes comprise metabolism signal transduction pathways gene regulatory networks analyze visualize complex connections cellular processes artificial life virtual evolution attempts understand evolutionary processes simulation simple artificial life forms molecular interaction networks interactions proteins frequently visualized analyzed networks network protein protein interactions treponema pallidum causative agent syphilis diseases tens thousands dimensional protein structures determined ray crystallography protein nuclear magnetic resonance spectroscopy protein nmr central question structural bioinformatics practical predict possible protein protein interactions based shapes performing protein protein interaction experiments variety methods developed tackle protein protein docking problem work field interactions encountered field include protein ligand including drug protein peptide molecular dynamic simulation movement atoms rotatable bonds fundamental principle computational algorithms termed docking algorithms studying molecular interactions literature analysis growth number published literature makes virtually impossible read paper resulting disjointed sub fields research literature analysis aims employ computational statistical linguistics growing library text resources example abbreviation recognition identify long form abbreviation biological terms named entity recognition recognizing biological terms gene names protein protein interaction identify proteins interact proteins text area research draws statistics computational linguistics high throughput image analysis computational technologies accelerate fully automate processing quantification analysis large amounts high information content biomedical imagery modern image analysis systems augment observer ability measurements large complex set images improving accuracy objectivity speed fully developed analysis completely replace observer systems unique biomedical imagery biomedical imaging important diagnostics research examples high throughput high fidelity quantification sub cellular localization high content screening bioimage informatics morphometrics clinical image analysis visualization determining real time air flow patterns breathing lungs living animals quantifying occlusion size real time imagery development recovery arterial injury making behavioral observations extended video recordings laboratory animals infrared measurements metabolic activity determination inferring clone overlaps dna mapping sulston score high throughput single cell data analysis computational techniques analyse high throughput low measurement single cell data obtained flow cytometry methods typically involve finding populations cells relevant particular disease state experimental condition biodiversity informatics biodiversity informatics deals collection analysis biodiversity data taxonomic databases microbiome data examples analyses include phylogenetics niche modelling species richness mapping species identification tools databases databases essential bioinformatics research applications huge number available databases covering dna protein sequences molecular structures phenotypes biodiversity databases generally fall types contain data resulting directly empirical methods gene knockouts consist predicted data contain data sources meta databases incorporate data compiled multiple databases specialized specific organism databases vary format way accession public commonly databases listed comprehensive list check link beginning subsection motif finding genomenet motif search gene ontology toppgene funcassociate enrichr gather gene finding hidden markov model finding protein structures family pfam generation sequencing database data format fastq format gene expression analysis geo arrayexpress network analysis interaction analysis databases biogrid mint hprd curated human signaling network functional networks string kegg mind quick sampling generally computation data supported wet lab data software tools software tools bioinformatics range simple command line tools complex graphical programs standalone web services available bioinformatics companies public institutions open source bioinformatics software free open source software tools existed continued grow combination continued need new algorithms analysis emerging types biological readouts potential innovative silico experiments freely available open code bases helped create opportunities research groups contribute bioinformatics range open source software available regardless funding arrangements open source tools act incubators ideas community supported plug ins commercial applications provide facto standards shared object models assisting challenge bioinformation integration range open source software packages includes titles bioconductor bioperl biopython biojava biojs bioruby bioclipse emboss net bio apache taverna ugene maintain tradition create opportunities non profit open bioinformatics foundation supported annual bioinformatics open source conference bosc alternative method build public bioinformatics databases use mediawiki engine wikiopener extension allows database accessed updated experts field web services bioinformatics soap rest based interfaces developed wide variety bioinformatics applications allowing application running world use algorithms data computing resources servers parts world main advantages derive fact end users deal software database maintenance overheads basic bioinformatics services classified ebi categories sss sequence search services msa multiple sequence alignment bsa biological sequence analysis availability service oriented bioinformatics resources demonstrate applicability web based bioinformatics solutions range collection standalone tools common data format single standalone web based interface integrative distributed extensible bioinformatics workflow management systems bioinformatics workflow management systems bioinformatics workflow management specialized form workflow management designed specifically compose execute series computational data manipulation steps workflow bioinformatics application systems designed provide easy use environment individual application scientists create workflows provide interactive tools scientists enabling execute workflows view results real time simplify process sharing reusing workflows scientists enable scientists track provenance workflow execution results workflow creation steps platforms giving service galaxy kepler taverna ugene anduril education platforms software platforms designed teach bioinformatics concepts methods include rosalind online courses offered swiss institute bioinformatics training portal canadian bioinformatics workshops provides videos slides training workshops website creative commons license conferences large conferences concerned bioinformatics notable examples intelligent systems molecular biology ismb european conference computational biology eccb research computational molecular biology recomb references reading raul isea present day meaning word bioinformatics global journal advanced research ilzins isea hoebeke bioinformatics considered experimental biological science achuthsankar nair computational biology bioinformatics gentle overview communications society india january aluru srinivas ed handbook computational molecular biology chapman hall crc isbn chapman hall crc information science series baldi brunak bioinformatics machine learning approach nd edition mit press isbn barnes gray eds bioinformatics geneticists edition wiley isbn baxevanis ouellette eds bioinformatics practical guide analysis genes proteins edition wiley isbn baxevanis petsko stein stormo eds current protocols bioinformatics wiley isbn cristianini hahn introduction computational genomics cambridge university press isbn isbn durbin eddy krogh mitchison biological sequence analysis cambridge university press isbn keedwell intelligent bioinformatics application artificial intelligence techniques bioinformatics problems wiley isbn kohane et al microarrays integrative genomics mit press isbn lund et al immunological bioinformatics mit press isbn pachter lior sturmfels bernd algebraic statistics computational biology cambridge university press isbn pevzner pavel computational molecular biology algorithmic approach mit press isbn soinov bioinformatics pattern recognition come journal pattern recognition research jprr vol stevens hallam life sequence data driven history bioinformatics chicago university chicago press isbn tisdall james beginning perl bioinformatics reilly isbn dedicated issue philosophical transactions bioinformatics freely available catalyzing inquiry interface computing biology cstb report calculating secrets life contributions mathematical sciences computing molecular biology foundations computational systems biology mit course computational biology genomes networks evolution free mit course external links bioinformatics resource portal sib", "Distributed and parallel computing": "distributed computing field science studies distributed systems distributed software components located networked computers communicate coordinate actions passing messages components interact order achieve common goal significant characteristics distributed systems concurrency components lack global clock independent failure components examples distributed systems vary soa based systems massively multiplayer online games peer peer applications program runs distributed called distributed program distributed programming process writing programs alternatives message passing mechanism including rpc like connectors message queues goal challenge pursued scientists practitioners distributed systems location transparency goal fallen favour industry distributed systems different conventional non distributed systems differences network partitions partial failures partial upgrades simply papered attempts transparency cap theorem distributed computing refers use distributed systems solve computational problems distributed computing problem divided tasks solved computers communicate message passing introduction word distributed terms distributed distributed programming distributed algorithm originally referred networks individual computers physically distributed geographical area terms nowadays wider sense referring autonomous processes run physical interact message passing single definition distributed following defining properties commonly autonomous computational entities local memory entities communicate message passing article computational entities called computers nodes distributed common goal solving large computational problem alternatively user individual needs purpose distributed coordinate use shared resources provide communication services users typical properties distributed systems include following tolerate failures individual computers structure network topology network latency number computers known advance consist different kinds computers network links change execution distributed program limited incomplete view know input distributed parallel architecture client server client server architecture way provide service central source single server provides service clients communicate server consume products architecture clients servers different jobs server job respond service requests clients client job use data provided response order perform tasks peer peer term peer peer distributed systems labour divided components computers send receive data contribute processing power memory distributed computation distributed increases size capacity computational resources increases parallel distributed computing distributed systems groups networked computers goal work terms concurrent computing parallel computing distributed computing lot overlap clear distinction exists characterized parallel distributed processors typical distributed run concurrently parallel parallel computing seen particular tightly coupled form distributed computing distributed computing seen loosely coupled form parallel computing possible roughly classify concurrent systems parallel distributed following criteria parallel computing processors access shared memory exchange information processors distributed computing processor private memory distributed memory information exchanged passing messages processors figure right illustrates difference distributed parallel systems figure schematic view typical distributed usual represented network topology node line connecting nodes communication link figure shows distributed local memory information exchanged passing messages node available communication links figure shows parallel processor direct access shared memory situation complicated traditional uses terms parallel distributed algorithm match definitions parallel distributed systems section theoretical foundations detailed discussion rule thumb high performance parallel computation shared memory multiprocessor uses parallel algorithms coordination large scale distributed uses distributed algorithms history use concurrent processes communicate message passing roots operating architectures studied widespread distributed systems local area networks ethernet invented arpanet predecessor internet introduced late arpanet mail invented early mail successful application arpanet probably earliest example large scale distributed application addition arpanet successor internet early worldwide networks included usenet fidonet support distributed discussion systems study distributed computing branch science late early conference field symposium principles distributed computing podc dates european counterpart international symposium distributed computing disc held applications reasons distributed systems distributed computing include nature application require use communication network connects computers example data produced physical location required location cases use single possible principle use distributed beneficial practical reasons example cost efficient obtain desired level performance cluster low end computers comparison single high end distributed provide reliability non distributed single point failure distributed easier expand manage monolithic uniprocessor ghaemi et al define distributed query query selects data databases located multiple sites network offer sql example select ename dname company emp company dept sales goods deptno deptno examples examples distributed systems applications distributed computing include following networks telephone networks cellular networks networks internet wireless sensor networks routing algorithms network applications world wide web peer peer networks massively multiplayer online games virtual reality communities distributed databases distributed database management systems network file systems distributed information processing systems banking systems airline reservation systems real time process control aircraft control systems industrial control systems parallel computation scientific computing including cluster computing grid computing volunteer computing projects list distributed computing projects distributed rendering graphics theoretical foundations models tasks like automate question answer type like ask question produce answer theoretical science tasks called computational problems formally computational problem consists instances solution instance instances questions ask solutions desired answers questions theoretical science seeks understand computational problems solved computability theory efficiently computational complexity theory traditionally said problem solved design algorithm produces correct solution given instance algorithm implemented program runs general purpose program reads problem instance input performs computation produces solution output formalisms random access machines universal turing machines abstract models sequential general purpose executing algorithm field concurrent distributed computing studies similar questions case multiple computers executes network interacting processes computational problems solved network efficiently obvious meant solving problem case concurrent distributed example task algorithm designer concurrent distributed equivalent sequential general purpose discussion focuses case multiple computers issues concurrent processes running single viewpoints commonly parallel algorithms shared memory model processors access shared memory algorithm designer chooses program executed processor theoretical model parallel random access machines pram classical pram model assumes synchronous access shared memory shared memory programs extended distributed systems underlying operating encapsulates communication nodes virtually unifies memory individual systems model closer behavior real world multiprocessor machines takes account use machine instructions compare swap cas asynchronous shared memory wide body work model summary literature parallel algorithms message passing model algorithm designer chooses structure network program executed models boolean circuits sorting networks boolean circuit seen network gate runs extremely simple program similarly sorting network seen network comparator distributed algorithms message passing model algorithm designer chooses program computers run program work correctly regardless structure network commonly model graph finite state machine node case distributed algorithms computational problems typically related graphs graph describes structure network problem instance illustrated following example example consider computational problem finding coloring given graph different fields following approaches centralized algorithms graph encoded string string given input program finds coloring graph encodes coloring string outputs result parallel algorithms graph encoded string multiple computers access string parallel focus graph produce coloring main focus high performance computation exploits processing power multiple computers parallel distributed algorithms graph structure network node communication link edge initially knows immediate neighbors graph computers exchange messages discover structure produce color output main focus coordinating operation arbitrary distributed field parallel algorithms different focus field distributed algorithms lot interaction fields example cole vishkin algorithm graph coloring originally presented parallel algorithm technique directly distributed algorithm parallel algorithm implemented parallel shared memory distributed message passing traditional boundary parallel distributed algorithms choose suitable network vs run given network lie place boundary parallel distributed systems shared memory vs message passing complexity measures parallel algorithms resource addition time space number computers trade running time number computers problem solved faster computers running parallel speedup decision problem solved polylogarithmic time polynomial number processors problem said class nc class nc defined equally pram formalism boolean circuits pram machines simulate boolean circuits efficiently vice versa analysis distributed algorithms attention usually paid communication operations computational steps simplest model distributed computing synchronous nodes operate lockstep fashion communication round nodes parallel receive latest messages neighbours perform arbitrary local computation send new messages neighbours systems central complexity measure number synchronous communication rounds required complete task complexity measure closely related diameter network let diameter network hand computable problem solved trivially synchronous distributed approximately communication rounds simply gather information location rounds solve problem inform node solution rounds hand running time algorithm smaller communication rounds nodes network produce output having possibility obtain information distant parts network words nodes globally consistent decisions based information available local neighbourhood distributed algorithms known running time smaller rounds understanding problems solved algorithms central research questions field commonly measures total number bits transmitted network cf communication complexity problems traditional computational problems perspective ask question distributed processes question produces answer stops problems want stop examples problems include dining philosophers problem similar mutual exclusion problems problems distributed supposed continuously coordinate use shared resources conflicts deadlocks occur fundamental challenges unique distributed computing example challenges related fault tolerance examples related problems include consensus problems byzantine fault tolerance self stabilisation lot research focused understanding asynchronous nature distributed systems synchronizers run synchronous algorithms asynchronous systems logical clocks provide causal happened ordering events clock synchronization algorithms provide globally consistent physical time stamps properties distributed systems far focus designing distributed solves given problem complementary research problem studying properties given distributed halting problem analogous example field centralised computation given program task decide halts runs forever halting problem undecidable general case naturally understanding behaviour network hard understanding behaviour interesting special cases decidable particular possible reason behaviour network finite state machines example telling given network interacting asynchronous non deterministic finite state machines reach deadlock problem pspace complete decidable likely efficient centralised parallel distributed algorithm solves problem case large networks coordinator election coordinator election called leader election process designating single process organizer task distributed computers nodes task begun network nodes unaware node serve coordinator leader task unable communicate current coordinator coordinator election algorithm run node network recognizes particular unique node task coordinator network nodes communicate order decide coordinator state need method order break symmetry example node unique comparable identities nodes compare identities decide node highest identity coordinator definition problem attributed lelann formalized method create new token token ring network token lost coordinator election algorithms designed economical terms total bytes transmitted time algorithm suggested gallager humblet spira general undirected graphs strong impact design distributed algorithms general won dijkstra prize influential paper distributed computing algorithms suggested different kind network graphs undirected rings unidirectional rings complete graphs grids directed euler graphs general method decouples issue graph family design coordinator election algorithm suggested korach kutten moran order perform coordination distributed systems employ concept coordinators coordinator election problem choose process group processes different processors distributed act central coordinator central coordinator election algorithms exist bully algorithm bully algorithm process sends message current coordinator response given time limit process tries elect leader chang roberts algorithm chang roberts algorithm ring algorithm ring based election algorithm process largest unique identification number architectures hardware software architectures distributed computing lower level necessary interconnect multiple cpus sort network regardless network printed circuit board loosely coupled devices cables higher level necessary interconnect processes running cpus sort communication distributed programming typically falls basic architectures categories client server tier architecture tier architecture distributed objects loose coupling tight coupling client server smart client code contacts server data formats displays user input client committed server represents permanent change tier architecture tier systems client intelligence middle tier stateless clients simplifies application deployment web applications tier tier architecture tier refers typically web applications forward requests enterprise services type application responsible success application servers highly coupled clustered refers typically cluster machines closely work running shared process parallel task subdivided parts individually final result peer peer architecture special machine machines provide service manage network resources instead uniformly divided machines known peers peers serve clients servers space based refers infrastructure creates illusion virtualization single address space data transparently replicated according application needs decoupling time space reference achieved basic aspect distributed computing architecture method communicating coordinating work concurrent processes message passing protocols processes communicate directly typically master slave relationship alternatively database centric architecture enable distributed computing form direct inter process communication utilizing shared database appscale boinc code mobility decentralized computing distributed algorithmic mechanism design distributed cache distributed operating edsger dijkstra prize distributed computing folding home inferno jungle computing layered queueing network library oriented architecture loa list distributed computing conferences list important publications concurrent parallel distributed computing parallel distributed processing parallel programming model plan bell labs notes references books articles web sites reading books isbn isbn java distributed computing jim faber isbn articles conference papers rodr\u00edguez villagra bar\u00e1n bionetics pp external links", "Security and privacy": "information security shortened infosec practice defending information unauthorized access use disclosure disruption modification perusal inspection recording destruction general term regardless form data electronic physical overview security referred security information technology security information security applied technology form worthwhile note necessarily mean home desktop device processor memory devices range non networked standalone devices simple calculators networked mobile computing devices smartphones tablet computers security specialists major enterprise establishment nature value data larger businesses responsible keeping technology company secure malicious cyber attacks attempt breach critical private information gain control internal systems information assurance act ensuring data lost critical issues arise issues include limited natural disasters server malfunction physical theft instance data potential lost information stored computers modern era information assurance typically dealt security specialists common methods providing information assurance site backup data case mentioned issues arise threats threats come different forms common threats today software attacks theft intellectual property identity theft theft equipment information sabotage information extortion people experienced software attacks sort viruses worms phishing attacks trojan horses common examples software attacks theft intellectual property extensive issue businesses field intellectual property ownership property usually consisting form protection theft software probably common businesses today identity theft attempt act usually obtain person personal information advantage access vital information theft equipment information prevalent today fact devices today mobile cell phones prone theft far desirable data capacity increases sabotage usually consists destruction organization website attempt cause loss confidence customers information extortion consists theft company property information attempt receive payment exchange returning information property owner ways help protect attacks functional precautions user carefulness governments military corporations financial institutions hospitals private businesses amass great deal confidential information employees customers products research financial status information collected processed stored electronic computers transmitted networks computers confidential information business customers finances new product line fall hands competitor black hat hacker business customers suffer widespread irreparable financial loss damage company reputation protecting confidential information business requirement cases ethical legal requirement key concern organizations today derive optimal information security investment renowned gordon loeb model actually provides powerful mathematical economic approach addressing critical concern individual information security significant effect privacy viewed differently different cultures field information security grown evolved significantly recent years ways gaining entry field career offers areas specialization including securing network allied infrastructure securing applications databases security testing information systems auditing business continuity planning digital forensics history early days communication diplomats military commanders understood necessary provide mechanism protect confidentiality correspondence means detecting tampering julius caesar credited invention caesar cipher created order prevent secret messages read message fall wrong hands protection achieved application procedural handling controls sensitive information marked indicate protected transported trusted persons guarded stored secure environment strong box postal services expanded governments created official organizations intercept decipher read reseal letters uk secret office deciphering branch mid th century complex classification systems developed allow governments manage information according degree sensitivity british government codified extent publication official secrets act time world war multi tier classification systems communicate information fronts encouraged greater use code making breaking sections diplomatic military headquarters united kingdom led creation government code cypher school encoding sophisticated wars machines employed scramble unscramble information volume information shared allied countries second world war necessitated formal alignment classification systems procedural controls arcane range markings evolved indicate handle documents usually officers men stored increasingly complex safes storage facilities developed procedures evolved ensure documents destroyed properly failure follow procedures led greatest intelligence coups war end th century early years st century saw rapid advancements computing hardware software data encryption availability smaller powerful expensive computing equipment electronic data processing reach small business home user computers quickly interconnected internet rapid growth widespread use electronic data processing electronic business conducted internet numerous occurrences international terrorism fueled need better methods protecting computers information store process transmit academic disciplines security information assurance emerged numerous professional organizations sharing common goals ensuring security reliability information systems definitions information security attributes qualities confidentiality integrity availability cia information systems composed main portions hardware software communications purpose help identify apply information security industry standards mechanisms protection prevention levels layers physical personal organizational essentially procedures policies implemented tell people administrators users operators use products ensure information security organizations definitions infosec suggested different sources summarized adopted preservation confidentiality integrity availability information note addition properties authenticity accountability non repudiation reliability involved iso iec protection information information systems unauthorized access use disclosure disruption modification destruction order provide confidentiality integrity availability cnss ensures authorized users confidentiality access accurate complete information integrity required availability isaca information security process protecting intellectual property organisation pipkin information security risk management discipline job manage cost information risk business mcdermott geer informed sense assurance information risks controls balance anderson information security protection information minimises risk exposing information unauthorised parties venter eloff information security area study professional activity concerned development implementation security mechanisms available types technical organisational human oriented legal order information locations outside organisation perimeter consequently information systems information created processed stored transmitted destroyed free threats threats information information systems categorised corresponding security goal defined category threats set security goals identified result threat analysis revised periodically ensure adequacy conformance evolving environment currently relevant set security goals include confidentiality integrity availability privacy authenticity trustworthiness non repudiation accountability auditability cherdantseva hilton profession information security stable growing profession information security professionals stable employment percent change employer employment past year number professionals projected continuously grow percent annually basic principles key concepts cia triad confidentiality integrity availability heart information security members classic infosec triad confidentiality integrity availability interchangeably referred literature security attributes properties security goals fundamental aspects information criteria critical information characteristics basic building blocks continuous debate extending classic trio principles accountability proposed addition pointed issues non repudiation fit core concepts revised oecd guidelines security information systems networks proposed generally accepted principles awareness responsibility response ethics democracy risk assessment security design implementation security management reassessment building nist engineering principles information technology security proposed principles derived guidelines practices donn parker proposed alternative model classic cia triad called atomic elements information elements confidentiality possession integrity authenticity availability utility merits parkerian hexad subject debate security professionals based thorough analysis information assurance security ias literature ias octave proposed extension cia triad ias octave includes confidentiality integrity availability accountability auditability authenticity trustworthiness non repudiation privacy completeness accuracy ias octave evaluated series interviews ias academics experts ias octave dimensions reference model information assurance security rmias summarizes ias knowledge encompassing model confidentiality information security confidentiality property information available disclosed unauthorized individuals entities processes excerpt iso integrity information security data integrity means maintaining assuring accuracy completeness data entire life cycle means data modified unauthorized undetected manner thing referential integrity databases viewed special case consistency understood classic acid model transaction processing information security systems typically provide message integrity addition data confidentiality availability information serve purpose information available needed means computing systems store process information security controls protect communication channels access functioning correctly high availability systems aim remain available times preventing service disruptions power outages hardware failures upgrades ensuring availability involves preventing denial service attacks flood incoming messages target essentially forcing shut non repudiation law non repudiation implies intention fulfill obligations contract implies party transaction deny having received transaction party deny having sent transaction note regarded integrity important note technology cryptographic systems assist non repudiation efforts concept core legal concept transcending realm technology instance sufficient message matches digital signature signed sender private key sender sent message altered transit alleged sender return demonstrate digital signature algorithm vulnerable flawed allege prove signing key compromised fault violations lie sender assertions relieve sender liability assertion invalidate claim signature necessarily proves authenticity integrity prevents repudiation risk management certified information systems auditor cisa review manual provides following definition risk management risk management process identifying vulnerabilities threats information resources organization achieving business objectives deciding countermeasures reducing risk acceptable level based value information resource organization things definition need clarification process risk management ongoing iterative process repeated indefinitely business environment constantly changing new threats vulnerabilities emerge day second choice countermeasures controls manage risks strike balance productivity cost effectiveness countermeasure value informational asset protected risk analysis risk evaluation processes limitations security incidents occur emerge context rarity uniqueness rise unpredictable threats analysis phenomena characterized breakdowns surprises effects requires theoretical approach able examine interpret subjectively incident risk likelihood bad happen causes harm informational asset loss asset vulnerability weakness endanger cause harm informational asset threat man act nature potential cause harm likelihood threat use vulnerability cause harm creates risk threat use vulnerability inflict harm impact context information security impact loss availability integrity confidentiality possibly losses lost income loss life loss real property pointed possible identify risks possible eliminate risk remaining risk called residual risk risk assessment carried team people knowledge specific areas business membership team vary time different parts business assessed assessment use subjective qualitative analysis based informed opinion reliable dollar figures historical information available analysis use quantitative analysis research shown vulnerable point information systems human user operator designer human iso iec code practice information security management recommends following examined risk assessment security policy organization information security asset management human resources security physical environmental security communications operations management access control information systems acquisition development maintenance information security incident management business continuity management regulatory compliance broad terms risk management process consists identification assets estimating value include people buildings hardware software data electronic print supplies conduct threat assessment include acts nature acts war accidents malicious acts originating inside outside organization conduct vulnerability assessment vulnerability calculate probability exploited evaluate policies procedures standards training physical security quality control technical security calculate impact threat asset use qualitative analysis quantitative analysis identify select implement appropriate controls provide proportional response consider productivity cost effectiveness value asset evaluate effectiveness control measures ensure controls provide required cost effective protection discernible loss productivity given risk management choose accept risk based relative low value asset relative low frequency occurrence relative low impact business leadership choose mitigate risk selecting implementing appropriate control measures reduce risk cases risk transferred business buying insurance outsourcing business reality risks disputed cases leadership choose deny risk controls selecting proper controls implementing initially help organization bring risk acceptable levels control selection follow based risk assessment controls vary nature fundamentally ways protecting confidentiality integrity availability information iso iec defined controls different areas exhaustive organizations implement additional controls according requirement organization iso cut number controls technical standard information security place abnt nbr iso iec administrative administrative controls called procedural controls consist approved written policies procedures standards guidelines administrative controls form framework running business managing people inform people business run day day operations conducted laws regulations created government bodies type administrative control inform business industry sectors policies procedures standards guidelines followed payment card industry data security standard pci dss required visa mastercard example examples administrative controls include corporate security policy password policy hiring policies disciplinary policies administrative controls form basis selection implementation logical physical controls logical physical controls manifestations administrative controls administrative controls paramount importance logical logical controls called technical controls use software data monitor control access information computing systems example passwords network host based firewalls network intrusion detection systems access control lists data encryption logical controls important logical control frequently overlooked principle privilege principle privilege requires individual program process granted access privileges necessary perform task blatant example failure adhere principle privilege logging windows user administrator read email surf web violations principle occur individual collects additional access privileges time happens employees job duties change promoted new position transfer department access privileges required new duties frequently added existing access privileges longer necessary appropriate physical physical controls monitor control environment work place computing facilities monitor control access facilities example doors locks heating air conditioning smoke alarms suppression systems cameras barricades fencing security guards cable locks separating network workplace functional areas physical controls important physical control frequently overlooked separation duties separation duties ensures individual complete critical task example employee submits request reimbursement able authorize payment print check applications programmer server administrator database administrator roles separated defense depth onion model defense depth information security protect information life span information initial creation information final disposal information information protected motion rest lifetime information pass different information processing systems different parts information processing systems different ways information information systems threatened fully protect information lifetime component information processing protection mechanisms building layering overlapping security measures called defense depth strength greater weakest link defense depth strategy defensive measure fail defensive measures place continue provide protection recall earlier discussion administrative controls logical controls physical controls types controls form basis build defense depth strategy approach defense depth conceptualized distinct layers planes laid additional insight defense depth gained thinking forming layers onion data core onion people outer layer onion network security host based security application security forming outermost layers onion perspectives equally valid provides valuable insight implementation good defense depth strategy security classification information important aspect information security risk management recognizing value information defining appropriate procedures protection requirements information information equal information requires degree protection requires information assigned security classification step information classification identify member senior management owner particular information classified develop classification policy policy different classification labels define criteria information assigned particular label list required security controls classification factors influence classification information assigned include value information organization old information information obsolete laws regulatory requirements important considerations classifying information business model information security enables security professionals examine security systems perspective creating environment security managed holistically allowing actual risks addressed type information security classification labels selected depend nature organization examples business sector labels public sensitive private confidential government sector labels unclassified unofficial protected confidential secret secret non english equivalents cross sectoral formations traffic light protocol consists white green amber red employees organization business partners trained classification schema understand required security controls handling procedures classification classification particular information asset assigned reviewed periodically ensure classification appropriate information ensure security controls required classification place followed right procedures access control access protected information restricted people authorized access information programs cases computers process information authorized requires mechanisms place control access protected information sophistication access control mechanisms parity value information protected sensitive valuable information stronger control mechanisms need foundation access control mechanisms built start identification authentication access control generally considered steps identification authentication authorization identification identification assertion person makes statement hello john doe making claim claim true john doe granted access protected information necessary verify person claiming john doe john doe typically claim form username entering username claiming person username belongs authentication authentication act verifying claim identity john doe goes bank withdrawal tells bank teller john doe claim identity bank teller asks photo id hands teller driver license bank teller checks license sure john doe printed compares photograph license person claiming john doe photo match person teller authenticated john doe claimed similarly entering correct password user providing evidence person username belongs different types information authentication know things pin password mother maiden driver license magnetic swipe card biometrics including palm prints fingerprints voice prints retina eye scans strong authentication requires providing type authentication information factor authentication username common form identification systems today password common form authentication usernames passwords served purpose modern world longer adequate usernames passwords slowly replaced sophisticated authentication mechanisms authorization person program successfully identified authenticated determined informational resources permitted access actions allowed perform run view create delete change called authorization authorization access information computing services begins administrative policies procedures policies prescribe information computing services accessed conditions access control mechanisms configured enforce policies different computing systems equipped different kinds access control mechanisms offer choice different access control mechanisms access control mechanism offers based approaches access control derived combination approaches non discretionary approach consolidates access control centralized administration access information resources usually based individuals function role organization tasks individual perform discretionary approach gives creator owner information resource ability control access resources mandatory access control approach access granted denied basing security classification assigned information resource examples common access control mechanisms use today include role based access control available advanced database management systems simple file permissions provided unix windows operating systems group policy objects provided windows network systems kerberos radius tacacs simple access lists firewalls routers effective policies security controls enforceable upheld effective policies ensure people held accountable actions failed successful authentication attempts logged access information leave type audit trail need know principle needs affect talking access control need know principle gives access rights person perform job functions principle government dealing difference clearances employees different departments secret clearance need know order information exchanged need know principle network administrators grant employee privileges prevent employees access supposed need know helps enforce confidentiality integrity availability triad need know directly impacts confidential area triad cryptography information security uses cryptography transform usable information form renders unusable authorized user process called encryption information encrypted rendered unusable transformed original usable form authorized user possesses cryptographic key process decryption cryptography information security protect information unauthorized accidental disclosure information transit electronically physically information storage cryptography provides information security useful applications including improved authentication methods message digests digital signatures non repudiation encrypted network communications older secure applications telnet ftp slowly replaced secure applications ssh use encrypted network communications wireless communications encrypted protocols wpa wpa older secure wep wired communications itu hn secured aes encryption authentication key exchange software applications gnupg pgp encrypt data files email cryptography introduce security problems implemented correctly cryptographic solutions need implemented industry accepted solutions undergone rigorous peer review independent experts cryptography length strength encryption key important consideration key weak short produce weak encryption keys encryption decryption protected degree rigor confidential information protected unauthorized disclosure destruction available needed public key infrastructure pki solutions address problems surround key management process terms reasonable prudent person care diligence fields finance securities law years recent years terms way fields computing information security federal sentencing guidelines possible hold corporate officers liable failing exercise care diligence management information systems business world stockholders customers business partners governments expectation corporate officers run business accordance accepted business practices compliance laws regulatory requirements described reasonable prudent person rule prudent person takes care ensure necessary operate business sound business principles legal ethical manner prudent person diligent mindful attentive ongoing care business field information security harris offers following definitions care diligence care steps taken company taken responsibility activities place corporation taken necessary steps help protect company resources employees continual activities sure protection mechanisms continually maintained operational attention important points definitions care steps taken means steps verified measured produce tangible artifacts second diligence continual activities means people actually things monitor maintain protection mechanisms activities ongoing security governance software engineering institute carnegie mellon university publication titled governing enterprise security ges defines characteristics effective security governance include enterprise wide issue leaders accountable viewed business requirement risk based roles segregation duties defined addressed enforced policy adequate resources committed staff aware trained development life cycle requirement planned managed measurable measured reviewed audited incident response plans paragraphs non technical discuss selecting team members define roles lines authority define security incident define reportable incident training detection classification escalation containment eradication documentation change management change management formal process directing controlling alterations information processing environment includes alterations desktop computers network servers software objectives change management reduce risks posed changes information processing environment improve stability reliability processing environment changes objective change management prevent hinder necessary changes implemented change information processing environment introduces element risk apparently simple changes unexpected effects management management risk change management tool managing risks introduced changes information processing environment change management process ensures changes implemented inopportune times disrupt critical business processes interfere changes implemented change needs managed kinds changes everyday routine information processing adhere predefined procedure reduces overall level risk processing environment creating new user account deploying new desktop examples changes generally require change management relocating user file shares upgrading email server pose higher level risk processing environment normal everyday activity critical steps change management defining change communicating definition defining scope change change management usually overseen change review board composed representatives key business areas security networking systems administrators database administration applications development desktop support help desk tasks change review board facilitated use automated work flow application responsibility change review board ensure organizations documented change management procedures followed change management process follows requested request change person making change request person performs analysis implements change request change received undergo preliminary review determine requested change compatible organizations business model practices determine resources needed implement change approved management runs business controls allocation resources management approve requests changes assign priority change management choose reject change request change compatible business model industry standards best practices management choose reject change request change requires resources allocated change planned planning change involves discovering scope impact proposed change analyzing complexity change allocation resources developing testing documenting implementation backout plans need define criteria decision tested change tested safe test environment closely reflects actual production environment change applied production environment backout plan tested scheduled change review board responsibility assist scheduling changes reviewing proposed implementation date potential conflicts scheduled changes critical business activities communicated change scheduled communicated communication opportunity remind change review board changes critical business activities overlooked scheduling change communication serves help desk users aware change occur responsibility change review board ensure scheduled changes properly communicated affected change change implemented appointed date time changes implemented planning process develop implementation plan testing plan plan implementation change fail post implementation testing fails drop dead criteria met plan implemented documented changes documented documentation includes initial request change approval priority assigned implementation testing plans results change review board critique date time change implemented implemented change implemented successfully failed postponed post change review change review board hold post implementation review changes particularly important review failed backed changes review board try understand problems encountered look areas improvement change management procedures simple follow easy use greatly reduce overall risks created changes information processing environment good change management procedures improve overall quality success changes implemented accomplished planning peer review documentation communication iso iec visible ops handbook implementing itil practical auditable steps book summary information technology infrastructure library provide valuable guidance implementing efficient effective change management program information security business continuity business continuity mechanism organization continues operate critical business units planned unplanned disruptions affect normal business operations invoking planned managed procedures business continuity simply business process today disasters disruptions business reality disaster natural man affects normal life business planning important planning merely getting better prepared face knowing fully best plans fail planning helps reduce cost recovery operational overheads importantly sail smaller ones effortlessly businesses create effective plans need focus following key questions common knowledge bcp disaster strike things people ok bank figure money safe emergency response emergency response services help hit disaster strikes disaster emergency response teams need quickly crisis management team place parts business recover brings money spend ensure shall able sustained future growth identified sections critical business units magic bullet answer satisfies businesses need answers meet business requirements soon target recover critical business units bcp technical jargon called recovery time objective rto objective define costs business need spend recover disruption example cheaper recover business day hour need recover business machinery records food water people aspects dwell cost factor clearer business leaders need drive business continuity hold manager spent month created drp disaster recovery plan happened drp continuing sections comprehensive business continuity plan look recover business business center space work flooded people queuing reasons recover disaster work reduced production capacity main operational sites unavailable long long original sites systems people defines business resilience business know recover business sure plan works bcp pundits recommend testing plan year reviewing adequacy rewriting updating plans annually businesses change disaster recovery planning business continuity plan bcp takes broad approach dealing organizational wide effects disaster disaster recovery plan drp subset business continuity plan instead focused taking necessary steps resume normal business operations quickly possible disaster recovery plan executed immediately disaster occurs details steps taken order recover critical information technology infrastructure disaster recovery planning includes establishing planning group performing risk assessment establishing priorities developing recovery strategies preparing inventories documentation plan developing verification criteria procedure lastly implementing plan laws regulations privacy international privacy rankinggreen protections safeguardsred endemic surveillance societies partial listing european united kingdom canadian governmental laws regulations significant effect data processing information security important industry sector regulations included significant impact information security uk data protection act makes new provisions regulation processing information relating individuals including obtaining holding use disclosure information european union data protection directive eudpd requires eu member adopt national regulations standardize protection data privacy citizens eu misuse act act uk parliament making crime hacking criminal offence act model countries including canada republic ireland drawn inspiration subsequently drafting information security laws eu data retention laws requires internet service providers phone companies data electronic message sent phone months years family educational rights privacy act ferpa cfr federal law protects privacy student education records law applies schools receive funds applicable program department education generally schools written permission parent eligible student order release information student education record federal financial institutions examination council ffiec security guidelines auditors specifies requirements online banking security health insurance portability accountability act hipaa requires adoption national standards electronic health care transactions national identifiers providers health insurance plans employers requires health care providers insurance providers employers safeguard security privacy health data gramm leach bliley act glba known financial services modernization act protects privacy security private financial information financial institutions collect hold process sarbanes oxley act sox section act requires publicly traded companies assess effectiveness internal controls financial reporting annual reports submit end fiscal year chief information officers responsible security accuracy reliability systems manage report financial data act requires publicly traded companies engage independent auditors attest report validity assessments payment card industry data security standard pci dss establishes comprehensive requirements enhancing payment account data security developed founding payment brands pci security standards council including american express discover financial services jcb mastercard worldwide visa international help facilitate broad adoption consistent data security measures global basis pci dss multifaceted security standard includes requirements security management policies procedures network architecture software design critical protective measures state security breach notification laws california require businesses nonprofits state institutions notify consumers unencrypted personal information compromised lost stolen personal information protection electronics document act pipeda act support promote electronic commerce protecting personal information collected disclosed certain circumstances providing use electronic means communicate record information transactions amending canada evidence act statutory instruments act statute revision act hellenic authority communication security privacy adae law greek law establishes describes minimum information security controls deployed company provides electronic communication networks services greece order protect customers confidentiality include managerial technical controls log records stored years hellenic authority communication security privacy adae law latest greek law published adae concentrates protection integrity availability services data offered greek companies new law forces telcos associated companies build deploy test appropriate business continuity plans redundant infrastructures information security culture employee behavior big impact information security organizations cultural concept help different segments organization concern information security organization exploring relationship organizational culture information security culture provides following definition information security culture isc totality patterns behavior organization contribute protection information kinds information security culture needs improved continuously information security culture analysis change authors commented ending process cycle evaluation change maintenance manage information security culture steps taken pre evaluation strategic planning operative planning implementation post evaluation pre evaluation identify awareness information security employees analysis current security policy strategic planning come better awareness program need set clear targets clustering people helpful achieve operative planning set good security culture based internal communication management buy security awareness training program implementation stages implement information security culture commitment management communication organizational members courses organizational members commitment employees sources standards international organization standardization iso consortium national standards institutes countries coordinated secretariat geneva switzerland iso world largest developer standards iso information technology security techniques framework security assurance iso iec information technology security techniques code practice information security management iso information technology service management iso iec information technology security techniques information security management systems requirements particular information security professionals national institute standards technology nist non regulatory federal agency department commerce nist security division develops standards metrics tests validation programs publishes standards guidelines increase secure planning implementation management operation nist custodian federal information processing standard publications fips internet society professional membership society organization individual members countries provides leadership addressing issues confront future internet organization home groups responsible internet infrastructure standards including internet engineering task force ietf internet architecture board iab isoc hosts requests comments rfcs includes official internet protocol standards rfc site security handbook information security forum global nonprofit organization leading organizations financial services manufacturing consumer goods government areas undertakes research information security practices offers advice biannual standard good practice detailed advisories members institute information security professionals iisp independent non profit body governed members principal objective advancing professionalism information security practitioners professionalism industry institute developed iisp skills framework framework describes range competencies expected information security information assurance professionals effective performance roles developed collaboration private public sector organisations world renowned academics security leaders german federal office information security german bundesamt f\u00fcr sicherheit der bsi bsi standards set recommendations including methods processes procedures approaches measures relating information security bsi standard grundschutz methodology describes information security management implemented operated standard includes specific guide baseline protection catalogs known grundschutz catalogs catalogs known baseline protection manual catalogs collection documents useful detecting combating security relevant weak points environment cluster collection encompasses september pages introduction catalogs grundschutz approach aligned iso iec family european standards institute catalog information security indicators standardized industrial specification group isg isi scholars working field adam annie anton brian lamacchia bruce schneier cynthia dwork dawn song deborah estrin gene spafford ian goldberg lawrence gordon martin loeb monica lam prosper mutorogodo joan feigenbaum jean camp lance cottrell lorrie cranor paul van oorschot peter gutmann peter landrock ross anderson stefan brands enterprise information security architecture identity based security information security audit information security management information security policies information security standards information technology security audit risk itil security management mobile security list security certifications network security services privacy engineering privacy software privacy enhancing technologies security bug security information management security information act security level management security service single sign verification validation reading anderson security professionals evolve changing market sc magazine october aceituno information security paradigms issa journal september dhillon principles information systems security text cases john wiley sons easttom security fundamentals nd edition pearson press lambo iso iec future infosec certification issa journal november bibliography notes references external links dod ia policy chart dod information assurance technology analysis center web site patterns practices security engineering explained open security architecture controls patterns secure systems introduction information security iws information security chapter ross anderson book security engineering english translation greek regulation", "Databases": "database organized collection data collection schemes tables queries reports views objects data typically organized model aspects reality way supports processes requiring information modelling availability rooms hotels way supports finding hotel vacancies database management dbms software application interacts user applications database capture analyze data general purpose dbms designed allow definition creation querying update administration databases known dbmss include mysql postgresql microsoft sql server oracle sybase ibm db database generally portable different dbmss different dbms interoperate standards sql odbc jdbc allow single application work dbms database management systems classified according database model support popular database systems supported relational model represented sql language dbms loosely referred database terminology overview formally database refers set related data way organized access data usually provided database management dbms consisting integrated set software allows users interact databases provides access data contained database restrictions exist limit access particular data dbms provides functions allow entry storage retrieval large quantities information provides ways manage information organized close relationship term database casually refer database dbms manipulate outside world professional information technology term database refer collection related data spreadsheet card index article concerned databases size usage requirements necessitate use database management existing dbmss provide functions allow management database data classified main functional groups data definition creation modification removal definitions define organization data update insertion modification deletion actual data retrieval providing information form directly usable processing applications retrieved data available form basically stored database new form obtained altering combining existing data database administration registering monitoring users enforcing data security monitoring performance maintaining data integrity dealing concurrency control recovering information corrupted event unexpected failure database dbms conform principles particular database model database refers collectively database model database management database physically database servers dedicated computers hold actual databases run dbms related software database servers usually multiprocessor computers generous memory raid disk arrays stable storage raid recovery data disks fail hardware database accelerators connected servers high speed channel large volume transaction processing environments dbmss heart database applications dbmss built custom multitasking kernel built networking support modern dbmss typically rely standard operating provide functions dbmss comprise significant economical market storage vendors account dbms requirements development plans databases dbmss categorized according database model support relational xml type run server cluster mobile phone query language access database sql xquery internal engineering affects performance scalability resilience security applications databases support internal operations organizations underpin online interactions customers suppliers enterprise software databases hold administrative information specialized data engineering data economic models examples database applications include computerized library systems flight reservation systems computerized parts inventory systems application areas dbms banking customer information accounts loans banking transactions airlines reservations schedule information airlines use databases geographically distributed manner terminals situated world accessed central database phone lines data networks universities student information course registrations grades credit card transactions purchases credit cards generation monthly statements keeping records calls generating monthly bills maintaining balances prepaid calling cards storing information communication networks finance storing information holdings sales purchases financial instruments stocks bonds sales customer product purchase information manufacturing management supply chain tracking production items factories inventories items warehouses stores orders items human resources information employees salaries payroll taxes benefits generation paychecks general purpose special purpose dbmss dbms evolved complex software development typically requires thousands person years development effort general purpose dbmss adabas oracle db undergoing upgrades general purpose dbmss aim meet needs applications possible adds complexity fact development cost spread large number users means cost effective approach general purpose dbms optimal solution cases general purpose dbms introduce unnecessary overhead examples systems use special purpose databases common example email performs functions general purpose dbms insertion deletion messages composed items data associating messages particular email address functions limited required handle email provide user functionality available general purpose dbms databases application software accesses database behalf end users exposing dbms interface directly application programmers use wire protocol directly likely application programming interface database designers database administrators interact dbms dedicated interfaces build maintain applications databases need knowledge understanding dbmss operate dbmss external interfaces tuning parameters history following technology progress areas processors memory storage networks sizes capabilities performance databases respective dbmss grown orders magnitude development database technology divided eras based data model structure navigational sql relational post relational main early navigational data models hierarchical model epitomized ibm ims codasyl model network model implemented number products idms relational model proposed edgar codd departed tradition insisting applications search data content following links relational model employs sets ledger style tables different type entity mid computing hardware powerful allow wide deployment relational systems dbmss plus applications early relational systems dominated large scale data processing applications remain dominant ibm db oracle mysql microsoft sql server dbms dominant database language standardised sql relational model influenced database languages data models object databases developed overcome inconvenience object relational impedance mismatch led coining term post relational development hybrid object relational databases generation post relational databases late known nosql databases introducing fast key value stores document oriented databases competing generation known newsql databases attempted new implementations retained relational sql model aiming match high performance nosql compared commercially available relational dbmss navigational dbms basic structure navigational codasyl database model introduction term database coincided availability direct access storage disks drums mid onwards term represented contrast tape based systems past allowing shared interactive use daily batch processing oxford english dictionary cites report development corporation california use term data base specific technical sense computers grew speed capability number general purpose database systems emerged mid number systems come commercial use standard began grow charles bachman author product integrated data store ids founded database task group codasyl group responsible creation standardization cobol database task group delivered standard generally known codasyl approach soon number commercial products based approach entered market codasyl approach relied manual navigation linked data set formed large network applications records methods use primary key known calc key typically implemented hashing navigating relationships called sets record scanning records sequential order later systems added trees provide alternate access paths codasyl databases added straightforward query language final tally codasyl complex required significant training effort produce useful applications ibm dbms known information management ims ims development software written apollo program ims generally similar concept codasyl strict hierarchy model data navigation instead codasyl network model concepts later known navigational databases way data accessed bachman turing award presentation programmer navigator ims classified hierarchical database idms cincom systems total database classified network databases ims remains use relational dbms edgar codd worked ibm san jose california offshoot offices primarily involved development hard disk systems unhappy navigational model codasyl approach notably lack search facility wrote number papers outlined new approach database construction eventually culminated groundbreaking relational model data large shared data banks paper described new storing working large databases instead records stored sort linked list free form records codasyl codd idea use table fixed length records table different type entity linked list inefficient storing sparse databases data record left relational model solved splitting data series normalized tables relations optional elements moved main table room needed data freely inserted deleted edited tables dbms maintenance needed present table view application user relational model records linked virtual keys stored database defined needed data contained records relational model allowed content database evolve constant rewriting links pointers relational comes entities referencing entities known relationship like traditional hierarchical model relationship like navigational network model relational model express hierarchical navigational models native tabular model allowing pure combined modeling terms models application requires instance common use database track information users login information addresses phone numbers navigational approach data placed single record unused items simply placed database relational approach data normalized user table address table phone number table instance records created optional tables address phone numbers actually provided linking information key relational model bit information key uniquely defining particular record information collected user information stored optional tables searching key instance login user unique addresses phone numbers user recorded login key simple linking related data single collection traditional languages designed navigational approach require programs loop order collect records relational approach require loops collect information record codd solution necessary looping set oriented language suggestion later spawn ubiquitous sql branch mathematics known tuple calculus demonstrated support operations normal databases inserting updating providing simple finding returning sets data single operation codd paper picked people berkeley eugene wong michael stonebraker started project known ingres funding allocated geographical database project student programmers produce code beginning ingres delivered test products generally ready widespread use ingres similar number ways including use language data access known quel time ingres moved emerging sql standard ibm test implementation relational model prtv production business discontinued honeywell wrote mrds multics new implementations alphora dataphor rel dbms implementations usually called relational actually sql dbmss university michigan began development micro information management based childs set theoretic data model micro manage large data sets department labor environmental protection agency researchers university alberta university michigan wayne state university ran ibm mainframe computers michigan terminal remained production integrated approach attempts build database systems integrated hardware software underlying philosophy integration provide higher performance lower cost examples ibm early offering teradata britton lee database machine approach hardware support database management icl cafs accelerator hardware disk controller programmable search capabilities long term efforts generally unsuccessful specialized database machines pace rapid development progress general purpose computers database systems nowadays software systems running general purpose hardware general purpose data storage idea pursued certain applications companies like netezza oracle exadata late sql dbms ibm started working prototype loosely based codd concepts early version ready work started multi table systems data split data record optional stored single large chunk subsequent multi user versions tested customers time standardized query language sql added codd ideas establishing workable superior codasyl pushing ibm develop true production version known sql ds later database db larry ellison oracle started different chain based ibm papers beat ibm market version released stonebraker went apply lessons ingres develop new database postgres known postgresql postgresql global mission critical applications org info domain registries use primary data store large companies financial institutions sweden codd paper read mimer sql developed mid uppsala university project consolidated independent enterprise early mimer introduced transaction handling high robustness applications idea subsequently implemented dbmss data model entity relationship model emerged gained popularity database design emphasized familiar description earlier relational model later entity relationship constructs retrofitted data modeling construct relational model difference irrelevant desktop ushered age desktop computing new computers empowered users spreadsheets like lotus database software like dbase dbase product lightweight easy user understand box wayne ratliff creator dbase stated dbase different programs like basic fortran cobol lot dirty work data manipulation dbase instead user user concentrate having mess dirty details opening reading closing files managing space allocation dbase selling software titles early object oriented rise object oriented programming saw growth data databases handled programmers designers began treat data databases objects person data database person attributes address phone number age considered belong person instead extraneous data allows relations data relations objects attributes individual fields term object relational impedance mismatch described inconvenience translating programmed objects database tables object databases object relational databases attempt solve problem providing object oriented language extensions sql programmers use alternative purely relational sql programming libraries known object relational mappings orms attempt solve problem nosql newsql generation post relational databases known nosql databases including fast key value stores document oriented databases xml databases type structured document oriented database allows querying based xml document attributes xml databases enterprise database management xml machine machine data standard xml database management systems include commercial software marklogic oracle berkeley db xml free use software clusterpoint distributed xml json database enterprise software database platforms support industry standard acid compliant transaction processing strong database consistency characteristics high level database security nosql databases fast require fixed table schemas avoid join operations storing denormalized data designed scale horizontally popular nosql systems include mongodb couchbase riak memcached redis couchdb hazelcast apache cassandra hbase open source software products recent years high demand massively distributed databases high partition tolerance according cap theorem impossible distributed simultaneously provide consistency availability partition tolerance guarantees distributed satisfy guarantees time reason nosql databases called eventual consistency provide availability partition tolerance guarantees reduced level data consistency newsql class modern relational databases aims provide scalable performance nosql systems online transaction processing read write workloads sql maintaining acid guarantees traditional database databases include scalebase clustrix enterprisedb memsql nuodb voltdb research database technology active research topic academia research development groups companies example ibm research research activity includes theory development prototypes notable research topics included models atomic transaction concept related concurrency control techniques query languages query optimization methods raid database research area dedicated academic journals example acm transactions database systems tods data knowledge engineering dke annual conferences acm sigmod acm pods vldb ieee icde examples way classify databases involves type contents example bibliographic document text statistical multimedia objects way application area example accounting music compositions movies banking manufacturing insurance way technical aspect database structure interface type section lists adjectives characterize different kinds databases memory database database primarily resides main memory typically backed non volatile data storage main memory databases faster disk databases response time critical network equipment sap hana platform hot topic memory database hana able run servers tb main memory powered ibm founder company claimed big run largest sap customers active database includes event driven architecture respond conditions inside outside database possible uses include security monitoring alerting statistics gathering authorization databases provide active database features form database triggers cloud database relies cloud technology database dbms reside remotely cloud applications developed programmers later maintained utilized application end users web browser open apis data warehouses archive data operational databases external sources market research firms warehouse central source data use managers end users access operational data example sales data aggregated weekly totals converted internal product codes use upcs compared acnielsen data basic essential components data warehousing include extracting analyzing mining data transforming loading managing data available use deductive database combines logic programming relational database example datalog language distributed database data dbms span multiple computers document oriented database designed storing retrieving managing document oriented semi structured data information document oriented databases main categories nosql databases embedded database dbms tightly integrated application software requires access stored data way dbms hidden application end users requires little ongoing maintenance end user databases consist data developed individual end users examples collections documents spreadsheets presentations multimedia files products exist support databases simpler fledged dbmss elementary dbms functionality federated database comprises distinct databases dbms handled single database federated database management fdbms transparently integrates multiple autonomous dbmss possibly different types case heterogeneous database provides integrated conceptual view term multi database synonym federated database refer integrated fdbms managed integrated schema group databases cooperate single application case typically middleware distribution typically includes atomic commit protocol acp phase commit protocol allow distributed global transactions participating databases graph database kind nosql database uses graph structures nodes edges properties represent store information general graph databases store graph distinct specialized graph databases triplestores network databases array dbms kind nosql dbms allows model store retrieve usually large multi dimensional arrays satellite images climate simulation output hypertext hypermedia database word piece text representing object piece text article picture film hyperlinked object hypertext databases particularly useful organizing large amounts disparate information example useful organizing online encyclopedias users conveniently jump text world wide web large distributed hypertext database knowledge base abbreviated kb kb special kind database knowledge management providing means computerized collection organization retrieval knowledge collection data representing problems solutions related experiences mobile database carried synchronized mobile computing device operational databases store detailed data operations organization typically process relatively high volumes updates transactions examples include customer databases record contact credit demographic information business customers personnel databases hold information salary benefits skills data employees enterprise resource planning systems record details product components parts inventory financial databases track organization money accounting financial dealings parallel database seeks improve performance parallelization tasks loading data building indexes evaluating queries major parallel dbms architectures induced underlying hardware architecture shared memory architecture multiple processors share main memory space data storage shared disk architecture processing unit typically consisting multiple processors main memory units share storage shared architecture processing unit main memory storage probabilistic databases employ fuzzy logic draw inferences imprecise data real time databases process transactions fast result come acted right away spatial database store data features queries data include location based queries like closest hotel area temporal database built time aspects example temporal data model temporal version sql specifically temporal aspects usually include valid time transaction time terminology oriented database builds object oriented database customized specific field unstructured data database intended store manageable protected way diverse objects fit naturally conveniently common databases include email messages documents journals multimedia objects misleading objects highly structured entire possible object collection fit predefined structured framework established dbmss support unstructured data ways new dedicated dbmss emerging design modeling task database designer produce conceptual data model reflects structure information held database common approach develop entity relationship model aid drawing tools popular approach unified modeling language successful data model accurately reflect possible state external world modeled example people phone number allow information captured designing good conceptual data model requires good understanding application domain typically involves asking deep questions things organisation like customer supplier product sold different forms packaging product different products plane flies new york dubai frankfurt flight maybe answers questions establish definitions terminology entities customers products flights flight segments relationships attributes producing conceptual data model involves input business processes analysis workflow organization help establish information needed database left example help deciding database needs hold historic data current data having produced conceptual data model users happy stage translate schema implements relevant data structures database process called logical database design output logical data model expressed form schema conceptual data model theory independent choice database technology logical data model expressed terms particular database model supported chosen dbms terms data model database model interchangeably article use data model design specific database database model modelling notation express design popular database model general purpose databases relational model precisely relational model represented sql language process creating logical database design model uses methodical approach known normalization goal normalization ensure elementary fact recorded place insertions updates deletions automatically maintain consistency final stage database design decisions affect performance scalability recovery security like called physical database design key goal stage data independence meaning decisions performance optimization purposes invisible end users applications physical design driven mainly performance requirements requires good knowledge expected workload access patterns deep understanding features offered chosen dbms aspect physical database design security involves defining access control database objects defining security levels methods data models collage types database models database model type data model determines logical structure database fundamentally determines manner data stored organized manipulated popular example database model relational model sql approximation relational uses table based format common logical data models databases include navigational databases hierarchical database model network model graph database relational model entity relationship model enhanced entity relationship model object model document model entity attribute value model star schema object relational database combines related structures physical data models include inverted index flat file models include associative model model array model multivalue model specialized models optimized particular types data xml database semantic model content store event store time series model external conceptual internal views traditional view data database management provides views database data external level defines group end users sees organization data database single database number views external level conceptual level unifies external views compatible global view provides synthesis external views scope database end users database application developers database administrators internal level physical level internal organization data inside dbms implementation section concerned cost performance scalability operational matters deals storage layout data storage structures indexes enhance performance occasionally stores data individual views materialized views computed generic data performance justification exists redundancy balances external views performance requirements possibly conflicting attempt optimize overall performance activities typically conceptual logical physical internal view data number different external views allows users database information business related way technical processing viewpoint example financial department company needs payment details employees company expenses need details employees human resources department different departments need different views company database level database architecture relates concept data independence major initial driving forces relational model idea changes certain level affect view higher level example changes internal level affect application programs written conceptual level interfaces reduces impact making physical changes improve performance conceptual view provides level indirection internal external hand provides common view database independent different external view structures hand abstracts away details data stored managed internal level principle level external view presented different data model practice usually given dbms uses data model external conceptual levels relational model internal level hidden inside dbms depends implementation implementation section requires different level uses types data structure types separating external conceptual internal levels major feature relational database model implementations dominate st century databases languages database languages special purpose languages following data definition language defines data types relationships data manipulation language performs tasks inserting updating deleting data occurrences query language allows searching information computing derived information database languages specific particular data model notable examples include sql combines roles data definition data manipulation query single language commercial languages relational model departs respects relational model described codd example rows columns table ordered sql standard american national standards institute ansi international organization standardization iso standards regularly enhanced supported varying degrees conformance mainstream commercial relational dbmss oql object model language standard object data management group influenced design newer query languages like jdoql ejb ql xquery standard xml query language implemented xml database systems marklogic exist relational databases xml capability oracle db memory xml processors saxon sql xml combines xquery sql database language incorporate features like dbms specific configuration storage engine management computations modify query results like counting summing averaging sorting grouping cross referencing constraint enforcement automotive database allowing engine type car application programming interface version query language programmer convenience performance security availability critical importance database technology smooth running enterprise database systems include complex mechanisms deliver required performance security availability allow database administrators control use features storage database storage container physical materialization database comprises internal physical level database architecture contains information needed metadata data data internal data structures reconstruct conceptual level external level internal level needed putting data permanent storage generally responsibility database engine storage engine typically accessed dbms underlying operating utilizing operating systems file systems intermediates storage layout storage properties configuration setting extremely important efficient operation dbms closely maintained database administrators dbms operation database residing types storage memory external storage database data additional needed information possibly large amounts coded bits data typically reside storage structures look completely different way data look conceptual external levels ways attempt optimize best possible levels reconstruction needed users programs computing additional types needed information data querying database dbmss support specifying character encoding store data multiple encodings database low level database storage structures storage engine serialize data model written medium choice techniques indexing improve performance conventional storage row oriented column oriented correlation databases materialized views storage redundancy employed increase performance common example storing materialized views consist frequently needed external views query results storing views saves expensive computing time needed downsides materialized views overhead incurred updating synchronized original updated database data cost storage redundancy replication occasionally database employs storage redundancy database objects replication copies increase data availability improve performance simultaneous multiple end user accesses database object provide resiliency case partial failure distributed database updates replicated object need synchronized object copies cases entire database replicated security database security deals aspects protecting database content owners users ranges protection intentional unauthorized database uses unintentional database accesses unauthorized entities person program database access control deals controlling person certain program allowed access information database information comprise specific database objects record types specific records data structures certain computations certain objects query types specific queries utilizing specific access paths specific indexes data structures access information database access controls set special authorized database owner personnel uses dedicated protected security dbms interfaces managed directly individual basis assignment individuals privileges groups elaborate models assignment individuals groups roles granted entitlements data security prevents unauthorized users viewing updating database passwords users allowed access entire database subsets called subschemas example employee database contain data individual employee group users authorized view payroll data allowed access work history medical data dbms provides way interactively enter update database interrogate capability allows managing personal databases data security general deals protecting specific chunks data physically corruption destruction removal physical security interpretation parts meaningful information looking strings bits comprise concluding specific valid credit card numbers data encryption change access logging records accessed attributes changed changed logging services allow forensic database audit later keeping record access occurrences changes application level code record changes leaving database monitoring set attempt detect security breaches transactions concurrency database transactions introduce level fault tolerance data integrity recovery crash database transaction unit work typically encapsulating number operations database reading database object writing acquiring lock abstraction supported database systems transaction defined boundaries terms program code executions included transaction determined transaction programmer special transaction commands acronym acid describes ideal properties database transaction atomicity consistency isolation durability migration section database migration article data migration database built dbms portable dbms dbms run situations desirable migrate database dbms reasons primarily economical different dbmss different total costs ownership tcos functional operational different dbmss different capabilities migration involves database transformation dbms type transformation maintain possible database related application related application programs intact database conceptual external architectural levels maintained transformation desired aspects architecture internal level maintained complex large database migration complicated costly time project factored decision migrate spite fact tools exist help migration specific dbmss typically dbms vendor provides tools help importing databases popular dbmss building maintaining tuning designing database application stage building database typically appropriate general purpose dbms selected utilized purpose dbms provides needed user interfaces utilized database administrators define needed application data structures dbms respective data model user interfaces select needed dbms parameters like security related storage allocation parameters database ready data structures needed components defined typically populated initial application data database initialization typically distinct project cases specialized dbms interfaces support bulk insertion making operational cases database operational application data data accumulated operation database created initialised populated needs maintained database parameters need changing database need tuned tuning better performance application data structures changed added new related application programs written add application functionality backup restore desired bring database previous state reasons cases database corrupted software error updated erroneous data achieve backup operation occasionally continuously desired database state values data embedding database data structures kept dedicated backup files techniques exist effectively state needed decided database administrator bring database state specifying state desired point time database state files utilized restore state static analysis static analysis techniques software verification applied scenario query languages particular abstract interpretation framework extended field query languages relational databases way support sound approximation techniques semantics query languages tuned according suitable abstractions concrete domain data abstraction relational database interesting applications particular security purposes fine grained access control watermarking dbms features include database logs graphics component producing graphs charts especially data warehouse query optimizer performs query optimization query choose efficient query plan partial order tree operations executed compute query result specific particular storage engine tools hooks database design application programming application program maintenance database performance analysis monitoring database configuration monitoring dbms hardware configuration dbms related database span computers networks storage units related database mapping especially distributed dbms storage allocation database layout monitoring storage migration comparison database tools comparison object database management systems comparison object relational database management systems comparison relational database management systems data hierarchy data bank data store database theory database testing database centric architecture question focused dataset references reading ling liu tamer \u00f6zsu eds encyclopedia database systems illus isbn beynon davies database systems rd edition palgrave houndmills basingstoke connolly thomas carolyn begg database systems new york harlow gray reuter transaction processing concepts techniques st edition morgan kaufmann publishers kroenke david david auer database concepts rd ed new york prentice raghu ramakrishnan johannes gehrke database management systems abraham silberschatz henry korth sudarshan database concepts discussion database systems teorey lightstone nadeau database modeling design logical design th edition morgan kaufmann press isbn external links db file extension informations files db extension", "Simulation": "wooden mechanical horse simulator world war simulation imitation operation real world process time act simulating requires model developed model represents key characteristics behaviors functions selected physical abstract process model represents simulation represents operation time simulation contexts simulation technology performance optimization safety engineering testing training education video games experiments study simulation models simulation scientific modelling natural systems human systems gain insight functioning simulation eventual real effects alternative conditions courses action simulation real engaged accessible dangerous unacceptable engage designed built simply exist key issues simulation include acquisition valid source information relevant selection key characteristics behaviours use simplifying approximations assumptions simulation fidelity validity simulation outcomes classification terminology human loop simulation outer space visualization direct numerical simulation model historically simulations different fields developed largely independently th century studies systems theory cybernetics combined spreading use computers fields led unification systematic view concept physical simulation refers simulation physical objects substituted real thing circles use term simulations modelling selected laws physics article physical objects chosen smaller cheaper actual object interactive simulation special kind physical simulation referred human loop simulation physical simulations include human operators flight simulator driving simulator human loop simulations include simulation called synthetic environment simulation failure analysis refers simulation create environment conditions identify cause equipment failure best fastest method identify failure cause simulation simulation sim attempt model real life hypothetical situation studied works changing variables simulation predictions behaviour tool virtually investigate behaviour study simulation useful modeling natural systems physics chemistry biology human systems economics social science computational sociology engineering gain insight operation systems good example usefulness computers simulate field network traffic simulation simulations model behaviour change simulation according set initial parameters assumed environment traditionally formal modeling systems mathematical model attempts analytical solutions enabling prediction behaviour set parameters initial conditions simulation adjunct substitution modeling systems simple closed form analytic solutions possible different types simulation common feature share attempt generate sample representative scenarios model complete enumeration possible states prohibitive impossible software packages exist running based simulation modeling monte carlo simulation stochastic modeling multimethod modeling makes modeling effortless modern usage term simulation encompass virtually based representation science science simulation specialized meanings alan turing term simulation refer happens universal machine executes state transition table modern terminology runs program describes state transitions inputs outputs subject discrete state machine simulates subject machine accordingly theoretical science term simulation relation state transition systems useful study operational semantics theoretically interesting application simulation simulate computers computers architecture type simulator typically called emulator execute program run inconvenient type example newly designed built obsolete longer available tightly controlled testing environment architecture simulator platform virtualization example simulators debug microprogram commercial application programs program downloaded target machine operation simulated information operation directly available programmer speed execution simulation varied simulators interpret fault trees test vlsi logic designs constructed symbolic simulation uses variables stand unknown values field optimization simulations physical processes conjunction evolutionary computation optimize control strategies simulation education training simulation extensively educational purposes frequently way adaptive hypermedia simulation training civilian military personnel usually occurs prohibitively expensive simply dangerous allow trainees use real equipment real world situations spend time learning valuable lessons safe virtual environment living lifelike experience goal convenience permit mistakes training safety critical distinction simulations training instructional simulation training simulations typically come categories live simulation actual players use genuine systems real environment virtual simulation actual players use simulated systems synthetic environment constructive simulation simulated players use simulated systems synthetic environment constructive simulation referred wargaming bears resemblance table war games players command armies soldiers equipment board standardized tests live simulations called high fidelity producing samples likely performance opposed low fidelity pencil paper simulations producing signs possible performance distinction high moderate low fidelity remains relative depending context particular comparison simulations education somewhat like training simulations focus specific tasks term microworld refer educational simulations model abstract concept simulating realistic object environment cases model real world environment simplistic way help learner develop understanding key concepts normally user create sort construction microworld behave way consistent concepts modeled seymour papert advocate value microworlds logo programming environment developed papert famous microworlds example global challenge award online stem learning web site uses microworld simulations teach science concepts related global warming future energy projects simulations educations open source physics netsim project management simulation increasingly train students professionals art science project management simulation project management training improves learning retention enhances learning process social simulations social science classrooms illustrate social political processes anthropology economics history political science sociology courses typically high school university level example form civics simulations participants assume roles simulated society international relations simulations participants engage negotiations alliance formation trade diplomacy use force simulations based fictitious political systems based current historical events example barnard college reacting past series historical educational games national science foundation supported creation reacting games address science math education recent years increasing use social simulations staff training aid development agencies carana simulation example developed united nations development programme revised form world bank training staff deal fragile conflict affected countries common user interaction systems virtual simulations virtual simulations represent specific category simulation utilizes simulation equipment create simulated world user virtual simulations allow users interact virtual world virtual worlds operate platforms integrated software hardware components manner accept input user body tracking voice sound recognition physical controllers produce output user visual display aural display haptic display virtual simulations use aforementioned modes interaction produce sense immersion user virtual simulation input hardware motorcycle simulator bienal autom\u00f3vel exhibition belo horizonte brazil wide variety input hardware available accept user input virtual simulations following list briefly describes body tracking motion capture method record user movements translate captured data inputs virtual simulation example user physically turns head motion captured simulation hardware way translated corresponding shift view simulation capture suits gloves capture movements users body parts systems sensors incorporated inside sense movements different body parts fingers alternatively systems exterior tracking devices marks detected external ultrasound optical receivers electromagnetic sensors internal inertial sensors available systems units transmit data wirelessly cables eye trackers detect eye movements determine precisely user looking given instant physical controllers physical controllers provide input simulation direct manipulation user virtual simulations tactile feedback physical controllers highly desirable number simulation environments omni directional treadmills capture users locomotion walk run high fidelity instrumentation instrument panels virtual aircraft cockpits provides users actual controls raise level immersion example pilots use actual global positioning controls real device simulated cockpit help practice procedures actual device context integrated cockpit voice sound recognition form interaction interact agents simulation virtual people manipulate objects simulation information voice interaction presumably increases level immersion user users use headsets boom microphones lapel microphones room equipped strategically located microphones current research user input systems research future input systems hold great deal promise virtual simulations systems brain interfaces bcis brain interface offer ability increase level immersion virtual simulation users lee keinrath scherer bischof pfurtscheller proved na\u00efve subjects trained use bci navigate virtual apartment relative ease bci authors subjects able freely navigate virtual environment relatively minimal effort possible types systems standard input modalities future virtual simulation systems virtual simulation output hardware wide variety output hardware available deliver stimulus users virtual simulations following list briefly describes visual display visual displays provide visual stimulus user stationary displays vary conventional desktop display degree wrap screens stereo dimensional screens conventional desktop displays vary size inches wrap screens typically utilized known cave automatic virtual environment cave cave automatic virtual environment stereo dimensional screens produce dimensional images special glasses depending design head mounted displays hmds small displays mounted headgear worn user systems connected directly virtual simulation provide user immersive experience weight update rates field view key variables differentiate hmds naturally heavier hmds undesirable cause fatigue time update rate slow unable update displays fast correspond quick head turn user slower update rates tend cause simulation sickness disrupt sense immersion field view angular extent world seen given moment field view vary affect users sense immersion aural display different types audio systems exist help user hear localize sounds spatially special software produce audio effects audio create illusion sound sources placed defined dimensional space user stationary conventional speaker systems provide dual multi channel surround sound external speakers effective headphones producing audio effects conventional headphones offer portable alternative stationary speakers added advantages masking real world noise facilitate effective audio sound effects haptic display displays provide sense touch user haptic technology type output referred force feedback tactile tile displays use different types actuators inflatable bladders vibrators low frequency sub woofers pin actuators thermo actuators produce sensations user end effector displays respond users inputs resistance force systems medical applications remote surgeries employ robotic instruments vestibular display displays provide sense motion user motion simulator manifest motion bases virtual vehicle simulation driving simulators flight simulators motion bases fixed place use actuators simulator ways produce sensations pitching yawing rolling simulators way produce sense acceleration axes motion base produce sensation falling clinical healthcare simulators medical simulators increasingly developed deployed teach therapeutic diagnostic procedures medical concepts decision making personnel health professions simulators developed training procedures ranging basics blood draw laparoscopic surgery trauma care important help prototyping new devices biomedical engineering problems currently simulators applied research develop tools new therapies treatments early diagnosis medicine medical simulators involve connected plastic simulation relevant anatomy sophisticated simulators type employ life size mannequin responds injected drugs programmed create simulations life threatening emergencies simulations visual components procedure reproduced graphics techniques touch based components reproduced haptic feedback devices combined physical simulation routines computed response user actions medical simulations sort use ct mri scans patient data enhance realism medical simulations developed widely distributed web enabled simulations procedural simulations viewed standard web browsers interacted standard interfaces keyboard mouse important medical application simulator denoting slightly different meaning simulator use placebo drug formulation simulates active drug trials drug efficacy placebo origins technical term improving patient safety patient safety concern medical industry patients known suffer injuries death management error lack best standards care training according building national agenda simulation based medical education eder van hook jackie health care provider ability react prudently unexpected situation critical factors creating positive outcome medical emergency regardless occurs battlefield freeway hospital emergency room simulation eder van hook noted medical errors kill estimated cost million billion preventable adverse events dollars year deaths preventable adverse events exceed deaths attributable motor vehicle accidents breast cancer aids eder van hook types statistics wonder improving patient safety prevalent concern industry innovative simulation training solutions train medical professionals attempt reduce number safety concerns adverse effects patients according article simulation improve patient safety self efficacy competence operational performance patient safety nishisaki keren nadkarni jury nishisaki states good evidence simulation training improves provider team self efficacy competence manikins good evidence procedural simulation improves actual operational performance clinical settings evidence shows crew resource management training simulation despite promise improves team operational performance bedside evidence simulation based training actually improves patient outcome slow accrue today ability simulation provide hands experience translates operating room longer doubt attempt improve patient safety use simulations training pediatric care deliver time service place training consists minutes simulated training workers report shift hoped recentness training increase positive reduce negative results generally associated procedure purpose study determine time training improves patient safety operational performance orotracheal intubation decrease occurrences undesired associated events test hypothesis high fidelity simulation enhance training efficacy patient safety simulation settings conclusion reported abstract time simulation training improves icu physician trainee airway resuscitation participation compromising procedural success safety nishisaki simulation training improved resident participation real cases sacrifice quality service hypothesized increasing number highly trained residents use simulation training simulation training fact increase patient safety hypothesis researched validation results generalize situations history simulation healthcare medical simulators simple models human patients antiquity representations clay stone demonstrate clinical features disease states effects humans models cultures continents models cultures chinese culture diagnostic instrument allowing women consult male physicians maintaining social laws modesty models today help students learn anatomy musculoskeletal organ systems type models active models active models attempt reproduce living anatomy physiology recent developments famous harvey mannequin developed university miami able recreate physical findings cardiology examination including palpation auscultation interactive models recently interactive models developed respond actions taken student physician recently simulations dimensional programs acted like textbook patient simulations advantage allowing student judgments errors process iterative learning assessment evaluation decision making error correction creates stronger learning environment passive instruction simulators diteams learner percussing patient chest virtual field hospital simulators proposed ideal tool assessment students clinical skills patients cybertherapy sessions simulating traumatic experiences fear heights social anxiety programmed patients simulated clinical situations including mock disaster drills extensively education evaluation lifelike simulations expensive lack reproducibility fully functional di simulator specific tool available teaching measurement clinical skills gaming platforms applied create virtual medical environments create interactive method learning application information clinical context immersive disease state simulations allow doctor hcp experience disease actually feels like sensors transducers symptomatic effects delivered participant allowing experience patients disease state simulator meets goals objective standardized examination clinical competence superior examinations use standard patients permits quantitative measurement competence reproducing objective findings simulation entertainment simulation entertainment encompasses large popular industries film television video games including games rides theme parks modern simulation thought roots training military th century conduit enterprises hedonistic nature advances technology caused simulation widely began appear movies jurassic park based games atari battlezone history early history simulation game created early thomas goldsmith jr estle ray mann straightforward game simulated missile fired target curve missile speed adjusted knobs game called tennis created willy higginbotham simulated tennis game players play time hand controls displayed oscilloscope electronic video games use graphical display modern simulation present advances technology affordable capable previous decades facilitated rise xbox gaming video game consoles released early fell prey industry crash nintendo released nintendo entertainment nes best selling consoles video game history games widely popular release game sims command conquer increasing power desktop computers today simulation games world warcraft played millions people world generated imagery film simulate objects early film tron film use generated imagery couple minutes commercial failure movie caused industry step away technology film jurassic park popular film use generated graphics extensively integrating simulated dinosaurs seamlessly live action scenes event transformed film industry film toy story film use generated images new millennium generated graphics leading choice special effects films simulators entertainment link trainer modern simulator ride open theme park disney star tours soon followed universal funtastic world hanna barbera ride entirely graphics examples entertainment simulation video games simulation games opposed genres video games represent simulate environment accurately represent interactions playable characters environment realistically kinds games usually complex terms game play simulation games incredibly popular people ages popular simulation games include simcity tiger woods pga tour virtonomics flight simulation driving simulation games film generated imagery application field graphics special effects technology visual effects high quality controllable create effects feasible technology cost resources safety generated graphics seen live action movies today especially action genre generated imagery completely supplanted hand drawn animation children movies increasingly generated examples movies use generated imagery include finding nemo iron man theme park rides simulator rides progeny military training simulators commercial simulators different fundamental way military training simulators react realistically input trainee real time ride simulators feel like realistically according prerecorded motion scripts simulator rides star tours cost millon hydraulic motion based cabin movement programmed joystick today simulator rides amazing adventures spider man include elements increase immersion experienced riders imagery physical effects spraying water producing scents movement environment examples simulation rides include mission space simpsons ride simulation rides themeparks like disney universal examples flint stones earth quake time machine king kong simulation manufacturing manufacturing represents important applications simulation technique represents valuable tool engineers evaluating effect capital investment equipments physical facilities like factory plants warehouses distribution centers simulation predict performance existing planned compare alternative solutions particular design problem important goal manufacturing simulations quantify performance common measures performance include following throughput average peak loads cycle time long produce utilization resource labor machines bottlenecks choke points queuing work locations queuing delays caused material handling devices systems wip storages needs staffing requirements effectiveness scheduling systems effectiveness control systems examples simulation automobiles car racing simulator soldier tests heavy wheeled vehicle driver simulator automobile simulator provides opportunity reproduce characteristics real vehicles virtual environment replicates external factors conditions vehicle interacts enabling driver feel sitting cab vehicle scenarios events replicated sufficient reality ensure drivers fully immersed experience simply viewing educational experience simulator provides constructive experience novice driver enables complex exercises undertaken mature driver novice drivers truck simulators provide opportunity begin career applying best practice mature drivers simulation provides ability enhance good driving detect poor practice suggest necessary steps remedial action companies provides opportunity educate staff driving skills achieve reduced maintenance costs improved productivity importantly ensure safety actions possible situations biomechanics open source simulation platform creating dynamic mechanical models built combinations rigid deformable bodies joints constraints force actuators specialized creating biomechanical models human anatomical structures intention study function eventually assist design planning medical treatment biomechanics simulator analyze walking dynamics study sports performance simulate surgical procedures analyze joint loads design medical devices animate human animal movement neuromechanical simulator combines biomechanical biologically realistic neural network simulation allows user test hypotheses neural basis behavior physically accurate virtual environment city urban city simulator city building game tool urban planners understand cities likely evolve response policy decisions anylogic example modern large scale urban simulators designed use urban planners city simulators generally agent based simulations explicit representations land use transportation urbansim leam examples large scale urban simulation models metropolitan planning agencies military bases land use transportation planning classroom future classroom future probably contain kinds simulators addition textual visual learning tools allow students enter clinical years better prepared higher skill level advanced student postgraduate concise comprehensive method retraining incorporating new clinical procedures skill set regulatory bodies medical institutions easier assess proficiency competency individuals classroom future form basis clinical skills unit continuing education medical personnel way use periodic flight training assists airline pilots technology assist practitioners career simulator living textbook integral practice medicine simulator environment provide standard platform curriculum development institutions medical education communication satellites modern satellite communications systems satcom large complex interacting parts elements addition need broadband connectivity moving vehicle increased dramatically past years commercial military applications accurately predict deliver high quality service satcom designers factor terrain atmospheric meteorological conditions planning deal complexity designers operators increasingly turn models systems simulate real world operational conditions gain insights usability requirements prior final product sign modeling improves understanding enabling satcom designer planner simulate real world performance injecting models multiple hypothetical atmospheric environmental conditions simulation training civilian military personnel usually occurs prohibitively expensive simply dangerous allow trainees use real equipment real world situations spend time learning valuable lessons safe virtual environment living lifelike experience goal convenience permit mistakes training safety critical digital lifecycle simulation airflow engine simulation solutions increasingly integrated cax cad cam cae solutions processes use simulation product lifecycle especially earlier concept design stages potential providing substantial benefits benefits range direct cost issues reduced prototyping shorter time market better performing products higher margins companies simulation provided expected benefits research firm aberdeen group nearly best class manufacturers use simulation early design process compared laggards successful use simulation early lifecycle largely driven increased integration simulation tools entire cad cam plm solution set simulation solutions function extended enterprise multi cad environment include solutions managing simulation data processes ensuring simulation results product lifecycle history ability use simulation entire lifecycle enhanced improved user interfaces tailorable user interfaces wizards allow appropriate plm participants simulation process disaster preparedness simulation training method preparing people disasters simulations replicate emergency situations track learners respond thanks lifelike experience disaster preparedness simulations involve training handle terrorism attacks natural disasters pandemic outbreaks life threatening emergencies organization simulation training disaster preparedness cade center advancement distance education cade video game prepare emergency workers multiple types attacks reported news medical net video game series simulations address bioterrorism pandemic flu smallpox disasters emergency personnel prepare developed team university illinois chicago uic game allows learners practice emergency skills safe controlled environment emergency simulation program esp british columbia institute technology bcit vancouver british columbia canada example organization uses simulation train emergency situations esp uses simulation train following situations forest fighting oil chemical spill response earthquake response law enforcement municipal fighting hazardous material handling military training response terrorist attack feature simulation implementation dynamic run time clock allows simulations run simulated time frame speeding slowing time desired additionally allows session recordings picture icon based navigation file storage individual simulations multimedia components launch external applications university qu\u00e9bec chicoutimi research team outdoor research expertise laboratory laboratoire expertise et recherche en plein air lerpa specializes wilderness backcountry accident simulations verify emergency response coordination instructionally benefits emergency training simulations learner performance tracked allows developer adjustments necessary alert educator topics require additional attention advantages learner guided trained respond appropriately continuing emergency segment aspect available live environment emergency training simulators allows immediate feedback simulations provide summary instruct learner engage learning topic live emergency situation emergency responders time waste simulation training environment provides opportunity learners gather information practice knowledge safe environment mistakes risk endangering lives given opportunity correct errors prepare real life emergency economics economics especially macroeconomics effects proposed policy actions fiscal policy changes monetary policy changes simulated judge desirability mathematical model economy having fitted historical economic data proxy actual economy proposed values government spending taxation open market operations inputs simulation model variables inflation rate unemployment rate balance trade deficit government budget deficit outputs simulation simulated values variables compared different proposed policy inputs determine set outcomes desirable engineering technology processes simulation important feature engineering systems involves processes example electrical engineering delay lines simulate propagation delay phase shift caused actual transmission line similarly dummy loads simulate impedance simulating propagation situations propagation unwanted simulator imitate operations functions unit simulates contrast emulate engineering simulations entail mathematical modeling assisted investigation cases mathematical modeling reliable simulation fluid dynamics problems require mathematical physical simulations cases physical models require dynamic similitude physical chemical simulations direct realistic uses research uses chemical engineering example process simulations process parameters immediately operating chemical plants oil refineries simulators plant operator training called operator training simulator ots widely adopted industries chemical oil gas power industry created safe realistic virtual environment train board operators engineers mimic capable providing high fidelity dynamic models nearly chemical plants operator training control testing equipment dangerous expensive nature training heavy equipment simulation common solution industries types simulated equipment include cranes mining reclaimers construction equipment simulation units include pre built scenarios teach trainees ability customize new scenarios equipment simulators intended create safe cost effective alternative training live equipment ergonomics ergonomic simulation involves analysis virtual products manual tasks virtual environment engineering process aim ergonomics develop improve design products work environments ergonomic simulation utilizes anthropometric virtual representation human commonly referenced mannequin digital human models dhms mimic postures mechanical loads performance human operator simulated environment airplane automobile manufacturing facility dhms recognized evolving valuable tool performing proactive ergonomics analysis design simulations employ graphics physics based models animate virtual humans ergonomics software uses inverse kinematics ik capability posing dhms ergonomic simulation tools developed including jack safework ramsis sammie software tools typically calculate biomechanical properties including individual muscle forces joint forces moments tools employ standard ergonomic evaluation methods niosh lifting equation rapid upper limb assessment rula simulations analyze physiological measures including metabolism energy expenditure fatigue limits cycle time studies design process validation user comfort reachability line sight human factors examined ergonomic simulation packages modeling simulation task performed manually manipulating virtual human simulated environment ergonomics simulation software permits interactive real time simulation evaluation actual human input motion capture technologies motion capture ergonomics requires expensive equipment creation props represent environment product applications ergonomic simulation include analysis solid waste collection disaster management tasks interactive gaming automotive assembly line virtual prototyping rehabilitation aids aerospace product design ford engineers use ergonomics simulation software perform virtual product design reviews engineering data simulations assist evaluation assembly ergonomics company uses siemen jack jill ergonomics simulation software improving worker safety efficiency need build expensive prototypes finance finance simulations scenario planning risk adjusted net present value example computed defined known fixed inputs imitating performance project evaluation simulation provide distribution npv range discount rates variables simulations frequently financial training engage participants experiencing historical fictional situations stock market simulations portfolio simulations risk management simulations models forex simulations simulations typically based stochastic asset models simulations training program allows application theory akin real life industries use simulations technology case study driven flight flight simulation training devices fstd train pilots ground comparison training actual aircraft simulation based training allows training maneuvers situations impractical dangerous perform aircraft keeping pilot instructor relatively low risk environment ground example electrical failures instrument failures hydraulic failures flight control failures simulated risk pilots aircraft instructors provide students higher concentration training tasks given period time usually possible aircraft example conducting multiple instrument approaches actual aircraft require significant time spent repositioning aircraft simulation soon approach completed instructor immediately preposition simulated aircraft ideal ideal location begin approach flight simulation provides economic advantage training actual aircraft fuel maintenance insurance costs taken account operating costs fstd usually substantially lower operating costs simulated aircraft large transport category airplanes operating costs times lower fstd actual aircraft people use simulator software especially flight simulator software build simulator home people realism homemade simulator buy cards racks run software original machine involves solving problem matching hardware software problem hundreds cards plug different racks solving problems worthwhile realistic simulation buy real aircraft parts like complete nose sections written aircraft aircraft boneyards permits people simulate hobby unable pursue real life marine bearing resemblance flight simulators marine simulators train ships personnel common marine simulators include ship bridge simulators engine room simulators cargo handling simulators communication gmdss simulators rov simulators simulators like maritime colleges training institutions navies consist replication ships bridge operating console number screens virtual surroundings projected military military simulations known informally war games models theories warfare tested refined need actual hostilities exist different forms varying degrees realism recent times scope widened include military political social factors example nationlab series strategic exercises latin america governments use simulation individually collaboratively little known model specifics outside professional circles payment securities settlement simulation techniques applied payment securities settlement systems main users central banks generally responsible oversight market infrastructure entitled contribute smooth functioning payment systems central banks payment simulations evaluate things adequacy sufficiency liquidity available form account balances intraday credit limits participants mainly banks allow efficient settlement payments need liquidity dependent availability type netting procedures systems studies focus comparisons application evaluate risks related events communication network breakdowns inability participants send payments case possible bank failure kind analysis falls concepts stress testing scenario analysis common way conduct simulations replicate settlement logics real payment securities settlement systems analysis use real observed payment data case comparison development naturally settlement logics need implemented perform stress testing scenario analysis observed data needs altered payments delayed removed analyze levels liquidity initial liquidity levels varried comparisons benchmarking evaluations new netting algorithms rules performed running simulations fixed set data varying setups inference usually comparing benchmark simulation results results altered simulation setups comparing indicators unsettled transactions settlement delays project management project management simulation simulation project management training analysis training simulation project managers cases analysis supporting decision making real projects frequently simulation conducted software tools robotics robotics simulator create embedded applications specific robot dependent real robot cases applications transferred real robot rebuilt modifications robotics simulators allow reproducing situations created real world cost time uniqueness resource simulator allows fast robot prototyping robot simulators feature physics engines simulate robot dynamics production simulations production systems mainly examine effect improvements investments production static spreadsheet process times transportation times sophisticated simulations discrete event simulation des advantages simulate dynamics production production dynamic depending variations manufacturing processes assembly times machine set ups breaks breakdowns small stoppages lots software commonly discrete event simulation differ usability markets share foundation sales process simulations useful modeling flow transactions business processes field sales process engineering study improve flow customer orders stages completion initial proposal providing goods services order acceptance installation simulations help predict impact improvements methods impact variability cost labor time quantity transactions stages process featured computerized process simulator depict models simpler educational demonstrations spreadsheet software pennies transferred cups based roll die dipping tub colored beads scoop sports sports simulations predict outcome events performance individual sportspeople attempt recreate event models built statistics increase technology allowed knowledge programming ability run simulations models simulations built series mathematical algorithms models vary accuracy accuscore licensed companies espn known simulation program major sports offers detailed analysis games simulated betting lines projected point totals overall probabilities increased fantasy sports simulation models predict individual player performance gained popularity companies like sports statfox specialize simulations predicting game results individual players people use models determine start fantasy leagues way simulations helping sports field use biomechanics models derived simulations run data received sensors attached athletes video equipment sports biomechanics aided simulation models answer questions training techniques effect fatigue throwing performance height throw biomechanical factors upper limbs reactive strength index hand contact time simulations allow users models complex run answers simulations proven best insights play performance team predictability space shuttle countdown firing room configured space shuttle launches simulation kennedy space center ksc train certify space shuttle engineers simulated launch countdown operations space shuttle engineering community participates launch countdown integrated simulation shuttle flight simulation virtual simulation real people interact simulated space shuttle vehicle ground support equipment gse hardware shuttle final countdown phase simulation known involves countdown processes integrate space shuttle vehicle gse systems shuttle systems integrated simulation main propulsion main engines solid rocket boosters ground liquid hydrogen liquid oxygen external tank flight controls navigation avionics high level objectives shuttle final countdown phase simulation demonstrate firing room final countdown phase operations provide training engineers recognizing reporting evaluating problems time critical environment exercise launch teams ability evaluate prioritize respond problems integrated manner time critical environment provide procedures performing failure recovery testing operations performed final countdown phase shuttle final countdown phase simulation takes place kennedy space center launch control center firing rooms firing room simulation control room real launch countdown operations executed result equipment real launch countdown operations engaged command control computers application software engineering plotting trending tools launch countdown procedure documents launch commit criteria documents hardware requirement documents items engineering launch countdown teams real launch countdown operations simulation space shuttle vehicle hardware related gse hardware simulated mathematical models written shuttle ground operations simulator sgos modeling language behave react like real hardware shuttle final countdown phase simulation engineers command control hardware real application software executing control consoles commanding real vehicle hardware real software applications interface real shuttle hardware simulations instead applications interface mathematical model representations vehicle gse hardware consequently simulations bypass sensitive dangerous mechanisms providing engineering measurements detailing hardware reacted math models interact command control application software models simulations debug verify functionality application software satellite navigation true way test gnss receivers commonly known sat nav commercial world rf constellation simulator receiver example aircraft tested dynamic conditions need real flight test conditions repeated exactly control test parameters possible real world actual signals testing receivers use new galileo satellite navigation alternative real signals exist weather predicting weather conditions extrapolating interpolating previous data real use simulation weather forecasts use information published weather buereaus kind simulations help predicting forewarning extreme weather conditions like path active hurricane cyclone numerical weather prediction forecasting involves complicated numeric models predict weather accurately taking parameters account simulation games strategy games traditional modern viewed simulations abstracted decision making purpose training military political leaders history example tradition kriegsspiel recent example video games simulators kind games simulate aspects reality business government construction piloting vehicles historical usage historically word negative connotations connection simulation dissembling later faded linguistic references external links bibliographies containing references website journal simulation gaming", "Algorithms and theory": "flow chart algorithm euclid algorithm calculating greatest common divisor numbers locations named algorithm proceeds successive subtractions loops test yields yes true accurately number location greater equal number location algorithm specifies meaning number replaces old similarly process terminates contents yielding algorithm derived scott symbols drawing style tausworthe mathematics science algorithm self contained step step set operations performed algorithms exist perform calculation data processing automated reasoning algorithm effective method expressed finite space time defined formal language calculating function starting initial state initial input instructions computation executed proceeds finite number defined successive states eventually producing output terminating final ending state transition state necessarily deterministic algorithms known randomized algorithms incorporate random input concept algorithm existed centuries partial formalization modern algorithm began attempts solve decision problem posed david hilbert subsequent formalizations framed attempts define effective calculability effective method formalizations included g\u00f6del herbrand kleene recursive functions alonzo church lambda calculus emil post formulation alan turing turing machines giving formal definition algorithms corresponding intuitive notion remains challenging problem word origin algorithm stems latin translation book written al khw\u0101rizm\u012b persian mathematician astronomer geographer al khwarizmi wrote book titled calculation hindu numerals ad principally responsible spreading indian numeration middle east europe translated latin algoritmi numero indorum english al khwarizmi hindu art reckoning term algoritmi title book led term algorithm informal definition informal definition set rules precisely defines sequence operations include programs including programs perform numeric calculations generally program algorithm stops eventually prototypical example algorithm euclid algorithm determine maximum common divisor integers example described flow chart example later section offer informal meaning word following quotation human write fast long small smaller smaller limit trying write molecules atoms electrons list members enumerably infinite set writing names notation humans equally useful case certain enumerably infinite sets explicit instructions determining th member set arbitrary finite instructions given explicitly form followed computing machine human capable carrying elementary operations symbols enumerably infinite set elements correspondence integers boolos jeffrey saying algorithm implies instructions process creates output integers arbitrary input integer integers theory arbitrarily large algorithm algebraic equation arbitrary input variables produce output authors attempts define notion indicate word implies order addition example precise instructions language understood fast efficient good process specifies moves machine human equipped necessary internally contained information capabilities decode process arbitrary input integers symbols symbols effectively produce reasonable time output integer specified place specified format concept algorithm define notion decidability notion central explaining formal systems come starting small set axioms rules logic time algorithm requires complete measured apparently related customary physical dimension uncertainties characterize ongoing work stems unavailability definition algorithm suits concrete sense abstract usage term formalization algorithms essential way computers process data programs contain algorithms specific instructions perform specific order carry specified task calculating employees paychecks printing students report cards algorithm considered sequence operations simulated turing complete authors assert thesis include minsky savage gurevich minsky maintain turing procedure naturally called effective fact realized simple machine extreme arguments favor hard refute gurevich turing informal argument favor thesis justifies stronger thesis algorithm simulated turing machine according savage algorithm computational process defined turing machine typically algorithm associated processing information data read input source written output device stored processing stored data regarded internal state entity performing algorithm practice state stored data structures computational process algorithm rigorously defined specified way applies possible circumstances arise conditional steps systematically dealt case case criteria case clear computable algorithm precise list precise steps order computation critical functioning algorithm instructions usually assumed listed explicitly described starting going idea described formally flow control far discussion formalization algorithm assumed premises imperative programming common conception attempts task discrete mechanical means unique conception formalized algorithms assignment operation setting value variable derives intuition memory scratchpad example assignment alternate conceptions constitutes algorithm functional programming logic programming expressing algorithms algorithms expressed kinds notation including natural languages pseudocode flowcharts drakon charts programming languages control tables processed interpreters natural language expressions algorithms tend verbose ambiguous rarely complex technical algorithms pseudocode flowcharts drakon charts control tables structured ways express algorithms avoid ambiguities common natural language statements programming languages primarily intended expressing algorithms form executed way define document algorithms wide variety representations possible express given turing machine program sequence machine tables finite state machine state transition table control table flowcharts drakon charts state diagram form rudimentary machine code assembly code called sets quadruples turing machine representations algorithms classed accepted levels turing machine description high level description prose algorithm ignoring implementation details level need mention machine manages tape head implementation description prose define way turing machine uses head way stores data tape level details states transition function formal description detailed lowest level gives turing machine state table example simple algorithm add described levels algorithm examples implementation logical nand algorithm implemented electronically chip algorithms intended implemented programs algorithms implemented means biological neural network example human brain implementing arithmetic insect looking food electrical circuit mechanical device algorithms b\u00f6hm jacopini structures sequence rectangles descending page structures primitive conditional goto test true goto step xxx diamond unconditional goto rectangle assignment operators rectangle halt rectangle nesting structures inside assignment blocks result complex diagrams cf tausworthe systems algorithm basically instance logic written software software developers effective intended target produce output given input null optimal algorithm running old hardware produce faster results non optimal higher time complexity algorithm purpose running efficient hardware algorithms like hardware considered technology elegant compact programs good fast programs notion simplicity elegance appears informally knuth precisely chaitin knuth want good algorithms loosely defined aesthetic sense criterion length time taken perform algorithm criteria adaptability algorithm computers simplicity elegance chaitin program elegant mean smallest possible program producing output chaitin prefaces definition ll prove program elegant proof solve halting problem ibid algorithm versus function computable algorithm given function multiple algorithms exist true expanding available instruction set available programmer rogers observes important distinguish notion algorithm procedure notion function computable algorithm mapping yielded procedure function different algorithms unfortunately tradeoff goodness speed elegance compactness elegant program steps complete computation elegant example uses euclid algorithm appears computers computors models computation human computor restricted type machine discrete deterministic mechanical device blindly follows instructions melzak lambek primitive models reduced notion elements discrete distinguishable locations ii discrete counters iii agent iv list instructions effective relative capability agent minsky describes congenial variation lambek abacus model simple bases computability minsky machine proceeds sequentially depending counts instructions conditional goto unconditional goto changes program flow sequence halt minsky machine includes assignment replacement substitution operations zero contents location replaced successor decrement rarely programmer write code limited instruction set minsky shows melzak lambek machine turing complete general types instructions conditional goto unconditional goto assignment replacement substitution halt simulation algorithm computor language knuth advises reader best way learn algorithm try immediately pen paper work example simulation execution real thing programmer translate algorithm language simulator computor effectively execute stone gives example computing roots quadratic equation computor know square root algorithm effective provide set rules extracting square root means programmer know language effective relative target computing agent computor model simulation van emde boas observes base complexity theory abstract instead concrete machines arbitrariness choice model remains point notion simulation enters speed measured instruction set matters example subprogram euclid algorithm compute remainder execute faster programmer modulus division instruction available subtraction worse minsky decrement structured programming canonical structures church turing thesis algorithm computed model known turing complete minsky demonstrations turing completeness requires instruction types conditional goto unconditional goto assignment halt kemeny kurtz observe undisciplined use unconditional gotos conditional gotos result spaghetti code programmer write structured programs instructions hand possible hard write badly structured programs structured language tausworthe augments b\u00f6hm jacopini canonical structures sequence case additional benefit structured program lends proofs correctness mathematical induction canonical flowchart symbols graphical aide called flowchart offers way document algorithm program like program flow minsky machine flowchart starts page proceeds primary symbols directed arrow showing program flow rectangle sequence goto diamond dot tie b\u00f6hm jacopini canonical structures primitive shapes sub structures nest rectangles single exit occurs superstructure symbols use build canonical structures shown diagram examples algorithm example quicksort algorithm sorting array randomized values red bars mark pivot element start animation element farthest right hand chosen pivot simplest algorithms largest number list numbers random order finding solution requires looking number list follows simple algorithm stated high level description english prose high level description numbers set highest number assume number set largest number set remaining number set number larger current largest number consider number largest number set numbers left set iterate consider current largest number largest number set quasi formal description written prose closer high level language program following formal coding algorithm pseudocode pidgin code input list numbers output largest number list size return null largest item item largest largest item return largest euclid algorithm example diagram euclid algorithm heath added euclid measuring gives numerical examples nicomachus gives example subtract greater left subtract possible left subtract left subtract possible left subtracted heath comments phrase curious meaning obvious meaning phrase ending number heath euclid algorithm appears proposition ii book vii elementary number theory elements euclid poses problem given numbers prime greatest common measure defines number multitude composed units counting number positive integer including measure place shorter measuring length successively times longer length remaining portion shorter length modern words remainder quotient remainder modulus integer fractional left division euclid method succeed starting lengths satisfy requirements lengths ii subtraction proper test guarantee smaller numbers subtracted larger alternately equal subtraction yields euclid original proof adds lengths prime euclid stipulated construct reductio ad absurdum proof numbers common measure fact greatest nicomachus algorithm euclid numbers prime yields number common measure precise following nicomachus algorithm graphical expression euclid algorithm example language euclid algorithm instruction types required execute euclid algorithm logical tests conditional goto unconditional goto assignment replacement subtraction location symbolized upper case letter varying quantity number location written lower case letter usually associated location example location start contain number inelegant program euclid algorithm inelegant translation knuth version algorithm subtraction based remainder loop replacing use division modulus instruction derived knuth depending numbers inelegant compute fewer steps elegant following algorithm framed knuth step version euclid nicomachus division remainder uses successive subtractions shorter length remaining length high level description shown boldface adapted knuth input locations numbers represent lengths input initialize remaining length equal starting initial input length ensure ensure smaller numbers larger contents larger number skip exchange steps goto step swap contents step redundant useful later discussion remainder remaining length shorter length repeatedly subtract measuring number remaining length measuring goto measure remainder loop goto remainder measure exact remainder program halt ii algorithm continue measure left remainder measuring number goto step continue step interchange nut euclid algorithm use remainder measure previously smaller number serves temporary location repeat measuring process goto output contains greatest common divisor print halt end stop elegant program euclid algorithm following version euclid algorithm requires core instructions required inelegant worse inelegant requires types instructions flowchart elegant article unstructured basic language steps numbered instruction let assignment instruction symbolized rem euclid algorithm greatest common divisor print type integers greater input goto goto let goto let goto print end elegant works place outer euclid loop elegant shifts forth loops loop computes loop computes works minuend equal subtrahend difference minuend subtrahend minuend new measuring length subtrahend new length measured words sense subtraction reverses testing euclid algorithms algorithm author wants test cases usually suffice confirm core functionality source uses knuth suggested interesting case relatively prime numbers exceptional cases identified tested inelegant perform properly ditto elegant yes happens number zero numbers zero inelegant computes forever cases elegant computes forever happens negative numbers entered fractional numbers input numbers domain function computed algorithm program include positive integers including zero failures zero indicate algorithm program instantiates partial function total function notable failure exceptions ariane rocket failure proof program correctness use mathematical induction knuth demonstrates application mathematical induction extended version euclid algorithm proposes general method applicable proving validity algorithm tausworthe proposes measure complexity program length correctness proof measuring improving euclid algorithms elegance compactness versus goodness speed core instructions elegant clear winner compared inelegant instructions inelegant faster arrives halt fewer steps algorithm analysis indicates case elegant conditional tests subtraction loop inelegant algorithm usually requires loop throughs average time wasted test needed remainder computed algorithms improved programmer judges program fit effective computes function intended author question improved compactness inelegant improved elimination steps chaitin proved compacting algorithm automated generalized algorithm heuristically exhaustive search examples busy beaver trial error cleverness insight application inductive reasoning observe steps repeated steps comparison elegant provides hint steps steps eliminated reduces number core instructions makes elegant elegant steps speed elegant improved moving test outside subtraction loops change calls addition instructions goto elegant computes example numbers faster given case require detailed analysis algorithmic analysis frequently important know particular resource time storage theoretically required given algorithm methods developed analysis algorithms obtain quantitative answers estimates example sorting algorithm time requirement big notation length list times algorithm needs remember values largest number far current position input list said space requirement space required store input numbers counted counted different algorithms complete task different set instructions time space effort example binary search algorithm usually outperforms brute force sequential search table lookups sorted lists formal versus empirical analysis study algorithms discipline science practiced abstractly use specific programming language implementation sense algorithm analysis resembles mathematical disciplines focuses underlying properties algorithm specifics particular implementation usually pseudocode analysis simplest general representation ultimately algorithms usually implemented particular hardware software platforms algorithmic efficiency eventually test real code solution problem efficiency particular algorithm significant consequences extremely large algorithms designed fast interactive commercial long life scientific usage critical scaling small large frequently exposes inefficient algorithms benign empirical testing useful uncover unexpected interactions affect performance benchmarks compare potential improvements algorithm program optimization execution efficiency illustrate potential improvements possible established algorithms recent significant innovation relating fft algorithms heavily field image processing decrease processing time times applications like medical imaging general speed improvements depend special properties problem common practical applications speedups magnitude enable computing devices extensive use image processing like digital cameras medical equipment consume power classification ways classify algorithms merits implementation way classify algorithms implementation means recursion iteration recursive algorithm invokes makes reference repeatedly certain condition known termination condition matches method common functional programming iterative algorithms use repetitive constructs like loops additional data structures like stacks solve given problems problems naturally suited implementation example towers hanoi understood recursive implementation recursive version equivalent possibly complex iterative version vice versa logical algorithm viewed controlled logical deduction notion expressed algorithm logic control logic component expresses axioms computation control component determines way deduction applied axioms basis logic programming paradigm pure logic programming languages control component fixed algorithms specified supplying logic component appeal approach elegant semantics change axioms defined change algorithm serial parallel distributed algorithms usually discussed assumption computers execute instruction algorithm time computers called serial computers algorithm designed environment called serial algorithm opposed parallel algorithms distributed algorithms parallel algorithms advantage architectures processors work problem time distributed algorithms utilize multiple machines connected network parallel distributed algorithms divide problem symmetrical asymmetrical subproblems collect results resource consumption algorithms processor cycles processor communication overhead processors sorting algorithms parallelized efficiently communication overhead expensive iterative algorithms generally parallelizable problems parallel algorithms called inherently serial problems deterministic non deterministic deterministic algorithms solve problem exact decision step algorithm non deterministic algorithms solve problems guessing typical guesses accurate use heuristics exact approximate algorithms reach exact solution approximation algorithms seek approximation close true solution approximation use deterministic random strategy algorithms practical value hard problems quantum algorithm run realistic model quantum computation term usually algorithms inherently quantum use essential feature quantum computation quantum superposition quantum entanglement design paradigm way classifying algorithms design methodology paradigm certain number paradigms different furthermore categories include different types algorithms common paradigms brute force exhaustive search naive method trying possible solution best divide conquer divide conquer algorithm repeatedly reduces instance problem smaller instances problem usually recursively instances small solve easily example divide conquer merge sorting sorting segment data dividing data segments sorting entire data obtained conquer phase merging segments simpler variant divide conquer called decrease conquer algorithm solves identical subproblem uses solution subproblem solve bigger problem divide conquer divides problem multiple subproblems conquer stage complex decrease conquer algorithms example decrease conquer algorithm binary search algorithm search enumeration problems playing chess modeled problems graphs graph exploration algorithm specifies rules moving graph useful problems category includes search algorithms branch bound enumeration backtracking randomized algorithm algorithms choices randomly pseudo randomly useful finding approximate solutions problems finding exact solutions impractical heuristic method problems known fastest approximations involve randomness randomized algorithms polynomial time complexity fastest algorithms problems open question known versus np problem large classes algorithms monte carlo algorithms return correct answer high probability rp subclass run polynomial time las vegas algorithms return correct answer running time bound zpp reduction complexity technique involves solving difficult problem transforming better known problem hopefully asymptotically optimal algorithms goal reducing algorithm complexity dominated resulting reduced algorithm example selection algorithm finding median unsorted list involves sorting list expensive portion pulling middle element sorted list cheap portion technique known transform conquer optimization problems optimization problems specific classification algorithms algorithm problems fall general categories described following linear programming searching optimal solutions linear function bound linear equality inequality constrains constrains problem directly producing optimal solutions algorithms solve problem category popular simplex algorithm problems solved linear programming include maximum flow problem directed graphs problem additionally requires unknowns integer classified integer programming linear programming algorithm solve problem proved restrictions integer values superficial solutions satisfy restrictions general case specialized algorithm algorithm finds approximate solutions depending difficulty problem dynamic programming problem shows optimal substructures meaning optimal solution problem constructed optimal solutions subproblems overlapping subproblems meaning subproblems solve different problem instances quicker approach called dynamic programming avoids recomputing solutions computed example floyd warshall algorithm shortest path goal vertex weighted graph shortest path goal adjacent vertices dynamic programming memoization main difference dynamic programming divide conquer subproblems independent divide conquer subproblems overlap dynamic programming difference dynamic programming straightforward recursion caching memoization recursive calls subproblems independent repetition memoization help dynamic programming solution complex problems memoization maintaining table subproblems solved dynamic programming reduces exponential nature problems polynomial complexity greedy method greedy algorithm similar dynamic programming algorithm works examining substructures case problem given solution algorithms start solution given constructed way improve making small modifications problems optimal solution stop local optima solutions improved algorithm optimum popular use greedy algorithms finding minimal spanning tree finding optimal solution possible method huffman tree kruskal prim sollin greedy algorithms solve optimization problem heuristic method optimization problems heuristic algorithms solution close optimal solution cases finding optimal solution impractical algorithms work getting closer closer optimal solution progress principle run infinite time optimal solution merit solution close optimal solution relatively short time algorithms include local search tabu search simulated annealing genetic algorithms like simulated annealing non deterministic algorithms like tabu search deterministic bound error non optimal solution known algorithm categorized approximation algorithm field study field science problems needs efficient algorithms related problems field studied example classes search algorithms sorting algorithms merge algorithms numerical algorithms graph algorithms string algorithms computational geometric algorithms combinatorial algorithms medical algorithms machine learning cryptography data compression algorithms parsing techniques fields tend overlap algorithm advances field improve completely unrelated fields example dynamic programming invented optimization resource consumption industry solving broad range problems fields complexity algorithms classified time need complete compared input size wide variety algorithms complete linear time relative input size exponential time worse halt additionally problems multiple algorithms differing complexity problems algorithms known efficient algorithms mappings problems problems owing suitable classify problems instead algorithms equivalence classes based complexity best possible algorithms burgin uses generalized definition algorithms relaxes common requirement output algorithm computes function determined finite number steps defines super recursive class algorithms class algorithms possible compute functions computable turing machine burgin closely related study methods continuous algorithms adjective continuous applied word algorithm mean algorithm operating data represents continuous quantities data represented discrete approximations algorithms studied numerical analysis algorithm form differential equation operates continuously data running analog legal issues software patents general overview patentability software including implemented algorithms algorithms usually patentable united states claim consisting solely simple manipulations abstract concepts numbers signals constitute processes uspto algorithms patentable gottschalk benson practical applications algorithms patentable example diamond diehr application simple feedback algorithm aid curing synthetic rubber deemed patentable patenting software highly controversial highly criticized patents involving algorithms especially data compression algorithms unisys lzw patent additionally cryptographic algorithms export restrictions export cryptography etymology word algorithm algorism writing versions comes al khw\u0101rizm\u012b pronounced classical arabic al khwarithmi al khw\u0101rizm\u012b persian mathematician astronomer geographer scholar house wisdom baghdad means native khwarezm city greater iran era modern day uzbekistan wrote treatise arabic language translated latin th century title algoritmi numero indorum title means algoritmi numbers indians algoritmi translator latinization al khwarizmi al khwarizmi widely read mathematician europe late middle ages primarily book algebra late medieval latin algorismus corruption simply meant decimal number meaning modern english algorism th century french word form meaning changed algorithme english adopted french soon wasn late th century algorithm took meaning modern english alternative etymology claims origin terms algebra late medieval sense arabic arithmetics arithmos greek term number literally meaning arabic numbers arabic calculation algorithms al kharizmi works meant modern sense type repetitive calculus mention fundamental work known algebra originally titled compendious book calculation completion balancing describing types repetitive calculation quadratic equations sense algorithms known europe long al kharizmi oldest algorithm known today euclidean algorithm extended euclidean algorithm coining term algorithm greeks calling anthyphairesis literally meaning anti subtraction reciprocal subtraction reading algorithms known greeks centuries euclid instead word algebra greeks term arithmetica \u1f00\u03c1\u03b9\u03b8\u03bc\u03b7\u03c4\u03b9\u03ba\u03ae diophantus works called father algebra diophantine equation eudoxos history development notion algorithm ancient greece algorithms ancient greece examples sieve eratosthenes described introduction arithmetic nicomachus euclidean algorithm described euclid elements bc origin word algorithm comes th century persian mathematician abu abdullah muhammad ibn musa al khwarizmi work built th century indian mathematician brahmagupta word algorism originally referred rules performing arithmetic hindu arabic numerals evolved european latin translation al khwarizmi algorithm th century use word evolved include definite procedures solving problems performing tasks discrete distinguishable symbols tally marks track flocks sacks grain money ancients tallying accumulating stones marks scratched sticks making discrete symbols clay babylonian egyptian use marks symbols eventually roman numerals abacus evolved dilson tally marks appear prominently unary numeral arithmetic turing machine post turing machine computations manipulation symbols place holders numbers algebra work ancient greek geometers euclidean algorithm indian mathematician brahmagupta persian mathematician al khwarizmi terms algorism algorithm derived western european mathematicians culminated leibniz notion calculus ratiocinator ca mechanical contrivances discrete states clock bolter credits invention weight driven clock key invention europe middle ages particular verge escapement provides tick tock mechanical clock accurate automatic machine led immediately mechanical automata beginning th century finally computational machines difference engine analytical engines charles babbage countess ada lovelace mid th century lovelace credited creation algorithm intended processing babbage analytical engine device considered real turing complete instead calculator called history programmer result implementation babbage second device realized decades lifetime logical machines stanley jevons logical abacus logical machine technical problem reduce boolean equations presented form similar known karnaugh maps jevons describes simple abacus slips wood furnished pins contrived class logical combinations picked mechanically recently reduced completely mechanical form embodied indirect process inference called logical machine machine came equipped certain moveable wooden rods foot keys like piano machine analyze syllogism simple logical argument machine displayed fellows royal society logician john venn symbolic logic turned jaundiced eye effort high estimate importance called logical machines contrivances present known likely discovered deserve logical machines algorithm outdone presented plan somewhat analogous apprehend prof jevon abacus corresponding prof jevons logical machine following contrivance described prefer merely logical diagram machine suppose completely rationally expected logical machine jacquard loom hollerith punch cards telegraphy telephony relay bell newell indicate jacquard loom precursor hollerith cards punch cards telephone switching technologies roots tree leading development computers mid th century telegraph precursor telephone use world discrete distinguishable encoding letters dots dashes common sound late th century ticker tape ca use use hollerith cards census came teleprinter ca punched paper use baudot code tape telephone switching networks relays invented work george stibitz inventor digital adding device worked bell laboratories observed burdensome use mechanical calculators gears went home evening intending test idea tinkering stibitz constructed binary adding device davis observes particular importance relay binary states open closed development beginning calculators electrical relays machines built having scope babbage envisioned mathematics th century mid th century symbols rules rapid succession mathematics george boole gottlob frege giuseppe peano reduced arithmetic sequence symbols manipulated rules peano principles arithmetic presented new method attempt axiomatization mathematics symbolic language heijenoort gives frege kudos frege important single work written logic formula language lingua characterica language written special symbols pure thought free rhetorical embellishments constructed specific symbols manipulated according definite rules work frege simplified amplified alfred north whitehead bertrand russell principia mathematica paradoxes time number disturbing paradoxes appeared literature particular burali forti paradox russell paradox richard paradox resultant considerations led kurt g\u00f6del paper specifically cites paradox liar completely reduces rules recursion numbers effective calculability effort solve defined precisely hilbert mathematicians set define meant effective method effective calculation effective calculability calculation succeed rapid succession following appeared alonzo church stephen kleene rosser calculus finely honed definition general recursion work g\u00f6del acting suggestions jacques herbrand cf g\u00f6del princeton lectures subsequent simplifications kleene church proof unsolvable emil post definition effective calculability worker mindlessly following list instructions left right sequence rooms mark erase paper observe paper yes decision instruction alan turing proof unsolvable use automatic machine effect identical post formulation barkley rosser definition effective method terms machine kleene proposal precursor church thesis called thesis years later kleene renaming thesis church thesis proposing turing thesis emil post alan turing remarkable coincidence men knowing describing process men computers working computations yield virtually identical definitions emil post described actions human follows concepts involved symbol space work leading problem answer carried fixed unalterable set directions symbol space way infinite sequence spaces boxes problem solver worker work symbol space capable operating box time box admit possible conditions unmarked having single mark vertical stroke box singled called starting point specific problem given symbolic form finite number boxes input marked stroke likewise answer output given symbolic form configuration marked boxes set directions applicable general problem sets deterministic process applied specific problem process terminates comes direction type stop post turing machine alan turing statue bletchley park alan turing work preceded stibitz unknown stibitz knew work turing turing biographer believed turing use typewriter like model derived youthful alan dreamt inventing typewriters boy mrs turing typewriter begun asking meant calling typewriter mechanical given prevalence morse code telegraphy ticker tape machines teletypewriters conjecture influences turing model computation called turing machine begins post analysis human whittles simple set basic motions states mind continues step creates machine model computation numbers computing normally writing certain symbols paper suppose paper divided squares like child arithmetic book assume computation carried dimensional paper tape divided squares shall suppose number symbols printed finite behaviour moment determined symbols observing state mind moment suppose bound number symbols squares observe moment wishes observe use successive observations suppose number states mind need taken account finite let imagine operations performed split simple operations elementary easy imagine divided turing reduction yields following simple operations include changes symbol observed squares changes squares observed square squares previously observed squares change necessarily invoke change state mind general single operation taken following possible change symbol possible change state mind possible change observed squares possible change state mind construct machine work years later turing expanded analysis thesis definition forceful expression function said effectively calculable values purely mechanical process fairly easy intuitive grasp idea desirable definite mathematical expressible definition discusses history definition pretty presented respect g\u00f6del herbrand kleene church turing post statement literally understanding purely mechanical process carried machine possible mathematical description certain normal form structures machines development ideas leads author definition computable function identification computability effective calculability shall use expression computable function mean function calculable machine let effectively calculable refer intuitive idea particular identification definitions rosser kleene barkley rosser defined effective mathematical method following manner italicization added effective method special sense method step precisely determined certain produce answer finite number steps special meaning different precise definitions given date footnote discussion immediately simplest state post turing says essentially effective method solving certain sets problems exists build machine solve problem set human intervention inserting question later reading answer definitions equivalent matter fact equivalent strong argument correctness rosser rosser footnote references work church kleene definition definability particular church use unsolvable problem elementary number theory herbrand g\u00f6del use recursion particular g\u00f6del use famous paper formally undecidable propositions principia mathematica related systems post turing mechanism models computation stephen kleene defined famous thesis known church turing thesis following context boldface original algorithmic theories setting complete algorithmic theory procedure performable set values independent variables procedure necessarily terminates manner outcome read definite answer yes question predicate value true kleene history number efforts directed refinement definition algorithm activity going issues surrounding particular foundations mathematics especially church turing thesis philosophy mind especially arguments artificial intelligence algorithm abstract machine algorithm engineering algorithmic composition algorithmic synthesis algorithmic trading garbage garbage introduction algorithms list algorithm general topics list important publications theoretical science algorithms numerical mathematics consortium theory computation computability theory computational complexity theory notes references bell gordon newell allen structures readings examples mcgraw hill book company new york isbn includes excellent bibliography references cf chapter turing machines discuss certain enumerable sets effectively mechanically enumerable campagnolo moore costa analog subrecursive functions proc th conference real numbers computers odense university pp reprinted undecidable ff expression church thesis particular page undecidable defines notion effective calculability terms algorithm uses word terminates reprinted undecidable ff church shows unsolvable pages text pages footnotes davis gives commentary article papers g\u00f6del alonzo church turing rosser kleene emil post included cited article listed author davis offers concise biographies leibniz boole frege cantor hilbert g\u00f6del turing von neumann stealing villain brief bios joseph marie jacquard babbage ada lovelace claude shannon howard aiken yuri gurevich sequential abstract state machines capture sequential algorithms acm transactions computational logic vol july pages includes bibliography sources presented american mathematical society september reprinted undecidable ff kleene definition general recursion known mu recursion church paper unsolvable problem elementary number theory proved decision problem undecidable negative result reprinted undecidable ff kleene refined definition general recursion proceeded chapter algorithmic theories posit thesis later repeat thesis kleene church thesis kleene church thesis excellent accessible readable reference source mathematical foundations kosovsky elements mathematical logic application theory subrecursive algorithms lsu publ leningrad markov theory algorithms translated jacques schorr kon pst staff imprint moscow academy sciences ussr jerusalem israel program scientific translations available office technical services dept commerce washington description cm added russian translation works mathematical institute academy sciences ussr original title teoriya algerifmov qa dartmouth college library dept commerce office technical services number ots minsky expands idea algorithm effective procedure chapter computability effective procedures algorithms infinite machines reprinted undecidable ff post defines simple algorithmic like process man writing marks erasing marks going box box eventually halting follows list simple instructions cited kleene source thesis called church turing thesis reprinted undecidable ff rosser famous definition effective method method step precisely predetermined certain produce answer finite number steps machine solve problem set human intervention inserting question later reading answer undecidable cf particular chapter titled algorithms turing machines programs succinct informal definition sequence instructions obeyed robot called algorithm corrections ibid vol pp reprinted undecidable ff turing famous paper completed master dissertation king college cambridge uk reprinted undecidable ff turing paper defined oracle phd thesis princeton usa united states patent trademark office mathematical algorithms patentability manual patent examining procedure mpep latest revision august secondary references isbn pbk isbn pbk rd edition isbn pbk isbn cf chapter spirit truth history leading discussion proof reading knuth donald selected papers analysis algorithms stanford california center study language information knuth donald selected papers design algorithms stanford california center study language information external links dictionary algorithms data structures national institute standards technology algorithms data structures dr nikolai bezroukov algorithm repositories stony brook algorithm repository state university new york stony brook netlib repository university tennessee oak ridge national laboratory collected algorithms acm association computing machinery stanford graphbase stanford university combinatorica university iowa state university new york stony brook library efficient datastructures algorithms leda previously max planck institut f\u00fcr informatik archive interesting code semantic wiki collect categorize relate algorithms data structures lecture notes algorithms course materials jeff erickson university illinois community algorithms google", "Computer education": "literacy ability use computers related technology efficiently range skills covering levels elementary use programming advanced problem solving literacy refer comfort level programs applications associated computers valuable component understanding computers work operate literacy distinguished programming design coding programs familiarity skill use developed countries literacy considered important skill possess developed countries employers want workers basic skills company dependent computers companies try use computers technology improve business efficiency computers common pen paper writing especially youth inversely proportional relationship literacy compositional literacy world users applications especially communicating computers preferred pen paper typewriters ability duplicate retain information ease editing personal computers commonplace powerful concept literacy moving basic functionality powerful applications heading multimedia literacy new literacies frequently assumed internet access common place world countries equal ready access technology skills effectively use significant digital divide technologically advanced enabled countries digital haves nots older workers use internet home illiterate frozen job market relatively unskilled jobs clerking auto parts store digital inclusion forum consortium set joint participation wireless internet institute ibm intel microsoft ohio community organization developed address organizational mission provide comprehensive resource center inform educate share best practices state local government leaders industry institutional stakeholders identifying implementing sustainable market solutions bridge digital divide north america variety private sector nonprofits foundations contribute addressing needs underserved communities scholas example runs programs offering free low cost computers children families underserved communities south bronx new york miami florida columbus ohio science education digital literacy digital divide european driving licence new literacies tagibook references", "Information retrieval": "information retrieval ir activity obtaining information resources relevant information need collection information resources searches based metadata text content based indexing automated information retrieval systems reduce called information overload universities public libraries use ir systems provide access books journals documents web search engines visible ir applications overview information retrieval process begins user enters query queries formal statements information needs example search strings web search engines information retrieval query uniquely identify single object collection instead objects match query different degrees relevancy object entity represented information database user queries matched database information depending application data objects example text documents images audio mind maps videos documents kept stored directly ir instead represented document surrogates metadata ir systems compute numeric score object database matches query rank objects according value ranking objects shown user process iterated user wishes refine query history idea computers search relevant pieces information popularized article think vannevar bush appear bush inspired patents statistical machine filed emanuel goldberg searched documents stored film description searching information described holmstrom detailing early mention univac automated information retrieval systems introduced featured romantic comedy desk set large information retrieval research group formed gerard salton cornell different retrieval techniques shown perform small text corpora cranfield collection thousand documents large scale retrieval systems lockheed dialog came use early department defense national institute standards technology nist cosponsored text retrieval conference trec tipster text program aim look information retrieval community supplying infrastructure needed evaluation text retrieval methodologies large text collection catalyzed research methods scale huge corpora introduction web search engines boosted need large scale retrieval systems model types german entry original source dominik kuropka effectively retrieving relevant documents ir strategies documents typically transformed suitable representation retrieval strategy incorporates specific model document representation purposes picture right illustrates relationship common models picture models categorized according dimensions mathematical basis properties model dimension mathematical basis set theoretic models represent documents sets words phrases similarities usually derived set theoretic operations sets common models standard boolean model extended boolean model fuzzy retrieval algebraic models represent documents queries usually vectors matrices tuples similarity query vector document vector represented scalar value vector space model generalized vector space model enhanced topic based vector space model extended boolean model latent semantic indexing latent semantic analysis probabilistic models treat process document retrieval probabilistic inference similarities computed probabilities document relevant given query probabilistic theorems like bayes theorem models binary independence model probabilistic relevance model based okapi bm relevance function uncertain inference language models divergence randomness model latent dirichlet allocation feature based retrieval models view documents vectors values feature functions features seek best way combine features single relevance score typically learning rank methods feature functions arbitrary functions document query easily incorporate retrieval model feature second dimension properties model models term treat different terms words independent fact usually represented vector space models orthogonality assumption term vectors probabilistic models independency assumption term variables models immanent term allow representation terms degree interdependency terms defined model usually directly indirectly derived dimensional reduction occurrence terms set documents models transcendent term allow representation terms allege interdependency terms defined rely external source degree interdependency terms example human sophisticated algorithms performance correctness measures evaluation information retrieval process assessing meets information needs users traditional evaluation metrics designed boolean retrieval retrieval include precision recall measures evaluating performance information retrieval systems proposed general measurement considers collection documents searched search query common measures described assume ground truth notion relevancy document known relevant non relevant particular query practice queries ill posed different shades relevancy virtually modern evaluation metrics mean average precision discounted cumulative gain designed ranked retrieval explicit rank cutoff taking account relative order documents retrieved search engines giving weight documents returned higher ranks mathematical symbols formulas mean intersection case specifying documents sets cardinality case number documents set integral summation symmetric difference precision precision fraction documents retrieved relevant user information need binary classification precision analogous positive predictive value precision takes retrieved documents account evaluated given cut rank considering topmost results returned measure called precision note meaning usage precision field information retrieval differs definition accuracy precision branches science statistics recall recall fraction documents relevant query successfully retrieved binary classification recall called sensitivity looked probability relevant document retrieved query trivial achieve recall returning documents response query recall needs measure number non relevant documents example computing precision fall proportion non relevant documents retrieved non relevant documents available binary classification fall closely related specificity equal looked probability non relevant document retrieved query trivial achieve fall returning zero documents response query score measure weighted harmonic mean precision recall traditional measure balanced score known measure recall precision evenly weighted general formula non negative real commonly measures measure weights recall twice precision measure weights precision twice recall measure derived van rijsbergen measures effectiveness retrieval respect user attaches times importance recall precision based van rijsbergen effectiveness measure relationship measure better single metric compared precision recall precision recall different information complement combined excels measure reflect average precision precision recall single value metrics based list documents returned systems return ranked sequence documents desirable consider order returned documents presented computing precision recall position ranked sequence documents plot precision recall curve plotting precision function recall average precision computes average value interval area precision recall curve integral practice replaced finite sum position ranked sequence documents rank sequence retrieved documents number retrieved documents precision cut list change recall items finite sum equivalent indicator function equaling item rank relevant document zero note average relevant documents relevant documents retrieved precision score zero authors choose interpolate function reduce impact wiggles curve example pascal visual object classes challenge benchmark vision object detection computes average precision averaging precision set evenly spaced recall levels interpolated precision takes maximum precision recalls greater alternative derive analytical function assuming particular parametric distribution underlying decision values example binormal precision recall curve obtained assuming decision values classes follow gaussian distribution precision modern web scale information retrieval recall longer meaningful metric queries thousands relevant documents users interested reading precision documents useful metric precision corresponds number relevant results search results page fails account positions relevant documents shortcoming query fewer relevant results perfect score easier score manually results need examined determine relevant precision precision requires knowing documents relevant query number relevant documents cutoff calculation varies query query example documents relevant red corpus precision red looks documents returned counts number relevant turns relevancy fraction precision equal recall th position empirically measure highly correlated mean average precision mean average precision mean average precision set queries mean average precision scores query number queries discounted cumulative gain dcg uses graded relevance scale documents result set evaluate usefulness gain document based position result list premise dcg highly relevant documents appearing lower search result list penalized graded relevance value reduced logarithmically proportional position result dcg accumulated particular rank position defined result set vary size different queries systems compare performances normalised version dcg uses ideal dcg end sorts documents result list relevance producing ideal dcg position normalizes score ndcg values queries averaged obtain measure average performance ranking algorithm note perfect ranking algorithm producing ndcg ndcg calculations relative values interval cross query comparable measures mean reciprocal rank spearman rank correlation coefficient bpref summation based measure relevant documents ranked irrelevant documents gmap geometric mean topic average precision gain improvement random measures measures based marginal relevance document diversity visualization visualizations information retrieval performance include graphs chart precision axis recall histograms average precision topics receiver operating characteristic roc curve confusion matrix timeline joseph marie jacquard invents jacquard loom machine use punched cards control sequence operations herman hollerith invents electro mechanical data tabulator punch cards machine readable medium hollerith cards keypunches tabulators process census data emanuel goldberg submits patents statistical machine document search engine photoelectric cells pattern recognition search metadata rolls microfilmed documents late military confronted problems indexing retrieval wartime scientific research documents captured germans vannevar bush think appeared atlantic monthly hans peter luhn research engineer ibm began work mechanized punch card based searching chemical compounds growing concern science gap ussr motivated encouraged funding provided backdrop mechanized literature searching systems allen kent et al invention citation indexing eugene garfield term information retrieval appears coined calvin mooers philip bagley conducted earliest experiment computerized document retrieval master thesis mit allen kent joined case western reserve university eventually associate director center documentation communications research year kent colleagues published paper american documentation describing precision recall measures detailing proposed framework evaluating ir included statistical sampling methods determining number relevant documents retrieved international conference scientific information washington dc included consideration ir systems solution problems identified proceedings international conference scientific information national academy sciences washington dc hans peter luhn published auto encoding documents information retrieval early gerard salton began work ir harvard later moved cornell melvin earl maron john lary kuhns published relevance probabilistic indexing information retrieval journal acm july cyril cleverdon published early findings cranfield studies developing model ir evaluation cyril cleverdon report testing analysis investigation comparative efficiency indexing systems cranfield collection aeronautics cranfield england kent published information analysis retrieval weinberg report science government information gave articulation idea crisis scientific information report named dr alvin weinberg joseph becker robert hayes published text information retrieval becker joseph hayes robert mayo information storage retrieval tools elements theories new york wiley karen sp\u00e4rck jones finished thesis cambridge synonymy semantic classification continued work computational linguistics applies ir national bureau standards sponsored symposium titled statistical association methods mechanized documentation highly significant papers including salton published reference believe smart mid national library medicine developed medlars medical literature analysis retrieval major machine readable database batch retrieval project intrex mit licklider published libraries future swanson involved studies university chicago requirements future catalogs late wilfrid lancaster completed evaluation studies medlars published edition text information retrieval gerard salton published automatic information organization retrieval john sammon jr radc tech report mathematics information storage retrieval outlined vector model sammon nonlinear mapping data structure analysis ieee transactions computers proposal visualization interface ir early online systems nlm aim twx medline lockheed dialog sdc orbit theodor nelson promoting concept hypertext published lib dream machines nicholas jardine cornelis van rijsbergen published use hierarchic clustering information retrieval articulated cluster hypothesis highly influential publications salton fully articulated vector processing framework term discrimination model theory indexing society industrial applied mathematics theory term importance automatic text analysis jasis vector space model automatic indexing cacm acm sigir conference van rijsbergen published information retrieval butterworths heavy emphasis probabilistic models tamas doszkocs implemented cite natural language user interface medline national library medicine cite supported free form query input ranked output relevance feedback international acm sigir conference joint british society ir group cambridge nicholas belkin robert oddy helen brooks proposed ask anomalous state knowledge viewpoint information retrieval important concept automated analysis tool proved ultimately disappointing salton michael mcgill published introduction modern information retrieval mcgraw hill heavy emphasis vector models david blair maron publish evaluation retrieval effectiveness text document retrieval mid efforts develop end user versions commercial ir systems key papers experimental systems visualization interfaces work donald crouch robert korfhage matthew chalmers anselm spoerri world wide web proposals tim berners lee cern trec conference publication korfhage information storage retrieval emphasis visualization multi reference point systems late web search engines implementation features experimental ir systems search engines common maybe best instantiation ir models awards field tony kent strix award gerard salton award adversarial information retrieval collaborative information seeking controlled vocabulary cross language information retrieval data mining european summer school information retrieval human information retrieval information extraction information retrieval facility knowledge visualization multimedia information retrieval list information retrieval systems personal information management relevance information retrieval relevance feedback rocchio classification search index social information seeking special group information retrieval subject indexing temporal information retrieval tf idf xml retrieval references reading christopher manning prabhakar raghavan hinrich sch\u00fctze introduction information retrieval cambridge university press stefan b\u00fcttcher charles clarke gordon cormack information retrieval implementing evaluating search engines mit press cambridge mass external links acm sigir information retrieval special group bcs irsg british society information retrieval specialist group text retrieval conference trec forum information retrieval evaluation information retrieval online book van rijsbergen information retrieval wiki information retrieval facility information retrieval duth trec report information retrieval evaluation techniques ebay measures search relevance", "Data mining": "data mining analysis step knowledge discovery databases process kdd subfield science computational process discovering patterns large data sets big data involving methods intersection artificial intelligence machine learning statistics database systems overall goal data mining process extract information data set transform understandable structure use aside raw analysis step involves database data management aspects data pre processing model inference considerations interestingness metrics complexity considerations post processing discovered structures visualization online updating term misnomer goal extraction patterns knowledge large data extraction data buzzword frequently applied form large scale data information processing collection extraction warehousing analysis statistics application decision support including artificial intelligence machine learning business intelligence popular book data mining practical machine learning tools techniques java covers machine learning material originally named practical machine learning term data mining added marketing reasons general terms large scale data analysis analytics referring actual methods artificial intelligence machine learning appropriate actual data mining task automatic semi automatic analysis large quantities data extract previously unknown interesting patterns groups data records cluster analysis unusual records anomaly detection dependencies association rule mining usually involves database techniques spatial indices patterns seen kind summary input data analysis example machine learning predictive analytics example data mining step identify multiple groups data obtain accurate prediction results decision support data collection data preparation result interpretation reporting data mining step belong overall kdd process additional steps related terms data dredging data fishing data snooping refer use data mining methods sample parts larger population data set small reliable statistical inferences validity patterns discovered methods creating new hypotheses test larger data populations etymology statisticians terms like data fishing data dredging refer considered bad practice analyzing data priori hypothesis term data mining appeared database community short time phrase database mining trademarked hnc san diego based company pitch database mining workstation researchers consequently turned data mining terms include data archaeology information harvesting information discovery knowledge extraction gregory piatetsky shapiro coined term knowledge discovery databases workshop topic kdd term popular ai machine learning community term data mining popular business press communities currently data mining knowledge discovery interchangeably predictive analytics data science terms field background manual extraction patterns data occurred centuries early methods identifying patterns data include bayes theorem regression analysis proliferation ubiquity increasing power technology dramatically increased data collection storage manipulation ability data sets grown size complexity direct hands data analysis increasingly augmented indirect automated data processing aided discoveries science neural networks cluster analysis genetic algorithms decision trees decision rules support vector machines data mining process applying methods intention uncovering hidden patterns large data sets bridges gap applied statistics artificial intelligence usually provide mathematical background database management exploiting way data stored indexed databases execute actual learning discovery algorithms efficiently allowing methods applied larger data sets research evolution premier professional body field association computing machinery acm special group sig knowledge discovery data mining sigkdd acm sig hosted annual international conference published proceedings published biannual academic journal titled sigkdd explorations science conferences data mining include cikm conference acm conference information knowledge management dmin conference international conference data mining dmkd conference research issues data mining knowledge discovery ecdm conference european conference data mining ecml pkdd conference european conference machine learning principles practice knowledge discovery databases edm conference international conference educational data mining infocom conference ieee infocom icdm conference ieee international conference data mining kdd conference acm sigkdd conference knowledge discovery data mining mldm conference machine learning data mining pattern recognition pakdd conference annual pacific asia conference knowledge discovery data mining paw conference predictive analytics world sdm conference siam international conference data mining siam sstd symposium symposium spatial temporal databases wsdm conference acm conference web search data mining data mining topics present data management database conferences icde conference sigmod conference international conference large data bases process knowledge discovery databases kdd process commonly defined stages selection pre processing transformation data mining interpretation evaluation exists variations theme cross industry standard process data mining crisp dm defines phases business understanding data understanding data preparation modeling evaluation deployment simplified process pre processing data mining results validation polls conducted crisp dm methodology leading methodology data miners data mining standard named polls semma times people reported crisp dm teams researchers published reviews data mining process models azevedo santos conducted comparison crisp dm semma pre processing data mining algorithms target data set assembled data mining uncover patterns actually present data target data set large contain patterns remaining concise mined acceptable time limit common source data data mart data warehouse pre processing essential analyze multivariate data sets data mining target set cleaned data cleaning removes observations containing noise missing data data mining data mining involves common classes tasks anomaly detection outlier change deviation detection identification unusual data records interesting data errors require investigation association rule learning dependency modelling searches relationships variables example supermarket gather data customer purchasing habits association rule learning supermarket determine products frequently bought use information marketing purposes referred market basket analysis clustering task discovering groups structures data way similar known structures data classification task generalizing known structure apply new data example mail program attempt classify mail legitimate spam regression attempts function models data error summarization providing compact representation data set including visualization report generation results validation data mining unintentionally misused produce results appear significant actually predict future behavior reproduced new sample data bear little use results investigating hypotheses performing proper statistical hypothesis testing simple version problem machine learning known overfitting problem arise different phases process train test split applicable sufficient prevent happening final step knowledge discovery data verify patterns produced data mining algorithms occur wider data set patterns data mining algorithms necessarily valid common data mining algorithms patterns training set present general data set called overfitting overcome evaluation uses test set data data mining algorithm trained learned patterns applied test set resulting output compared desired output example data mining algorithm trying distinguish spam legitimate emails trained training set sample mails trained learned patterns applied test set mails trained accuracy patterns measured mails correctly classify number statistical methods evaluate algorithm roc curves learned patterns meet desired standards subsequently necessary evaluate change pre processing data mining steps learned patterns meet desired standards final step interpret learned patterns turn knowledge standards efforts define standards data mining process example european cross industry standard process data mining crisp dm java data mining standard jdm development successors processes crisp dm jdm active stalled jdm withdrawn reaching final draft exchanging extracted models particular use predictive analytics key standard predictive model markup language pmml xml based language developed data mining group dmg supported exchange format data mining applications suggests covers prediction models particular data mining task high importance business applications extensions cover example subspace clustering proposed independently dmg notable uses data mining digital data available today notable examples data mining business medicine science surveillance privacy concerns ethics term data mining ethical implications associated mining information relation peoples behavior ethical ways data mining cases contexts raise questions privacy legality ethics particular data mining government commercial data sets national security law enforcement purposes total information awareness program advise raised privacy concerns data mining requires data preparation uncover information patterns compromise confidentiality privacy obligations common way occur data aggregation data aggregation involves combining data possibly sources way facilitates analysis identification private individual level data deducible apparent data mining se result preparation data purposes analysis threat individual privacy comes play data compiled cause data miner access newly compiled data set able identify specific individuals especially data originally anonymous recommended individual aware following data collected purpose data collection known data mining projects data able data use data derivatives status security surrounding access data collected data updated data modified anonymous individuals readily identified identified anonymized data sets potentially contain information allow identification individuals occurred journalists able individuals based set search histories inadvertently released aol situation europe europe strong privacy laws efforts underway strengthen rights consumers safe harbor principles currently effectively expose european users privacy exploitation companies consequence edward snowden global surveillance disclosure increased discussion revoke agreement particular data fully exposed national security agency attempts reach agreement failed situation united states united states privacy concerns addressed congress passage regulatory controls health insurance portability accountability act hipaa hipaa requires individuals informed consent information provide intended present future uses according article biotech business week practice hipaa offer greater protection longstanding regulations research arena says aahc importantly rule goal protection informed consent undermined complexity consent forms required patients participants approach level average individuals underscores necessity data anonymity data aggregation mining practices information privacy legislation hipaa family educational rights privacy act ferpa applies specific areas law addresses use data mining majority businesses controlled legislation copyright law situation europe lack flexibilities european copyright database law mining copyright works web mining permission copyright owner legal database pure data europe likely copyright database rights exist data mining subject regulations database directive recommendation hargreaves review led uk government amend copyright law allow content mining limitation exception second country world japan introduced exception data mining restriction copyright directive uk exception allows content mining non commercial purposes uk copyright law allow provision overridden contractual terms conditions european commission facilitated stakeholder discussion text data mining title licences europe focus solution legal issue licences limitations exceptions led representatives universities researchers libraries civil society groups open access publishers leave stakeholder dialogue situation united states contrast europe flexible nature copyright law particular fair use means content mining america fair use countries israel taiwan south korea viewed legal content mining transformative supplant original work viewed lawful fair use example google book settlement presiding judge case ruled google digitisation project copyright books lawful transformative uses digitisation project displayed text data mining software free open source data mining software applications carrot text search results clustering framework chemicalize org chemical structure miner web search engine elki university research project advanced cluster analysis outlier detection methods written java language gate natural language processing language engineering tool knime konstanz information miner user friendly comprehensive data analytics framework massive online analysis moa real time big data stream mining concept drift tool java programming language ml flex software package enables users integrate party machine learning packages written programming language execute classification analyses parallel multiple computing nodes produce html reports classification results mlpack library collection ready use machine learning algorithms written language nltk natural language toolkit suite libraries programs symbolic statistical natural language processing nlp python language opennn open neural networks library orange component based data mining machine learning software suite written python language programming language software environment statistical computing data mining graphics gnu project scavis java cross platform data analysis framework developed argonne national laboratory senticnet api semantic affective resource opinion mining sentiment analysis tanagra visualisation oriented data mining software teaching torch open source deep learning library lua programming language scientific computing framework wide support machine learning algorithms uima uima unstructured information management architecture component framework analyzing unstructured content text audio video originally developed ibm weka suite machine learning software applications written java programming language commercial data mining software applications angoss knowledgestudio data mining tool provided angoss clarabridge enterprise class text analytics solution grapheme data mining visualization software provided ichrome hp vertica analytics platform data mining software provided hp ibm spss modeler data mining software provided ibm kxen modeler data mining tool provided kxen lionsolver integrated software application data mining business intelligence modeling implements learning intelligent optimization lion approach microsoft analysis services data mining software provided microsoft netowl suite multilingual text entity analytics products enable data mining opentext big data analytics visual data mining predictive analysis open text corporation oracle data mining data mining software oracle pseven platform automation engineering simulation analysis optimization data mining provided datadvance qlucore omics explorer data mining software provided qlucore rapidminer environment machine learning data mining experiments sas enterprise miner data mining software provided sas institute statistica data miner data mining software provided statsoft marketplace surveys researchers organizations conducted reviews data mining tools surveys data miners identify strengths weaknesses software packages provide overview behaviors preferences views data miners reports include wiley reviews data mining knowledge discovery rexer analytics data miner surveys forrester research predictive analytics data mining solutions report gartner magic quadrant report robert nisbet series articles data mining tools best crm haughton et al review data mining software packages american statistician goebel gruenwald survey data mining knowledge discovery software tools sigkdd explorations methods application domains application examples related topics data mining analyzing data information extracting information data references reading cabena peter hadjnian pablo stadler rolf verhees jaap zanasi alessandro discovering data mining concept implementation prentice hall isbn chen han yu data mining overview database perspective knowledge data engineering ieee transactions feldman ronen sanger james text mining handbook cambridge university press isbn guo yike grossman robert editors high performance data mining scaling algorithms applications systems kluwer academic publishers han jiawei micheline kamber jian pei data mining concepts techniques morgan kaufmann hastie trevor tibshirani robert friedman jerome elements statistical learning data mining inference prediction springer isbn liu bing web data mining exploring hyperlinks contents usage data springer isbn nisbet robert elder john miner gary handbook statistical analysis data mining applications academic press elsevier isbn poncelet pascal masseglia florent teisseire maguelonne editors october data mining patterns new methods applications information science reference isbn tan pang ning steinbach michael kumar vipin introduction data mining isbn theodoridis sergios koutroumbas konstantinos pattern recognition th edition academic press isbn weiss sholom indurkhya nitin predictive data mining morgan kaufmann free weka software ye nong handbook data mining mahwah nj lawrence erlbaum external links", "Hardware and architecture": "projected diagram nighthawk conducts live exercise bombing run gbu laser guided bombs engineering hardware architecture refers identification physical components description called hardware design model allows hardware designers understand components fit architecture provides software component designers important information needed software development integration clear definition hardware architecture allows traditional engineering disciplines electrical mechanical engineering work effectively develop manufacture new machines devices components hardware expression engineering industry explicitly distinguish electronic hardware software runs hardware automation software engineering disciplines need simply sort modern automobile runs vastly software apollo spacecraft modern aircraft function running tens millions instructions embedded distributed aircraft resident standard hardware specialized hardward components ic wired logic gates analog hybrid devices digital components need effectively model separate physical components combine form complex systems important wide range applications including computers personal digital assistants pdas cell phones surgical instrumentation satellites submarines hardware architecture representation engineered engineered electronic hardware process discipline effectively implementing design generally larger integrated encompassing information software device prototyping representation convey information related elements comprising hardware relationships elements rules governing relationships electric multi turn actuator controls process sequence steps prescribed produce change architecture design architecture hardware set constraints discipline body knowledge inform practitioners effective way design set constraints hardware architecture primarily concerned internal electrical rarely mechanical interfaces components subsystems interface external environment especially devices operated electronic displays viewed user special interface known human interface aka human interface hci called man machine interface integrated circuit ic designers driving current technologies innovative approaches new products multiple layers active devices proposed single chip opening opportunities disruptive microelectronic optoelectronic new hardware implementation background hardware architecture example integrated handheld medical device diabetes monitoring boat layout detailed equipment hardware specification functionality prior advent digital computers electronics engineering disciplines terms hardware commonly today arrival digital computers scene development software engineering separate discipline necessary distinguish engineered hardware artifacts software artifacts combined artifacts programmable hardware artifact machine lacks software program impotent software artifact program equally impotent alter sequential states suitable hardware machine hardware machine software program designed perform illimitable number abstract physical tasks software engineering disciplines engineering disciplines communications terms hardware software came distinguish hardware runs software program software hardware device complete program hardware engineer architect deals exclusively hardware device software engineer architect deals exclusively software program systems engineer systems architect responsible seeing software program capable properly running hardware device composed entities capable properly interacting external environment especially user performing intended function hardware architecture abstract representation electronic device capable running fixed changeable program hardware architecture generally includes form analog digital hybrid electronic electronic mechanical sensors actuators hardware design viewed partitioning scheme algorithm considers present foreseeable requirements arranges necessary hardware components workable set cleanly bounded subsystems parts required partitioning scheme exclusive inclusive exhaustive major purpose partitioning arrange elements hardware subsystems minimum electrical connections electronic communications needed software hardware good subsystem tends seen meaningful object clear allocation user requirements architecture hardware software provides effective basis validation tests user requirements built aided manufacturing cam electronic design automation eda elmer fem solver finite element analysis hardware architect integrated circuit ic chip soc large scale integration vlsi vhsic hardware description language vhdl technology cad tcad open cascade technology asic open source hardware references", "Networks and communications": "network data network network allows computers exchange data networks networked computing devices exchange data network links data connections connections nodes established cable media wireless media best known network internet network devices originate route terminate data called network nodes nodes include hosts personal computers phones servers networking hardware devices said networked device able exchange information device direct connection networks differ transmission media carry signals communications protocols organize network traffic network size topology organizational intent cases communications protocols layered work specific general communications protocols physical layer directly deals transmission media networks support applications access world wide web shared use application storage servers printers fax machines use email instant messaging applications history chronology significant network developments includes late early networks communicating computers included military radar semi automatic ground environment sage anatolii ivanovich kitov proposed central committee communist party soviet union detailed plan organisation control soviet armed forces soviet economy basis network computing centres commercial airline reservation semi automatic business research environment sabre went online connected mainframes licklider developed working group called intergalactic network precursor arpanet advanced research projects agency arpa researchers dartmouth college developed dartmouth time sharing distributed users large systems year massachusetts institute technology research group supported general electric bell labs route manage telephone connections leonard kleinrock paul baran donald davies independently developed network systems packets transfer information computers network thomas marill lawrence roberts created wide area network wan immediate precursor arpanet roberts program manager western electric introduced widely telephone switch implemented true control university california los angeles stanford research institute university california santa barbara university utah connected beginning arpanet network kbit circuits commercial services deployed later underlying infrastructure expanding tcp ip networks robert metcalfe wrote formal memo xerox parc describing ethernet networking based aloha network developed norman abramson colleagues university hawaii july robert metcalfe david boggs published paper ethernet distributed packet switching local networks collaborated patents received robert metcalfe pursued making ethernet open standard john murphy datapoint corporation created arcnet token passing network share storage devices transmission speed capacity ethernet increased mbit mbit ethernet supported transmission speeds gigabit ability ethernet scale easily quickly adapting support new fiber optic cable speeds contributing factor continued use properties networking considered branch electrical engineering science information technology engineering relies theoretical practical application related disciplines network facilitates interpersonal communications allowing people communicate efficiently easily email instant messaging chat rooms telephone video telephone calls video conferencing providing access information shared storage devices important feature networks network allows sharing files data types information giving authorized users ability access information stored computers network network allows sharing network computing resources users access use resources provided devices network printing document shared network printer distributed computing uses computing resources network accomplish tasks network crackers deploy viruses worms devices connected network prevent devices accessing network denial service attack network packet communication links support packets traditional point point links simply transmit data bit stream information networks carried packets network packet formatted unit data list bits bytes usually tens bytes kilobytes long carried packet switched network packet networks data formatted packets sent network destination packets arrive reassembled original message packets bandwidth transmission medium better shared users network circuit switched user sending packets link filled packets users cost shared relatively little interference provided link isn overused packets consist kinds data control information user data known payload control information provides data network needs deliver user data example source destination network addresses error detection codes sequencing information typically control information packet headers trailers payload data route packet needs network immediately available case packet queued waits link free network topology physical layout network usually important topology connects network nodes diagrams physical network topological geographic symbols diagrams usually denote network links network nodes network links transmission media referred literature physical media link devices form network include electrical cable ethernet homepna power line communication hn optical fiber fiber optic communication radio waves wireless networking osi model defined layers physical layer data link layer widely adopted family transmission media local area network lan technology collectively known ethernet media protocol standards enable communication networked devices ethernet defined ieee ethernet transmits data copper fiber cables wireless lan standards defined ieee use radio waves use infrared signals transmission medium power line communication uses building power cabling transmit data wired technologies fiber optic cables transmit light network node orders following wired technologies roughly slowest fastest transmission speed coaxial cable widely cable television systems office buildings work sites local area networks cables consist copper aluminum wire surrounded insulating layer typically flexible material high dielectric constant surrounded conductive layer insulation helps minimize interference distortion transmission speed ranges million bits second million bits second itu hn technology uses existing home wiring coaxial cable phone lines power lines create high speed gigabit local area network twisted pair wire widely medium twisted pair cabling consist copper wires twisted pairs ordinary telephone wires consist insulated copper wires twisted pairs network cabling wired ethernet defined ieee consists pairs copper cabling utilized voice data transmission use wires twisted helps reduce crosstalk electromagnetic induction transmission speed ranges million bits second billion bits second twisted pair cabling comes forms unshielded twisted pair utp shielded twisted pair stp form comes category ratings designed use scenarios map showing submarine optical fiber cables world optical fiber glass fiber carries pulses light represent data advantages optical fibers metal wires low transmission loss immunity electrical interference optical fibers simultaneously carry multiple wavelengths light greatly increases rate data sent helps enable data rates trillions bits second optic fibers long runs cable carrying high data rates undersea cables interconnect continents price main factor distinguishing wired wireless technology options business wireless options command price premium purchasing wired computers printers devices financial benefit making decision purchase hard wired technology products review restrictions limitations selections necessary business employee needs override cost considerations wireless technologies computers connected networks wireless links terrestrial microwave terrestrial microwave communication uses earth based transmitters receivers resembling satellite dishes terrestrial microwaves low gigahertz range limits communications line sight relay stations spaced approximately apart communications satellites satellites communicate microwave radio waves deflected earth atmosphere satellites stationed space typically geosynchronous orbit equator earth orbiting systems capable receiving relaying voice data tv signals cellular pcs systems use radio communications technologies systems divide region covered multiple geographic areas area low power transmitter radio relay antenna device relay calls area area radio spread spectrum technologies wireless local area networks use high frequency radio technology similar digital cellular low frequency radio technology wireless lans use spread spectrum technology enable communication multiple devices limited area ieee defines common flavor open standards wireless radio wave technology known wifi free space optical communication uses visible invisible light communications cases line sight propagation limits physical positioning communicating devices exotic technologies attempts transporting data exotic media ip avian carriers humorous april fool request comments issued rfc implemented real life extending internet interplanetary dimensions radio waves cases large round trip delay time gives slow way communication prevent sending large amounts information network nodes apart physical transmission medium networks comprise additional basic building blocks network interface controller nics repeaters hubs bridges switches routers modems firewalls network interfaces atm network interface form accessory card lot network interfaces built network interface controller nic hardware provides ability access transmission media ability process low level network information example nic connector accepting cable aerial wireless transmission reception associated circuitry nic responds traffic addressed network address nic ethernet networks network interface controller unique media access control mac address usually stored controller permanent memory avoid address conflicts network devices institute electrical electronics engineers ieee maintains administers mac address uniqueness size ethernet mac address octets significant octets reserved identify nic manufacturers manufacturers assigned prefixes uniquely assign significant octets ethernet interface produce repeaters hubs repeater electronic device receives network signal cleans unnecessary noise regenerates signal retransmitted higher power level obstruction signal cover longer distances degradation twisted pair ethernet configurations repeaters required cable runs longer meters fiber optics repeaters tens hundreds kilometers apart repeater multiple ports known hub repeaters work physical layer osi model repeaters require small time regenerate signal cause propagation delay affects network performance result network architectures limit number repeaters row ethernet rule hubs obsoleted modern switches repeaters long distance links notably undersea cabling bridges network bridge connects filters traffic network segments data link layer layer osi model form single network breaks network collision domain maintains unified broadcast domain network segmentation breaks large congested network aggregation smaller efficient networks bridges come basic types local bridges directly connect lans remote bridges create wide area network wan link lans remote bridges connecting link slower end networks largely replaced routers wireless bridges join lans connect remote devices lans switches network switch device forwards filters osi layer datagrams ports based mac addresses packets switch distinct hub forwards frames physical ports involved communication ports connected thought multi port bridge learns associate physical ports mac addresses examining source addresses received frames unknown destination targeted switch broadcasts ports source switches normally numerous ports facilitating star topology devices cascading additional switches multi layer switches capable routing based layer addressing additional logical levels term switch loosely include devices routers bridges devices distribute traffic based load based application content web url identifier routers typical home small office router showing adsl telephone line ethernet network cable connections router internetworking device forwards packets networks processing routing information included packet datagram internet protocol information layer routing information processed conjunction routing table forwarding table router uses routing table determine forward packets destination routing table include null interface known black hole interface data processing said data modems modems modulator demodulator connect network nodes wire originally designed digital network traffic wireless carrier signals modulated digital signal produce analog signal tailored required properties transmission modems commonly telephone lines digital subscriber line technology firewalls firewall network device controlling network security access rules firewalls typically configured reject access requests unrecognized sources allowing actions recognized ones vital role firewalls play network security grows parallel constant increase cyber attacks network structure network topology layout organizational hierarchy interconnected nodes network different network topologies affect throughput reliability critical technologies bus networks single failure cause network fail entirely general robust network expensive install common layouts common network topologies common layouts bus network nodes connected common medium medium layout original ethernet called base base star network nodes connected special central node typical layout wireless lan wireless client connects central wireless access point ring network node connected left right neighbour node nodes connected node reach node traversing nodes left rightwards fiber distributed data interface fddi use topology mesh network node connected arbitrary number neighbours way traversal node fully connected network node connected node network tree network nodes arranged hierarchically note physical layout nodes network necessarily reflect network topology example fddi network topology ring actually counter rotating rings physical topology star neighboring connections routed central physical location overlay network sample overlay network overlay network virtual network built network nodes overlay network connected virtual logical links link corresponds path physical links underlying network topology overlay network differ underlying example peer peer networks overlay networks organized nodes virtual links run internet overlay networks invention networking systems connected telephone lines modems data network existed striking example overlay network internet internet initially built overlay telephone network today internet node communicate virtually underlying mesh sub networks wildly different topologies technologies address resolution routing means allow mapping fully connected ip overlay network underlying network example overlay network distributed hash table maps keys nodes network case underlying network ip network overlay network table actually map indexed keys overlay networks proposed way improve internet routing quality service guarantees achieve higher quality streaming media previous proposals intserv diffserv ip multicast seen wide acceptance largely require modification routers network hand overlay network incrementally deployed end hosts running overlay protocol software cooperation internet service providers overlay network control packets routed underlying network overlay nodes control example sequence overlay nodes message traverses reaches destination example akamai technologies manages overlay network provides reliable efficient content delivery kind multicast academic research includes end multicast resilient routing quality service studies communications protocols tcp ip model internet layering scheme relation common protocols layered figure message flows presence router red flows effective communication paths black paths actual paths communications protocol set rules exchanging information network links protocol stack osi model protocol leverages services protocol important example protocol stack http world wide web protocol running tcp ip internet protocols ieee wi fi protocol stack wireless router home user personal user surfing web whilst use protocol layering today ubiquitous field networking historically criticized researchers principal reasons firstly abstracting protocol stack way cause higher layer duplicate functionality lower layer prime example error recovery link basis end end basis secondly common protocol implementation layer require data state addressing information present layer defeating point separating layers place example tcp uses ecn field ipv header indication congestion ip network layer protocol tcp transport layer protocol communication protocols characteristics connection oriented connectionless use circuit mode packet switching use hierarchical addressing flat addressing communication protocols described ieee complete ieee protocol suite provides diverse set networking capabilities protocols flat addressing scheme operate levels osi model example mac bridging ieee deals routing ethernet packets spanning tree protocol ieee describes vlans ieee defines port based network access control protocol forms basis authentication mechanisms vlans wlans home user sees user enter wireless access key ethernet ethernet simply called lan family protocols wired lans described set standards called ieee published institute electrical electronics engineers wireless lan wireless lan widely known wlan wifi probably known member ieee protocol family home users today standarized ieee shares properties wired ethernet internet protocol suite internet protocol suite called tcp ip foundation modern networking offers connection connection oriented services inherently unreliable network traversed data gram transmission internet protocol ip level core protocol suite defines addressing identification routing specifications internet protocol version ipv ipv generation protocol enlarged addressing capability sonet sdh synchronous optical networking sonet synchronous digital hierarchy sdh standardized multiplexing protocols transfer multiple digital bit streams optical fiber lasers originally designed transport circuit mode communications variety different sources primarily support real time uncompressed circuit switched voice encoded pcm pulse code modulation format protocol neutrality transport oriented features sonet sdh obvious choice transporting asynchronous transfer mode atm frames asynchronous transfer mode asynchronous transfer mode atm switching technique networks uses asynchronous time division multiplexing encodes data small fixed sized cells differs protocols internet protocol suite ethernet use variable sized packets frames atm similarity circuit packet switched networking makes good choice network handle traditional high throughput data traffic real time low latency content voice video atm uses connection oriented model virtual circuit established endpoints actual data exchange begins role atm diminishing favor generation networks plays role mile connection internet service provider home user geographic scale network characterized physical capacity organizational purpose use network including user authorization access rights differ accordingly nanoscale network nanoscale communication network key components implemented nanoscale including message carriers leverages physical principles differ macroscale communication mechanisms nanoscale communication extends communication small sensors actuators biological systems tends operate environments harsh classical communication personal area network personal area network pan network communication different information technological devices close person examples devices pan personal computers printers fax machines telephones pdas scanners video game consoles pan include wired wireless devices reach pan typically extends meters wired pan usually constructed usb firewire connections technologies bluetooth infrared communication typically form wireless pan local area network local area network lan network connects computers devices limited geographical area home school office building closely positioned group buildings device network node wired lans likely based ethernet technology newer standards itu hn provide way create wired lan existing wiring coaxial cables telephone lines power lines interconnected devices use network layer layer handle multiple subnets represented different colors inside library mbit ethernet connections user device gigabit ethernet connection central router called layer switches ethernet interfaces support internet protocol correct access routers router distribution router connects internet academic networks customer access routers defining characteristics lan contrast wide area network wan include higher data transfer rates limited geographic range lack reliance leased lines provide connectivity current ethernet ieee lan technologies operate data transfer rates gbit ieee investigates standardization gbit rates lan connected wan router home area network home area network han residential lan communication digital devices typically deployed home usually small number personal computers accessories printers mobile computing devices important function sharing internet access broadband service cable tv digital subscriber line dsl provider storage area network storage area network san dedicated network provides access consolidated block level data storage sans primarily storage devices disk arrays tape libraries optical jukeboxes accessible servers devices appear like locally attached devices operating san typically network storage devices generally accessible local area network devices cost complexity sans dropped early levels allowing wider adoption enterprise small medium sized business environments campus area network campus area network interconnection lans limited geographical area networking equipment switches routers transmission media optical fiber copper plant cat cabling entirely owned campus tenant owner enterprise university government example university campus network likely link variety campus buildings connect academic colleges departments library student residence halls backbone network backbone network network infrastructure provides path exchange information different lans sub networks backbone tie diverse networks building different buildings wide area example large company implement backbone network connect departments located world equipment ties departmental networks constitutes network backbone designing network backbone network performance network congestion critical factors account normally backbone network capacity greater individual networks connected example backbone network internet backbone set wide area networks wans core routers tie networks connected internet metropolitan area network metropolitan area network man large network usually spans city large campus wide area network wide area network wan network covers large geographic area city country spans distances wan uses communications channel combines types media telephone lines cables air waves wan makes use transmission facilities provided common carriers telephone companies wan technologies generally function lower layers osi reference model physical layer data link layer network layer enterprise private network enterprise private network network single organization builds interconnect office locations production sites head offices remote offices shops share resources virtual private network virtual private network vpn overlay network links nodes carried open connections virtual circuits larger network internet instead physical wires data link layer protocols virtual network said tunneled larger network case common application secure communications public internet vpn need explicit security features authentication content encryption vpns example separate traffic different user communities underlying network strong security features vpn best effort performance defined service level agreement sla vpn customer vpn service provider generally vpn topology complex point point global area network global area network gan network supporting mobile arbitrary number wireless lans satellite coverage areas key challenge mobile communications handing user communications local coverage area ieee project involves succession terrestrial wireless lans organizational scope networks typically managed organizations private enterprise networks use combination intranets extranets provide network access internet single owner permits virtually unlimited global connectivity intranets intranet set networks control single administrative entity intranet uses ip protocol ip based tools web browsers file transfer applications administrative entity limits use intranet authorized users commonly intranet internal lan organization large intranet typically web server provide users organizational information intranet router local area network extranet extranet network administrative control single organization supports limited connection specific external network example organization provide access aspects intranet share data business partners customers entities necessarily trusted security standpoint network connection extranet implemented wan technology internetwork internetwork connection multiple networks common routing technology routers internet file internet map jpg thumb right partial map internet based january data opte org line drawn nodes representing ip addresses length lines indicative delay nodes graph represents class networks reachable internet largest example internetwork global interconnected governmental academic corporate public private networks based networking technologies internet protocol suite successor advanced research projects agency network arpanet developed darpa united states department defense internet communications backbone underlying world wide web www participants internet use diverse array methods documented standardized protocols compatible internet protocol suite addressing ip addresses administered internet assigned numbers authority address registries service providers large enterprises exchange information reachability address spaces border gateway protocol bgp forming redundant worldwide mesh transmission paths darknet darknet overlay network typically running internet accessible specialized software darknet anonymizing network connections trusted peers called friends non standard protocols ports darknets distinct distributed peer peer networks sharing anonymous ip addresses publicly shared users communicate little fear governmental corporate interference routing routing calculates good paths network information example node node best routes likely thickest routes routing process selecting network paths carry network traffic routing performed kinds networks including circuit switching networks packet switched networks packet switched networks routing directs packet forwarding transit logically addressed network packets source ultimate destination intermediate nodes intermediate nodes typically network hardware devices routers bridges gateways firewalls switches general purpose computers forward packets perform routing specialized hardware suffer limited performance routing process usually directs forwarding basis routing tables maintain record routes network destinations constructing routing tables held router memory important efficient routing routing algorithms use network path time multipath routing techniques enable use multiple alternative paths usually multiple routes taken choose different elements considered decide routes installed routing table sorted priority prefix length longer subnet masks preferred independent routing protocol different routing protocol metric lower metric cost preferred valid routing protocol administrative distance lower distance preferred valid different routing protocols routing narrow sense term contrasted bridging assumption network addresses structured similar addresses imply proximity network structured addresses allow single routing table entry represent route group devices large networks structured addressing routing narrow sense outperforms unstructured addressing bridging routing dominant form addressing internet bridging widely localized environments network service network services applications hosted servers network provide functionality members users network help network operate world wide web mail printing network file sharing examples known network services network services dns domain names ip mac addresses people remember names like nm lan better numbers like dhcp ensure equipment network valid ip address services usually based service protocol defines format sequencing messages clients servers network service network performance quality service depending installation requirements network performance usually measured quality service product parameters affect typically include throughput jitter bit error rate latency following list gives examples network performance measures circuit switched network type packet switched network viz atm circuit switched networks circuit switched networks network performance synonymous grade service number rejected calls measure network performing heavy traffic loads types performance measures include level noise echo atm asynchronous transfer mode atm network performance measured line rate quality service qos data throughput connect time stability technology modulation technique modem enhancements ways measure performance network network different nature design performance modelled instead measured example state transition diagrams model queuing performance circuit switched network network planner uses diagrams analyze network performs state ensuring network optimally designed network congestion network congestion occurs link node carrying data quality service deteriorates typical effects include queueing delay packet loss blocking new connections consequence incremental increases offered load lead small increase network throughput actual reduction network throughput network protocols use aggressive retransmissions compensate packet loss tend systems state network congestion initial load reduced level normally induce network congestion networks protocols exhibit stable states level load stable state low throughput known congestive collapse modern networks use congestion control congestion avoidance techniques try avoid congestion collapse include exponential backoff protocols csma ca original ethernet window reduction tcp fair queueing devices routers method avoid negative effects network congestion implementing priority schemes packets transmitted higher priority priority schemes solve network congestion help alleviate effects congestion services example method avoid network congestion explicit allocation network resources specific flows example use contention free transmission opportunities cftxops itu hn standard provides high speed gbit local area networking existing home wires power lines phone lines coaxial cables internet rfc addresses subject congestion control network resilience network resilience ability provide maintain acceptable level service face faults challenges normal operation security network security network security consists provisions policies adopted network administrator prevent monitor unauthorized access misuse modification denial network network accessible resources network security authorization access data network controlled network administrator users assigned id password allows access information programs authority network security variety networks public private secure daily transactions communications businesses government agencies individuals network surveillance network surveillance monitoring data transferred networks internet monitoring surreptitiously behest governments corporations criminal organizations individuals legal require authorization court independent agency network surveillance programs widespread today internet traffic potentially monitored clues illegal activity surveillance useful governments law enforcement maintain social control recognize monitor threats prevent investigate criminal activity advent programs total information awareness program technologies high speed surveillance computers biometrics software laws communications assistance law enforcement act governments possess unprecedented ability monitor activities citizens civil rights privacy groups reporters borders electronic frontier foundation american civil liberties union expressed concern increasing surveillance citizens lead mass surveillance society limited political personal freedoms fears led numerous lawsuits hepting hacktivist group anonymous hacked government websites protest considers draconian surveillance end end encryption end end encryption ee digital communications paradigm uninterrupted protection data traveling communicating parties involves originating party encrypting data intended recipient decrypt dependency parties end end encryption prevents intermediaries internet providers application service providers discovering tampering communications end end encryption generally protects confidentiality integrity examples end end encryption include pgp email otr instant messaging zrtp telephony tetra radio typical server based communications systems include end end encryption systems guarantee protection communications clients servers communicating parties examples non ee systems google talk yahoo messenger facebook dropbox systems example lavabit secretink described offering end end encryption systems normally offer end end encryption turned contain door subverts negotiation encryption key communicating parties example skype hushmail end end encryption paradigm directly address risks communications endpoints technical exploitation clients poor quality random number generators key escrow ee address traffic analysis relates things identities end points times quantities messages sent views networks users network administrators typically different views networks users share printers servers workgroup usually means geographic location lan network administrator responsible network running community connection local area thought set arbitrarily located users share set servers possibly communicate peer peer technologies network administrators networks physical logical perspectives physical perspective involves geographic locations physical cabling network elements routers bridges application layer gateways interconnect transmission media logical networks called tcp ip architecture subnets map transmission media example common practice campus buildings set lan cables building appear common subnet virtual lan vlan technology users administrators aware varying extents trust scope characteristics network tcp ip architectural terminology intranet community private administration usually enterprise accessible authorized users employees intranets connected internet generally limited connection extranet extension intranet allows secure communications users outside intranet business partners customers unofficially internet set users enterprises content providers interconnected internet service providers isp engineering viewpoint internet set subnets aggregates subnets share registered ip address space exchange information reachability ip addresses border gateway protocol typically human readable names servers translated ip addresses transparently users directory function domain dns internet business business business consumer consumer consumer communications money sensitive information exchanged communications apt protected form communications security mechanism intranets extranets securely superimposed internet access general internet users administrators secure virtual private network vpn technology comparison network diagram software cyberspace history internet network simulation network planning design references reading shelly gary et al discovering computers edition wendell odom rus healy denise donohue ccie routing switching indianapolis cisco press kurose james keith ross networking approach featuring internet pearson education william stallings networking internet protocols technology pearson education important publications networks network communication architecture protocols osi network architecture layers model dimitri bertsekas robert gallager data networks prentice hall external links ieee ethernet manufacturer information"}